{
  "active": false,
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Pedidos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pedidos": {
      "main": [
        [
          {
            "node": "Get Proveedores",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Orders": {
      "main": [
        [
          {
            "node": "Get Products",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Proveedores": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "MENSAJE_PRODUCTOS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Send Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MENSAJE_PRODUCTOS": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Productos Solicitados",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Productos Solicitados": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Status": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Order": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Send David",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send David": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensaje": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Update Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get Orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-23T15:09:09.625Z",
  "id": "AeIk980LmLtYOkh9",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Recibir pedidos Clientes",
  "nodes": [
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "PRODUCTOS",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        480,
        240
      ],
      "id": "d205e797-897a-482b-a746-050d8aa579c9",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Paso 1: eliminar duplicados (por row_number)\nconst uniqueRows = [];\nconst seen = new Set();\n\nfor (const item of items) {\n  const key = `${item.json.row_number}-${item.json.ID}-${item.json[\"N SOLICITUD\"]}`;\n  if (!seen.has(key)) {\n    uniqueRows.push(item.json);\n    seen.add(key);\n  }\n}\n\n// Paso 2: preparar pedidos por proveedor y por solicitud\nconst pedidosPorProveedor = {};\n\nfor (const row of uniqueRows) {\n  const cantidadTotal = row[\"CANT_PALETS\"];\n  const numPedido  = row[\"NUM_PEDIDO\"];\n\n  if (cantidadTotal === 0) continue;\n\n  const proveedores = Object.keys(row)\n    .filter(key => key.startsWith(\"PROVEEDOR\"))\n    .map(key => row[key]?.toString())\n    .filter(prov => prov && prov.trim() !== \"\");\n\n  if (proveedores.length === 0) continue;\n\n  const cantidadPorProveedor = Math.floor(cantidadTotal / proveedores.length);\n  let resto = cantidadTotal % proveedores.length;\n\n  for (const proveedor of proveedores) {\n    const proveedorId = proveedor.toString();\n    const cantidadAsignada = cantidadPorProveedor + (resto > 0 ? 1 : 0);\n    if (resto > 0) resto--;\n\n    if (cantidadAsignada === 0) continue;\n\n    if (!pedidosPorProveedor[proveedorId]) {\n      pedidosPorProveedor[proveedorId] = [];\n    }\n\n    pedidosPorProveedor[proveedorId].push({\n      row_number: row.row_number,\n      ID_PRODUCTO: row.ID,\n      NUM_PEDIDO: numPedido,\n      PRODUCTO: row[\"PRODUCTOS\"],\n      CANT_PALETS: cantidadAsignada,\n      CAJAS: row[\"CAJAS\"],\n      CANT_CAJAS: row[\"CANT_CAJAS\"],\n      PALET: row[\"PALET\"],\n      CLIENTE: row[\"NOMBRE_CLIENTE\"],\n      CIF_CLIENTE: row[\"CIF_CLIENTE\"],\n      FECHA: row[\"FECHA\"],\n    });\n  }\n}\n\n// Paso 3: construir resultados\nconst results = [];\n\nfor (const [proveedorId, productos] of Object.entries(pedidosPorProveedor)) {\n  if (productos.length > 0) {\n    results.push({\n      json: {\n        PROVEEDOR_ID: proveedorId,\n        PRODUCTOS: productos\n      }\n    });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        240
      ],
      "id": "324de7a6-ed57-413b-8e5b-2473c8b48c7b",
      "name": "Pedidos"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1662149016,
          "mode": "list",
          "cachedResultName": "PRODUCTOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=1662149016"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "PRODUCTOS",
              "lookupValue": "={{ $json.PRODUCTOS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        280,
        240
      ],
      "id": "bd627dc4-c8f0-45e2-8181-66172489e187",
      "name": "Get Products",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 88857449,
          "mode": "list",
          "cachedResultName": "Pedidos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=88857449"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "STATUS",
              "lookupValue": "Pendiente"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        40,
        240
      ],
      "id": "e8d3ccfa-3f84-41da-bb89-b87e96649706",
      "name": "Get Orders",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1996169798,
          "mode": "list",
          "cachedResultName": "Proveedores",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=1996169798"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "PROVEEDOR_ID",
              "lookupValue": "={{ $json.PROVEEDOR_ID }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        920,
        240
      ],
      "id": "7412f75c-fb4e-476d-8b8c-eaa6b692476b",
      "name": "Get Proveedores",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1140,
        240
      ],
      "id": "99e68bd7-758a-47f3-b94f-46af13653e8f",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1660,
        -60
      ],
      "id": "f064d339-cf54-480e-b341-96d1fce3caee",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\nconst zonaHoraria = 'America/Bogota'; //cambiar el pais\nconst ahora = new Date(new Date().toLocaleString('en-US', { timeZone: zonaHoraria }));\n\n// Función para formatear fecha como \"DD/MM/YYYY\"\nfunction formatearFecha(fecha) {\n  const dia = String(fecha.getDate()).padStart(2, '0');\n  const mes = String(fecha.getMonth() + 1).padStart(2, '0');\n  const año = fecha.getFullYear();\n  return `${dia}/${mes}/${año}`;\n}\n\n// Fecha de hoy\nconst fechaHoy = formatearFecha(ahora);\n\n// Fecha de mañana (hoy + 1 día)\nconst manana = new Date(ahora);\nmanana.setDate(manana.getDate() + 1);\nconst fechaManana = formatearFecha(manana);\n\n// Determinar saludo y entrega\nconst hora = ahora.getHours();\nconst esTarde = hora >= 17;\n\nconst saludo = hora < 12 ? 'Buen día' : 'Buena tarde';\nconst entrega = esTarde ? `mañana - (${fechaManana})` : `hoy - (${fechaHoy})`;\nconst fechaentrega = esTarde ? `${fechaManana}` : `${fechaHoy}`;\n\nfor (const item of items) {\n  const productos = item.json.PRODUCTOS;\n  const productosPorPedido = {};\n\n  for (const prod of productos) {\n    if (prod.CANT_PALETS > 0) {\n      const numPedido = prod.NUM_PEDIDO || 'SIN_PEDIDO';\n      if (!productosPorPedido[numPedido]) {\n        productosPorPedido[numPedido] = [];\n      }\n\n      productosPorPedido[numPedido].push(\n        `- ${prod.CANT_PALETS} x ${prod.CANT_CAJAS} - ${prod.PRODUCTO} - ${prod.PALET} - ${prod.CAJAS}`\n      );\n    }\n  }\n\n  if (Object.keys(productosPorPedido).length > 0) {\n    let mensajeProductos = `${saludo}, para ${entrega}\\n\\n`;\n\n    for (const [numPedido, listaProductos] of Object.entries(productosPorPedido)) {\n      mensajeProductos += `➡️ *pedido N°: ${numPedido}*\\n`;\n      mensajeProductos += listaProductos.join('\\n') + '\\n\\n';\n    }\n\n    mensajeProductos = mensajeProductos.trim();\n\n    results.push({\n      json: {\n        ...item.json,\n        MENSAJE_PROVEEDOR: mensajeProductos,\n        FECHA: fechaentrega,\n        ENTREGA: entrega\n      }\n    });\n  } else {\n    results.push({\n      json: {\n        ...item.json,\n        MENSAJE_PROVEEDOR: '',\n        FECHA: fechaHoy\n      }\n    });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        240
      ],
      "id": "8ac00661-0a4e-4767-8ab9-fadbcd699554",
      "name": "MENSAJE_PRODUCTOS"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1840,
        240
      ],
      "id": "64366952-5984-42a3-9086-42b9d310a810",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// 1. Extraer y unir todos los productos válidos (CANT_PALETS > 0)\nlet productosValidos = [];\n\nfor (const item of items) {\n  const proveedor = item.json;\n  const productos = proveedor.PRODUCTOS || [];\n  const status = \"Solicitado\";\n\n  const filtrados = productos\n    .filter(p => p.CANT_PALETS > 0)\n    .map(p => ({\n      row_number: p.row_number,\n      ID_PRODUCTO: p.ID_PRODUCTO,\n      PROVEEDOR_ID: proveedor.PROVEEDOR_ID,\n      FINCA: proveedor.FINCA,\n      N_SOLICITUD: p.N_SOLICITUD,\n      PRODUCTO: p.PRODUCTO,\n      STATUS: status,\n    }));\n\n  productosValidos.push(...filtrados);\n}\n\n// 2. Eliminar duplicados por combinación ID_PRODUCTO + N_SOLICITUD + numero de fila\nconst vistos = new Set();\nconst productosUnicos = productosValidos.filter(p => {\n  const clave = `${p.N_SOLICITUD}-${p.row_number}`;\n  if (vistos.has(clave)) return false;\n  vistos.add(clave);\n  return true;\n});\n\n// 3. Devolver los productos únicos\nreturn productosUnicos.map(p => ({ json: p }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1620,
        240
      ],
      "id": "1707438f-7a46-40d2-9655-4df6e8c89646",
      "name": "Productos Solicitados"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 88857449,
          "mode": "list",
          "cachedResultName": "Pedidos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=88857449"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $json.row_number }}",
            "STATUS": "={{ $json.STATUS }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "NUM_PEDIDO",
              "displayName": "NUM_PEDIDO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CIF_CLIENTE",
              "displayName": "CIF_CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "NOMBRE_CLIENTE",
              "displayName": "NOMBRE_CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRODUCTOS",
              "displayName": "PRODUCTOS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PALET",
              "displayName": "PALET",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CANT_PALETS",
              "displayName": "CANT_PALETS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CAJAS",
              "displayName": "CAJAS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CANT_CAJAS",
              "displayName": "CANT_CAJAS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FECHA",
              "displayName": "FECHA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Stock",
              "displayName": "Stock",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ID_PRODUCTO",
              "displayName": "ID_PRODUCTO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PROVEEDOR_ID",
              "displayName": "PROVEEDOR_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FINCA",
              "displayName": "FINCA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRODUCTO",
              "displayName": "PRODUCTO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2280,
        240
      ],
      "id": "bd9bad2c-c87c-4bc5-87d6-23a198529b87",
      "name": "Update Status",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Pedro",
        "remoteJid": "=+{{ $json[\"Nº DE TELÉFONO\"] }}",
        "messageText": "={{ $json.MENSAJE_PROVEEDOR }}",
        "options_message": {
          "delay": 1000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1880,
        -60
      ],
      "id": "a9b0af60-a491-4d1e-9c22-1a12fbb81c08",
      "name": "Send Order",
      "credentials": {
        "evolutionApi": {
          "id": "OFo9A7x3qE1W1DKN",
          "name": "Evolution account Pedro"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        800,
        1000
      ],
      "id": "29725714-83d7-4af9-84ca-f9519ea81597",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Pedro",
        "remoteJid": "=+573045809637",
        "messageText": "={{ $json.MENSAJE_RESUMEN }}",
        "options_message": {
          "delay": 1000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1020,
        1000
      ],
      "id": "47fe1267-9245-4c91-b8c8-92a1106e5a1f",
      "name": "Send David",
      "credentials": {
        "evolutionApi": {
          "id": "OFo9A7x3qE1W1DKN",
          "name": "Evolution account Pedro"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## SEND MESSAGE SUPPLIER",
        "height": 260,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        -120
      ],
      "id": "2bc06a75-8cae-4876-a763-71201726cecd",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## UPDATE STATUS",
        "height": 260,
        "width": 640
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        180
      ],
      "id": "1f3e66b0-9f57-4fb2-a7c8-d7fc12ec6b43",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## SEND MESSAGE BOSS",
        "height": 260,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        940
      ],
      "id": "83d16269-98ba-4f92-8a85-d912f4432c92",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nconst status = \"Solicitado\";\n\nfor (const item of items) {\n  const productos = item.json.PRODUCTOS;\n  const finca = item.json.FINCA;\n  const proveedorId = item.json.PROVEEDOR_ID;\n  const fecha =item.json.FECHA;\n  const entrega = item.json.ENTREGA;\n\n\n\n  for (const prod of productos) {\n    if (prod.CANT_PALETS > 0) {\n      results.push({\n        json: {\n          NUM_PEDIDO: prod.NUM_PEDIDO,\n          FECHA: fecha,\n          PROVEEDOR_ID: proveedorId,\n          FINCA: finca,\n          ID_PRODUCTO: prod.ID_PRODUCTO,\n          PRODUCTO: prod.PRODUCTO,\n          CANT_PALETS: prod.CANT_PALETS,\n          CANT_CAJAS: prod.CANT_CAJAS,\n          PALET: prod.PALET,\n          CAJAS: prod.CAJAS,\n          ENTREGA: entrega,\n          STATUS: status,\n        }\n      });\n    }\n  }\n}\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1620,
        540
      ],
      "id": "d74158ea-2491-4118-96b4-d3dcfddf6fa7",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 581820534,
          "mode": "list",
          "cachedResultName": "Solicitud a Proveedor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=581820534"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "NUM_PEDIDO",
              "displayName": "NUM_PEDIDO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "FECHA",
              "displayName": "FECHA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PROVEEDOR_ID",
              "displayName": "PROVEEDOR_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FINCA",
              "displayName": "FINCA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID_PRODUCTO",
              "displayName": "ID_PRODUCTO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PRODUCTO",
              "displayName": "PRODUCTO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CANT_PALETS",
              "displayName": "CANT_PALETS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CANT_CAJAS",
              "displayName": "CANT_CAJAS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PALET",
              "displayName": "PALET",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CAJAS",
              "displayName": "CAJAS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ENTREGA",
              "displayName": "ENTREGA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2280,
        540
      ],
      "id": "1461f4aa-fb3d-4398-99ad-51d8350b771a",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "content": "## UPDATE REQUEST TO SUPPLIER",
        "height": 260,
        "width": 520
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        460
      ],
      "id": "60141390-30cf-40af-b979-a1fe8bd34a03",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 18
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -180,
        1000
      ],
      "id": "2d9097cf-3f0e-4cf1-b77a-a731176cc3d2",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 581820534,
          "mode": "list",
          "cachedResultName": "Solicitud a Proveedor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=581820534"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "FECHA",
              "lookupValue": "={{ $json.formattedDate }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        280,
        1000
      ],
      "id": "8d12c7a9-28ab-44bd-b1fe-05aa6e3d320d",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json[\"Day of month\"] }}/{{ $json.Month }}/{{ $json.Year }}",
        "format": "=dd/MM/yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        40,
        1000
      ],
      "id": "919eeb7b-eb97-4148-90d5-560fb1f9496f",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "jsCode": "// Nodo Code para N8N - Extractor de pedidos únicos\n// Extrae NUM_PEDIDO únicos con CIF_CLIENTE, STATUS y FECHA\n\nconst inputData = $input.all();\nconst pedidosUnicos = new Map();\n\n// Procesar cada item de entrada\ninputData.forEach(item => {\n  const data = item.json;\n  const fechaPedido = data.FECHA; // Fecha del pedido principal (fuera de PRODUCTOS)\n  \n  // Procesar cada producto para extraer los pedidos\n  if (data.PRODUCTOS && Array.isArray(data.PRODUCTOS)) {\n    data.PRODUCTOS.forEach(producto => {\n      const numPedido = producto.NUM_PEDIDO;\n      const cifCliente = producto.CIF_CLIENTE;\n      \n      // Solo agregar si no existe ya en el Map\n      if (numPedido && !pedidosUnicos.has(numPedido)) {\n        pedidosUnicos.set(numPedido, {\n          NUM_PEDIDO: numPedido,\n          FECHA: fechaPedido,\n          CIF_CLIENTE: cifCliente,\n          STATUS: \"Solicitado\" // Status por defecto según tu requerimiento\n        });\n      }\n    });\n  }\n});\n\n// Convertir el Map a array de objetos\nconst resultado = Array.from(pedidosUnicos.values());\n\n// Retornar los resultados\nreturn resultado.map(pedido => ({\n  json: pedido\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1640,
        860
      ],
      "id": "c681c1ec-861c-4a7b-98b3-c70fa29ac719",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI",
          "mode": "list",
          "cachedResultName": "SOLICITUD DE PEDIDOS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1306082699,
          "mode": "list",
          "cachedResultName": "Resumen",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xq63Q1Fp7Oxu1ZCBgp8KPL8wJbjYmY6dH519Je813SI/edit#gid=1306082699"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "NUM_PEDIDO",
              "displayName": "NUM_PEDIDO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FECHA",
              "displayName": "FECHA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CIF_CLIENTE",
              "displayName": "CIF_CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "NOTAS",
              "displayName": "NOTAS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2300,
        860
      ],
      "id": "7a801262-d82c-463e-ad61-de6f97bffeb8",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "content": "## ADD SUMMARY",
        "height": 260,
        "width": 520
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        780
      ],
      "id": "44e6d2f5-2a2b-4f4d-bf3b-dc6d18084c23",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "jsCode": "// Agrupar por finca y concatenar mensaje\nconst agrupados = {};\n\nconst zonaHoraria = 'America/Bogota'; // cambiar el país según tu zona horaria\nconst ahora = new Date(new Date().toLocaleString('en-US', { timeZone: zonaHoraria }));\nconst hora = ahora.getHours();\n\nconst saludo = hora < 12 ? 'Buen día' : 'Buena tarde';\n\nfor (const item of items) {\n  const finca = item.json.FINCA;\n  if (!agrupados[finca]) agrupados[finca] = [];\n\n  agrupados[finca].push(\n    `- ${item.json.CANT_PALETS} x ${item.json.CANT_CAJAS} - ${item.json.PRODUCTO.toLowerCase()} - ${item.json.PALET.toLowerCase()} - ${item.json.CAJAS.toLowerCase()}`\n  );\n}\n\n// Luego construyes mensajes:\nconst mensajes = [];\n\nfor (const finca in agrupados) {\n  const productos = agrupados[finca].join('\\n\\n');\n  const entrega = items.find(i => i.json.FINCA === finca)?.json.ENTREGA;\n\n  mensajes.push({\n    json: {\n      FINCA: finca,\n      MENSAJE_RESUMEN: `${saludo} - ${finca} - pedido para ${entrega}\\n\\n${productos}`\n    }\n  });\n}\n\nreturn mensajes;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        1000
      ],
      "id": "010c1c09-1b9d-4977-b893-bc0b1e92f793",
      "name": "Mensaje"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2080,
        260
      ],
      "id": "c4ad6b4c-edd3-4439-ab87-3457015fbe6b",
      "name": "Wait",
      "webhookId": "76dbbe67-0287-425f-8299-bef21be90c71"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1840,
        540
      ],
      "id": "89030fa0-3929-4cc6-93c2-b42d28c97ed5",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2060,
        540
      ],
      "id": "3be68e3f-f139-4ae2-861b-0be047e24ce4",
      "name": "Wait1",
      "webhookId": "76dbbe67-0287-425f-8299-bef21be90c71"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1840,
        860
      ],
      "id": "c3ba8435-24c1-4295-adea-55e2443537c5",
      "name": "Loop Over Items4"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2060,
        860
      ],
      "id": "a559f4e8-af19-428d-a6c1-bd398c8c5627",
      "name": "Wait2",
      "webhookId": "76dbbe67-0287-425f-8299-bef21be90c71"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 20
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -200,
        240
      ],
      "id": "66be278a-0c60-46b9-a9d3-06a2d78b3ab6",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "808c656d-b50e-4c0c-a23e-9704f4dba824",
              "leftValue": "={{ $json.PROVEEDOR_ID }}",
              "rightValue": "STOCK",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        440
      ],
      "id": "9d94153f-bbe2-4215-9999-0f28c8186058",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        900,
        580
      ],
      "id": "80315bc2-2f75-4c96-ae48-56d836df8b11",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "content": "# SE RECIBE Y PROCESA LOS PEDIDOS DE LOS CLIENTES, SE ASIGNAN A LAS FINCAS EQUITATIVAMENTE",
        "height": 340,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        180
      ],
      "id": "5083c9f2-1abf-407c-b4e2-f7f8a71bddc4",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# AL FINAL DEL DIA SE ENVIA RESUMEN AL JEFE CON TODOS LOS PEDIDOS QUE SE HICIERON A CADA FINCA",
        "height": 340,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        900
      ],
      "id": "97838b49-757e-416a-a5a8-052dbf55c477",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Se reparte equitativamente los pedidos, si hay stock se asigna a Stock y se descuenta del stock, (pendiente)",
        "height": 200,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        -20
      ],
      "id": "bad5a787-9842-4a1b-8d80-580514f5c73f",
      "name": "Sticky Note7"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-05T18:09:53.664Z",
  "versionId": "bc1cceee-23bb-4f98-8c47-dcaaf4df03ef"
}