{
  "active": true,
  "connections": {
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Acuerdo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "numeros a letras",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Call Vapi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "numeros a letras": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Vapi": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-17T02:41:10.603Z",
  "id": "ThFlyQpC5o39DT4U",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "cobranzas REDEGAS",
  "nodes": [
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RqlQgYOojCTEUq3oEXEN3C8NrUBaI3mWFu8-lYhI5iE",
          "mode": "list",
          "cachedResultName": "Demo cobranzas Redegas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqlQgYOojCTEUq3oEXEN3C8NrUBaI3mWFu8-lYhI5iE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqlQgYOojCTEUq3oEXEN3C8NrUBaI3mWFu8-lYhI5iE/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "Llamar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1340,
        75
      ],
      "id": "1534c9ea-e0e4-4ba9-8e84-53b666b38b64",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.vapi.ai/call/{{ $('Call Vapi').item.json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 69a50667-894b-4992-8cfe-d66f01e3de6d"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -20,
        0
      ],
      "id": "439d5a9f-116e-4e7b-9568-abf60ac6d512",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "25b553b7-dad2-4bb2-ad96-a5197c64fee0",
              "leftValue": "={{ $json.status }}",
              "rightValue": "ended",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        75
      ],
      "id": "489ccd96-d8c2-4f1c-9957-56a0b197a8cf",
      "name": "If",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -240,
        75
      ],
      "id": "4c19924e-40f3-4646-93ef-8fb49b2011d0",
      "name": "Wait1",
      "webhookId": "67c3f5ef-96f8-4dad-8cc9-3620256fbc8c",
      "notesInFlow": false
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "=Telefono",
              "value": "={{ $json.Telefono }}"
            },
            {
              "key": "RowID",
              "value": "={{ $json.row_number }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -1120,
        75
      ],
      "id": "a7d4fd73-fb1d-403d-a800-ea584d9f27fc",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 4,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1560,
        75
      ],
      "id": "dbf0c1d1-910a-4d26-a1f8-34355439a0cb",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ebc8c00e-294e-4600-b04c-1688673c8491",
              "name": "Empresa",
              "value": "Redegas",
              "type": "string"
            },
            {
              "id": "ca9e963d-c8a7-4bfd-9b36-608146e4e47c",
              "name": "Cliente",
              "value": "={{ $json.Cliente.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "e6956c3d-7dd7-4f7e-aac9-80328e15c90a",
              "name": "Telefono",
              "value": "={{ $json.Telefono }}",
              "type": "string"
            },
            {
              "id": "c94d2151-8d2b-483e-b690-9ae1e38681d8",
              "name": "row_number",
              "value": "={{ $json.row_number }}",
              "type": "string"
            },
            {
              "id": "696fcbc7-16b1-4266-9bca-3fb4097a523c",
              "name": "valorDeudaNumerico",
              "value": "={{ $json[\"Valor Deuda\"] }}",
              "type": "string"
            },
            {
              "id": "d9ca1a80-2826-4ecd-a892-27d9c0021464",
              "name": "deudaTexto",
              "value": "={{ $json.deudaTexto }}",
              "type": "string"
            },
            {
              "id": "632c7d80-c9da-477f-967f-6ad804ba1090",
              "name": "porcentajeTexto",
              "value": "={{ $json.porcentajeTexto }}",
              "type": "string"
            },
            {
              "id": "018e7058-fbd1-4b13-b01b-9da32454355d",
              "name": "valorAbonoNumerico",
              "value": "={{ $json.abonoRecomendadoNumero }}",
              "type": "string"
            },
            {
              "id": "c00645ab-b36c-4b31-a389-8c0bfc2c5ff2",
              "name": "abonoTexto",
              "value": "={{ $json.abonoRecomendadoTexto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -680,
        75
      ],
      "id": "79e0a770-1535-4793-9cfa-25ae4dc59727",
      "name": "Data"
    },
    {
      "parameters": {
        "jsCode": "function numeroALetras(num, moneda = 'pesos', agregarPorCiento = false) {\n  const unidades = ['cero', 'uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve'];\n  const especiales = ['diez', 'once', 'doce', 'trece', 'catorce', 'quince'];\n  const decenas = ['', '', 'veinte', 'treinta', 'cuarenta', 'cincuenta', 'sesenta', 'setenta', 'ochenta', 'noventa'];\n  const centenas = ['', 'cien', 'doscientos', 'trescientos', 'cuatrocientos', 'quinientos', 'seiscientos', 'setecientos', 'ochocientos', 'novecientos'];\n\n  if (num === 0) {\n    if (agregarPorCiento) return 'cero por ciento';\n    return `cero ${moneda}`;\n  }\n\n  let partes = [];\n\n  if (num >= 1000000) {\n    const millones = Math.floor(num / 1000000);\n    const millonesTexto = millones === 1 ? 'un' : numeroALetras(millones, '', false);\n    partes.push(`${millonesTexto} millÃ³n${millones > 1 ? 'es' : ''}`);\n    num %= 1000000;\n  }\n\n  if (num >= 1000) {\n    const miles = Math.floor(num / 1000);\n    if (miles === 1) {\n      partes.push('mil');\n    } else {\n      partes.push(`${numeroALetras(miles, '', false)} mil`);\n    }\n    num %= 1000;\n  }\n\n  if (num > 0) {\n    const cent = Math.floor(num / 100);\n    const resto = num % 100;\n\n    if (cent > 0) {\n      if (cent === 1 && resto > 0) {\n        partes.push('ciento');\n      } else {\n        partes.push(`${centenas[cent]}`);\n      }\n    }\n\n    const dec = Math.floor(resto / 10);\n    const uni = resto % 10;\n\n    if (resto >= 10 && resto < 16) {\n      partes.push(especiales[resto - 10]);\n    } else {\n      if (dec > 1) {\n        partes.push(`${decenas[dec]}${uni > 0 ? ' y ' + unidades[uni] : ''}`);\n      } else if (dec === 1) {\n        partes.push(especiales[uni]);\n      } else if (uni > 0) {\n        partes.push(unidades[uni]);\n      }\n    }\n  }\n\n  const resultado = partes.join(' ');\n\n  if (agregarPorCiento) return resultado + ' por ciento';\n  if (moneda) {\n    const monedaFinal = num === 1\n      ? moneda.slice(0, -1)  // \"peso\" o \"dÃ³lar\"\n      : moneda;              // \"pesos\" o \"dÃ³lares\"\n    return resultado + ' ' + monedaFinal;\n  }\n\n  return resultado;\n}\n\n// Procesar todos los elementos del input\nconst items = $input.all();\n\nconst porcentajeAbono = 50;\n\nreturn items.map(item => {\n  const data = item.json;\n  const deuda = data[\"Valor Deuda\"];\n  const moneda = data[\"Moneda\"] || 'pesos';\n  const abono = Math.round((deuda * porcentajeAbono) / 100);\n\n  return {\n    json: {\n      ...data,\n      deudaTexto: numeroALetras(deuda, moneda),\n      abonoRecomendadoNumero: abono,\n      abonoRecomendadoTexto: numeroALetras(abono, moneda),\n      porcentajeTexto: numeroALetras(porcentajeAbono, '', true)\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        75
      ],
      "id": "f47bf5eb-ed6a-4efa-9d72-5fd2dea2f736",
      "name": "numeros a letras"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 69a50667-894b-4992-8cfe-d66f01e3de6d"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"assistantId\": \"6f47c324-cbe6-45cf-8a60-9b1a6eecd6b9\",\n  \"assistantOverrides\": {\n    \"variableValues\": {\n      \"name\": \"{{ $json.Cliente }}\",\n      \"ValorDeuda\": \"{{ $json.valorDeudaNumerico }}\",\n      \"Cuota50%\": \"{{ $json.valorAbonoNumerico }}\"\n    }\n  },\n  \"customer\": {\n    \"number\": \"+{{ $json.Telefono }}\"\n  },\n  \"phoneNumberId\": \"9efa67ba-4ff4-4a2b-87ad-685cc861d774\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -460,
        75
      ],
      "id": "7649edf4-7008-4617-a32a-a72d204f1efc",
      "name": "Call Vapi"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1RqlQgYOojCTEUq3oEXEN3C8NrUBaI3mWFu8-lYhI5iE",
          "mode": "list",
          "cachedResultName": "Demo cobranzas Redegas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqlQgYOojCTEUq3oEXEN3C8NrUBaI3mWFu8-lYhI5iE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19gvXNU8KV83531dkcE8nth8RUQq6Nx0znLJf3WDoEmc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('Google Sheets').item.json.row_number }}",
            "Status": "={{ $json.analysis.structuredData.Status }}",
            "Acuerdo": "={{ $json.analysis.summary }}",
            "Contacto Adicional": "={{ $json.analysis.structuredData.contacto_adicional }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Cliente",
              "displayName": "Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Telefono",
              "displayName": "Telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Valor Deuda",
              "displayName": "Valor Deuda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Acuerdo",
              "displayName": "Acuerdo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Contacto Adicional",
              "displayName": "Contacto Adicional",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        420,
        75
      ],
      "id": "92edc9a0-ab67-49c4-bbbb-673c3996a5c5",
      "name": "Acuerdo",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        12
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2025-05-23T16:21:56.783Z",
      "updatedAt": "2025-05-23T16:21:56.783Z",
      "id": "SdEjHNBeYrt6vLJK",
      "name": "Demo"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-25T18:45:32.433Z",
  "versionId": "0e248452-de91-4569-b821-75023490ed97"
}