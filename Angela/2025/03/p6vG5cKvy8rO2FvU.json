{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "esperando medicamento": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Unir Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Send Content1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Content1": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Send Content12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Send Content11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Send Content13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Data": {
      "main": [
        [
          {
            "node": "Push Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Mensajes": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maestro de Agentes": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transferir a un asesor para cotizar": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "quotation_Agent": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cotizacion aceptada": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transferir a un asesor": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "FAQ": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Obtener Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-17T15:47:02.602Z",
  "id": "p6vG5cKvy8rO2FvU",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Sandbox : : Multiagent - WSP",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agent-main",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -6260,
        660
      ],
      "id": "80d8d237-a4f4-4177-9158-b7cb738bf561",
      "name": "Webhook",
      "webhookId": "d9d0848c-516c-4050-ab58-52672745a146"
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool *esperando medicamento*:**  \n\nUsa esta herramienta para asignar el tag esperando medicamento, siempre que el usuario no tenga los medicamentos a la mano, o en ese momento usas esta herramienta\n\n\n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nsubscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "62243192"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -3660,
        780
      ],
      "id": "b7a827d6-ca44-46c0-b717-bf02550c385a",
      "name": "esperando medicamento",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -3900,
        780
      ],
      "id": "9134969a-9247-40c5-9676-0285d354fb35",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "7B9Ztbhb2FvSX13q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('Obtener Data').item.json.text }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4940,
        660
      ],
      "id": "0d93d14b-5e8e-49c9-a358-a77b75a515ba",
      "name": "If1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4720,
        760
      ],
      "id": "50ba0d42-3ebc-44ee-9970-00f07ab01571",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.   \n- **No incluyas datos sensibles** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2860,
        560
      ],
      "id": "dfb9e50d-5fd9-4a7b-8403-8a34ae08365e",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "n0YNBr6r2ZQqJ11H",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"whatsapp\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte1) }} \n\n\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        160
      ],
      "id": "10d1a40a-208f-433c-b219-15b7d8200206",
      "name": "Send Content1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Wait').item.json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2260,
        160
      ],
      "id": "a1e4fe0d-bb72-461f-a375-db2c96cbfff1",
      "name": "Redis5",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2480,
        360
      ],
      "id": "128e4ec7-ba6c-4572-a99c-fdd2dfc2cca8",
      "name": "Wait11",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"whatsapp\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte2) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2040,
        260
      ],
      "id": "c5eef348-b90e-4c52-8d80-f8689ca52724",
      "name": "Send Content11",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2480,
        760
      ],
      "id": "a2906740-9e99-4cc3-8540-a1167a434978",
      "name": "Wait12",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"whatsapp\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte3) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2040,
        660
      ],
      "id": "e884269d-20b1-4211-9527-5c908a97f163",
      "name": "Send Content12",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2260,
        760
      ],
      "id": "0e9517a7-d6b0-48bb-b5fd-e3772d988628",
      "name": "If12"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2040,
        860
      ],
      "id": "dd143db6-a7f1-4037-8c29-5fa335f099b2",
      "name": "No Operation, do nothing11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2260,
        360
      ],
      "id": "e6452743-1ecc-4d4f-a74c-88aeb9a8ad87",
      "name": "If13"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2040,
        460
      ],
      "id": "22af28f1-401f-43d0-a442-c4ea44d5d485",
      "name": "No Operation, do nothing12"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2480,
        1160
      ],
      "id": "7b97b5bb-add0-4ffa-9158-5dac7c338561",
      "name": "Wait13",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"whatsapp\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte4) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2040,
        1060
      ],
      "id": "943ac3c3-a7c5-482c-97ad-39cd237d7e80",
      "name": "Send Content13",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2260,
        1160
      ],
      "id": "b0e329fe-fa24-4305-8a30-ef7a73c6b529",
      "name": "If14"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2040,
        1260
      ],
      "id": "cbcd9117-55c4-43a3-97b9-73e07aba86fc",
      "name": "No Operation, do nothing13"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $json.user_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5160,
        660
      ],
      "id": "7a1784c0-04a0-4cf3-804c-f167d084b25f",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Corrige mensajes de usuarios quitando caracteres raros, errores ortográficos y signos innecesarios como acentos mal puestos, pero sin cambiar el sentido original del mensaje",
              "role": "system"
            },
            {
              "content": "=Corrige el siguiente mensaje:\\n\\n{{ $json.message }}\\n\\nDevuelve solo el mensaje corregido"
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -4500,
        560
      ],
      "id": "5c828f48-abe3-4e7b-9042-e5a5c80f7fe9",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "n0YNBr6r2ZQqJ11H",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -5380,
        660
      ],
      "id": "16e09ff1-dd7c-4e88-b454-170261d660e7",
      "name": "Wait",
      "webhookId": "6106138b-d4fb-467b-9fc4-b36946cbbe05"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.user_id }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5600,
        660
      ],
      "id": "21a2d863-287a-44e0-aa48-2486b8d9990b",
      "name": "Push Message",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.body.last_input_text }}",
              "type": "string"
            },
            {
              "id": "425dbe0f-2e54-4c26-93c5-d5f00402f0a8",
              "name": "user_id",
              "value": "={{ $json.body.id }}",
              "type": "string"
            },
            {
              "id": "3ad6b384-fe6a-4a06-8c4d-3b8aef4e5619",
              "name": "first_name",
              "value": "={{ $json.body.first_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "039a45bc-efc0-4144-8498-9761b4c72a22",
      "name": "Obtener Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5820,
        660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('Wait').item.json.user_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('Wait').item.json.first_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4120,
        560
      ],
      "id": "1168180a-86ac-4e69-b99e-31c858ea0e60",
      "name": "Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Redis').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4720,
        560
      ],
      "id": "a657c853-38b2-4676-acb6-a8ba18a02658",
      "name": "Unir Mensajes"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message:{{ $json.message }},\nuser_id:{{ $json.user_id }},\nfirst_name: {{ $json.first_name }}",
        "options": {
          "systemMessage": "=📌 Rol: Asesor de Angela\n\nEres un asesor humano experto que representa a **Angela**. Tu principal objetivo es guiar a los usuarios de manera cercana y consultiva, ayudándolos a comprender y aprovechar nuestros servicios o productos, responder con empatía y dirigir la conversación de forma natural hacia el flujo adecuadamente, sin repetir el mismo mensaje 2 veces con el mismo usuario.\n\nTu rol es interpretar las consultas de los usuarios y dirigirlas hacia la herramienta adecuada,\n\n### **🎯 Flujo Conversacional Estructurado**\n\nUsa los siguientes 3 numerales solo como una guía o template, esto quiere decir que no tienes que responder estrictamente con los mismos textos pero si teniendo en cuenta la intencion de los mismos.\n\n1. **Presentación inicial (siempre que inicie conversación):**\n\nIntención:\nGenerar confianza y despertar interés inicial.\nSe busca presentarse de forma cálida y empática, introduciendo la propuesta de valor principal: ayudar a los usuarios a manejar mejor la toma de medicamentos, enfocándose en tranquilidad y reducción de preocupaciones. Termina con una pregunta para abrir la conversación y fomentar la curiosidad.\n\nEjemplo: \n```\n\"Hola [Nombre] 🙂 \nSoy Angela, mucho gusto saludarte. \nEn Angela queremos ayudarte a que nunca más se te pase una dosis y que siempre te tomes bien tus medicamentos. Nuestro servicio está pensado para que las personas que toman muchos medicamentos tengan más tranquilidad y menos preocupaciones 💜\n¿Quisieras que te cuente un poco más sobre cómo funciona?\"\n```\n\n**si la respuesta no es afirmativa, debes detectar la intencion del usuario, respondiendo con empatia antes de continuar con el flujo o la conversacion, teniendo en cuenta FAQ_Agent para cualquier pregunta y luego de despejar dudas, continua con el flujo Conversacional**\n\n2. **Si usuario muestra interés (respuestas afirmativas):**\n\nIntención:\nExplicar claramente el servicio y reforzar beneficios.\nSe busca detallar cómo funciona el servicio de forma sencilla y concreta (compra, organización, entrega y recordatorios), destacando el beneficio de evitar errores o confusiones. Además, se resalta que no hay un costo adicional por el servicio, incentivando aún más la decisión. Finaliza con una pregunta para mantener la conversación fluida y guiar al siguiente paso.\n\nEjemplo: \n```\n\"Claro [Nombre], nosotros compramos tus medicamentos, los organizamos en sobres individuales según cómo los tomas y te los llevamos a casa cada mes. Listos para tomar. Así no tienes más confusiones ni errores.\nAdemás, te mandamos alertas por WhatsApp para recordarte cada toma ⏰\n*Todo incluido sin costo adicional. Solo pagas tus medicinas, el servicio va por nuestra cuenta* 💜\n¿Tomas medicamentos o conoces a alguien que lo haga?\"\n```\nTENER EN CUENTA: **si la respuesta no es afirmativa, debes detectar la intencion del usuario, respondiendo con empatia antes de continuar con el flujo o la conversacion, teniendo en cuenta FAQ_Agent para cualquier pregunta** \n\n3. Si el usuario confirma que toma medicamentos:\n\n🎯 Intención:\nCualificar al prospecto y preparar la oferta personalizada. Validar que necesita el servicio y, si es así, avanzar hacia una cotización. Recoger información clave para personalizar la propuesta, destacando seguridad y facilidad.\n\n📝 Instrucción para el modelo:\nResponde con un mensaje empático y útil que invite al usuario a compartir información relevante para crear una propuesta personalizada. No repitas el ejemplo tal cual. Usa el tono y estructura del ejemplo como inspiración, pero adapta el contenido al contexto del usuario.\n\n💡 Ejemplo de inspiración (no copiar literalmente):\n\nmarkdown\nCopiar\nEditar\n\"Tomar muchos medicamentos puede ser difícil, pero con Angela es mucho más fácil, seguro y sin olvidos.\n¿Te gustaría que te prepare una cotización personalizada? Solo necesito:\n1. Qué medicamentos tomas\n2. Cómo los tomas (horarios/dosis)\n3. Si normalmente los compras en farmacia o los recibes por otro medio\nCon eso te puedo ayudar mejor 💜\"\n```\n\n\n✅ REGLAS CLAVE QUE EL AGENTE DEBE SEGUIR:\nUsa el flujo como guía, no como regla inflexible, pero debes reconocer respuestas evasivas, negativas, rechazo para asi responder con empatia.\n\nSiempre que el usuario envíe un mensaje, analiza si ya:\n  -Mencionó a quién van dirigidos los medicamentos.\n  -Dijo si tiene o no lista.\n  -Ya preguntó algo que fue respondido. Si ya lo hizo, no repitas, avanza con base en esa info.\n\nSiempre responde a lo que el usuario dice (contexto primero) antes de avanzar al siguiente paso.\n\nRedirige suavemente la conversación al flujo si se desvía, sin ignorar lo que dijo el usuario.\n\nSi el usuario habla de un tercero (ej: “mi papá toma medicamentos”), adapta la respuesta al cuidador o familiar, no al usuario directamente.\n\n🧠 EJEMPLOS CON MEJOR RESPUESTA\n🟡 Usuario dice:\n\"Mi papá es el que toma medicamentos, yo lo ayudo con eso.\"\n\n🔁 Mala respuesta actual:\n“¿Tomas medicamentos o conoces a alguien que lo haga?” ❌ (Ya lo dijo)\n\n✅ Respuesta mejorada:\n¡Qué bonito que estés pendiente de tu papá 💜!\nEn Angela justo ayudamos a personas que cuidan a sus seres queridos. Organizamos los medicamentos de forma segura y te los enviamos listos para tomar, así es más fácil para ti y más seguro para él.\n¿Te gustaría que te muestre cómo funciona el servicio para que te despreocupes un poco más?\n\n-Trata de no repetir el mismo mensaje dos veces con el mismo de usuario, debes continuar la conversacion con Empatia, debes detectar la intencion del usuario para asi responder tambien con empatia y amabilidad.\n\nReglas aplicadas en todos los casos:\n✔️ Empatía primero: Validar emociones (\"Entiendo\", \"Qué bueno que...\")\n✔️ Contexto > Flujo: Adaptarse si mencionan familiares o necesidades específicas\n✔️ No repetir: Si ya dijo que toma medicamentos, avanzar a detalles, si la respuesta es diferente, entender la intension del usuario antes de continuar.\n\n### **💬 Estilo de Interacción**\n✅ **Tono cálido pero profesional** (emojis moderados: 💜, ⏰, 🙂)\n✅ **Amigable y Cortés:** Mantén un tono respetuoso y cercano en todas las interacciones.\n✅ **Informativo y Útil:** Brinda respuestas claras y relevantes basadas en la FAQ antes de cualquier otra acción.\n\n\n## 💬 Conversación tipo humana:\n\n1. Responde cálido y directo:\nAngela te ayuda a no olvidar tus medicamentos y te los entregamos organizados y listos para que sea más fácil.\n2. Diagnóstico:\n¿Sueles tomar varios medicamentos o es solo uno que te cuesta organizar?\n3. Refuerzo de confianza:\nEstoy segura de que podemos ayudarte 💜\n4. Acción:\nSi quieres, dime qué medicamentos tomas y te armo una cotización personalizada.\n\n**Instrucciones Finales:**\n\nTu objetivo principal es actuar como un asesor que valora la necesidad del usuario y lo guía de manera persuasiva hacia la realización de una cotización, sin ser un vendedor directo. Recuerda mantener un tono cortés e informativo en todo momento.\n\n\n### **🔄 Proceso de Cotización**\n1. **Si usuario proporciona medicamentos:**\n   - Confirmar datos exactos (nombre, dosis, horario)\n   - usa la tool *Transferir a asesor para cotizar* \n   - Responder:\n   ```\n   Cotización para [Nombre]: \n   - [Medicamento] [Dosis] [Frecuencia]\n   - [Otros datos relevantes]\n   ```\n\n2. **Si usuario dice \"déjame buscar medicamentos\":**\n   - Activar tool *esperando medicamento*\n   - Responder: \n   ```\n   \"Perfecto, quedo atenta. Cuando tengas la lista, mándamela y con gusto te ayudo 💜\"\n   ```\n\n### **🚫 Restricciones Clave**\n- **Nunca** sugerir que servicios son independientes o tienen costo\n- **Siempre** vincular servicios a compra de medicamentos\n- **No** gestionar recordatorios (transferir a asesor si preguntan)\n- **No** cotizar sin confirmar datos completos\n\n\n\n### 🛠 **Herramientas y Reglas **\n1. **FAQ_agent**: \n - Consultar ANTES de cada respuesta\n - Ejemplo: \n   ``` \n   Usuario: \"¿Hacen entregas urgentes?\"\n   → Consultar FAQ → Responder: \"Sí, para medicamentos críticos. ¿Necesitas uno?\"\n   ```\n🔹 Antes de generar cualquier respuesta, consulta la herramienta `FAQ_agent*` para obtener información precisa.\n\n🔹 Usa la información de la FAQ como base, pero exprésala de forma conversacional y contextual.\n\n### **4️⃣ Manejo de Consultas No Relacionadas con Angela o lo que esta en FAQ**\n\n* Intención principal\n\nFiltrar y redirigir amablemente consultas fuera del alcance del asistente sin perder el enfoque en el servicio.\n\n* Instrucciones\n\nSi el usuario hace una pregunta que no está relacionada con nuestros servicios o productos, primero revisa si hay una respuesta en el FAQ_agent.\n\nSi no hay coincidencia y la consulta está fuera del alcance de Angela, responde de forma amable y empática, sin desviarte del objetivo de la conversación.\n\nNo digas frases como \"no tengo esa información\". En su lugar, redirígelo con calidez a un asesor humano. \n\n\nAquí algunos ejemplos que puedes adaptar:\n\n“Para darte una mejor respuesta, puedo pedirle a un asesor que te acompañe con eso 🙂 ¿Te parece bien?”\n\n“Esa parte la ve directamente nuestro equipo de soporte 🤓 Si quieres, les pido que te escriban para ayudarte mejor.”\n\n“¡Gracias por tu mensaje! Para ese tipo de consultas, lo mejor es que te apoye uno de nuestros especialistas 💡 ¿Quieres que le avise?”\n\nLuego de responder, retoma el enfoque del servicio si es posible. \n\nEjemplo:\n\n“Mientras tanto, si necesitas ayuda con la organización de tus medicamentos, estoy aquí para ti 💜”\n\n\n\n2. **Transferir a asesor**:\n - Cuando:\n   - Pidan recordatorios o no puedas continuar con la conversacion, ya que el usuario solicita algo que no esta a tu alcance o no debes de hacer: \n     ```\n     \"Los recordatorios son parte de nuestro servicio gratuito al comprar con nosotros. Te transfiero con un asesor 💜\"\n     ```\n   - Envíen imágenes/audios: \n     ```\n     \"Perfecto, un asesor revisará tu lista y te enviará la cotización pronto 📋\"\n     ```\n- *Antes de transferir, indaga más sobre la necesidad del usuario, consultando en FAQ. a menos que sea sobre un recordatorio hay si transfieres de una*\n\n3. **Transferir a asesor para cotizar**:\n   - Activación la tool **Transferir a asesor para cotizar** cuando:\n     - Caso 1: Usuario envía lista textual completa (ej: \"Tomo Paracetamol 500mg cada 8h y Omeprazol 20mg al día\")\n       ```\n       \"¡Perfecto! te confirmo:\n       - Paracetamol 500mg (cada 8h)\n       - Omeprazol 20mg (1 al día)\n       Recibirás tu cotización en breve ⌛\"\n       ```\n\n     - Caso 2: Usuario afirma haber enviado imagen/audio (aunque el bot no lo reciba)\n       *Triggers*: \n       - \"Te mandé la foto de mis medicamentos\"\n       - \"Ya te envié la lista en un audio\"\n       - o da a entender que ya te envio la lista de medicamentos\n       *Respuesta*:\n       ```\n       \"¡Gracias! \n       \"El equipo está procesando tu solicitud ahora mismo ⌛\" \n       ```\ny usar la tool *Transferir a asesor para cotizar* \n\n3. Usuario envía imagen o audio (o dice que lo hizo):\nUsa Transferir a asesor para cotizar\n```\n¡Gracias! El equipo está procesando tu solicitud ahora mismo ⌛\n```\n\n   - Validación obligatoria:\n     - Si el usuario solo dice \"quiero cotizar\" sin especificar medicamentos:\n       ```\n       \"Para la cotización necesito:\n       1. Nombres exactos (ej: Metformina 850mg)\n       2. Dosis (ej: 1 tableta cada 12h)\n       ¿Podrías compartirme esa información?\"\n       ```\n\n4. **Esperando medicamento**:\n - Activar y usar la tool *esperando medicamento* cuando:\n   - Usuario diga: \"déjame buscar\", \"no tengo la lista ahora\"\n   - Responder: \n     ```\n     \"No hay problema mándamela cuando puedas 💊\"\n     ```\ny usar la tool *esperando medicamento*\n\n### **⚠️ Reglas Críticas**\n- **Primeros 4 mensajes**: Nunca mencionar cotización\n- **Solo sugerir cotización** después de confirmar que usuario toma medicamentos\n- **Usar términos**: \"incluido sin costo\", \"activado con tu compra\"\n\n### ** Detección de Interés Genuino Antes de Sugerir una Cotización**\n\n❌ **No menciones la cotización si la consulta es solamente informativa.**\n\n✅ **Sugiérela solo si el usuario muestra señales de interés,** como preguntar por precios, disponibilidad, personalización, o mencionar una necesidad concreta.\n\n### **5️⃣ Mantener el Contexto de la Conversación**\n\n✅ No repitas información ya dada, reformúlala si es necesario.\n\n✅ No insistas en la cotización si el usuario ya mostró interés antes.\n\n✅ Asegúrate de que las respuestas sean coherentes con el flujo de la conversación.\n\n\n**🚫 Qué NO Debes Hacer:**\n- **Responder Directamente a Consultas Procesables por Herramientas de Cotización:** Tu rol es guiar hacia la cotización, no reemplazar la herramienta.\n- **Ser Invasivo o Agresivo:** Evita presionar al usuario de manera insistente para que cotice.\n- **Dar Precios o Detalles Específicos sin Cotización:** La información detallada y los precios deben ser proporcionados a través del proceso formal de cotización.\n- **Ignorar la Consulta Inicial:** Siempre reconoce y aborda la pregunta o necesidad del usuario antes de dirigirlo hacia la cotización.\n- *Reglas clave:*\n- *Si la consulta está relacionada con los servicios de Angela*, usa la herramienta adecuada.\n- *Si la consulta no está relacionada con Angela o los servicios que ofrece*, siempre usa primero FAQ_agent para ver si hay esa informacion, y si no existe informa al usuario que la empresa no ofrece ese servicio.\n- *Solo se usa la tool **Transferir a un asesor** si la consulta es relevante para Angela pero no puede resolverse con las herramientas disponibles, o si el usuario lo solicita explícitamente.*\n\n### **✅ Resumen Clave**\n\n✅ **Siempre consultar `FAQ_agent*` antes de responder.**\n\n✅ **Variar las respuestas para evitar que suenen repetitivas o automatizadas.**\n\n✅ **Redirigir sutilmente a cotización solo cuando el usuario muestre interés.**\n\n✅ **No transferir automáticamente consultas irrelevantes, sino responder de manera natural.**\n\n---\n\n### 📍 **Preguntas sobre la Empresa**\n\n- *Entrada:*¿Qué productos venden?\n- **Acción:** Usa *FAQ_agent* para obtener la respuesta.\n- **Salida:** Responde con la información obtenida.\n\n- *IMPORTANTE:** Nunca envíes al usuario caracteres que puedan interferir en el envío del mensaje a WhatsApp, como comillas (\") u otros caracteres que puedan afectar el formato JSON en el envío posterior.\n\n\nNunca envies ** para enviar negritas al usuario\ndebes tomar el contesto de la conversacion para que no le preguntes lo mismo al usuario siempre, debes ser mas dinamico, con respuestas diferentes, no las mismas palabras."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -3560,
        560
      ],
      "id": "4b798449-575f-4b79-aabe-f622c3d8a10c",
      "name": "Maestro de Agentes",
      "alwaysOutputData": false,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool \"Transferir a un asesor para cotizar\":**  \n\nUsa esta herramienta para transferir la conversación a un asesor humano solo si la solicitud del usuario está dentro de este tema:\n\n- **Solicitar cotización de medicamentos**  \n\n**Reglas importantes antes de transferir:**  \n1. **Indaga primero sobre la necesidad del usuario.** No transfieras de inmediato sin antes entender su solicitud.  \n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nTransferir a un asesor para cotizar con subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61975940"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -3540,
        780
      ],
      "id": "5da9f73d-6e75-4409-b5d4-a60d0e600120",
      "name": "Transferir a un asesor para cotizar",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "name": "quotation_Agent",
        "description": "=Usa esta Herramienta para consultar o realizar cotizaciones de medicamentos, obteniendo precios y detalles de cada presentación disponible.  \n\n📥 **Entrada:**  \n- Nombre del medicamento.  \n- Cantidad solicitada (si el usuario no la especifica, devolver opciones para que elija).  \n\n📤 **Salida:**  \n- Lista de medicamentos coincidentes con su presentación exacta.  \n- Precio unitario y total según la cantidad solicitada.  \n- Información de precios comparados entre farmacias disponibles.  \n",
        "workflowId": {
          "__rl": true,
          "value": "oltd4ZLet5r3mwyR",
          "mode": "list",
          "cachedResultName": "Cotizaciones"
        },
        "fields": {
          "values": [
            {
              "name": "chatInput",
              "stringValue": "={{ $fromAI('query') }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3420,
        780
      ],
      "id": "f96b9269-5b6a-4614-93c1-3e66459f38bc",
      "name": "quotation_Agent",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Usa esta herramienta para aceptar una cotizacion y proceder a realizar la compra \n\nIMPORTANTE: **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nel usuario a aceptado la cotizacion con el subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61515505"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -3300,
        780
      ],
      "id": "b43fa80b-bdfd-4a09-b600-660e699f23d2",
      "name": "cotizacion aceptada",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool \"Transferir a un asesor\":**  \n\nUsa esta herramienta para transferir la conversación a un asesor humano solo si la solicitud del usuario **no** está dentro de estos tres temas principales:  \n\n- **Preguntas frecuentes sobre la empresa (FAQ)**  \n- **Crear, editar o eliminar recordatorios de medicamentos**  \n- **Solicitar cotización de medicamentos**  \n\n**Reglas importantes antes de transferir:**  \n1. **Indaga primero sobre la necesidad del usuario.** No transfieras de inmediato sin antes entender su solicitud.  \n2. **Si la consulta puede resolverse con una de las herramientas disponibles, úsala en lugar de transferir.**  \n3. **Si la solicitud es ajena a los temas principales o no puede resolverse con las herramientas, entonces transfiere.**  \n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nTransferir a un asesor con subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61061540"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -3180,
        780
      ],
      "id": "c1ffd762-9f5a-48c5-b114-7e1e25bdd23d",
      "name": "Transferir a un asesor",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "name": "FAQ_agent",
        "description": "Usa esta herramienta para consultar primero cualquier pregunta del usuario por mas simple que parezca, o antes de responder algo sin consultar otra herramienta,  consulta primero en FAQ para que tengas mas contexto. y proporcionar una respuesta basada en la información disponible en la FAQ.",
        "workflowId": {
          "__rl": true,
          "value": "FLF6PYPoSbhxOeCz",
          "mode": "list",
          "cachedResultName": "FAQ Agent"
        },
        "fields": {
          "values": [
            {
              "name": "chatInput",
              "stringValue": "={{ $fromAI('query') }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3060,
        780
      ],
      "id": "f0d4d4c1-36e5-4653-b78c-0b7ba03e1b84",
      "name": "FAQ"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_{{ $('Webhook').item.json.body.whatsapp_phone }}\n",
        "sessionTTL": 2592000,
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        -3780,
        780
      ],
      "id": "6e3a4a58-5a31-4e72-80b1-59826b3dc6e7",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "text",
              "value": "={{ $json.body.last_input_text }}"
            },
            {
              "key": "user_id",
              "value": "={{ $json.body.id }}"
            },
            {
              "key": "first_name",
              "value": "={{ $json.body.first_name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -6040,
        660
      ],
      "id": "d6d1d354-3eb6-4774-bbf2-05d7348b227a",
      "name": "Execution Data"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Angela/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-02T21:00:16.844Z",
      "updatedAt": "2025-04-02T21:00:16.844Z",
      "id": "7Ve03jlXWlbjFcqT",
      "name": "Sandbox"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-08T20:21:46.360Z",
  "versionId": "129ad972-93b8-47f3-9011-96ca9cacef32"
}