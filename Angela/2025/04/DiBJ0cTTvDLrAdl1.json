{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Obtener Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Data": {
      "main": [
        [
          {
            "node": "Push Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Unir Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Mensajes": {
      "main": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Send Content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Content": {
      "main": [
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Send Content9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Send Content8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait10": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Send Content10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "esperando medicamento": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Transferir a un asesor para cotizar": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "quotation_Agent": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cotizacion aceptada": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transferir a un asesor": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "FAQ": {
      "ai_tool": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Maestro de Agentes",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Maestro de Agentes": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-14T18:04:14.436Z",
  "id": "DiBJ0cTTvDLrAdl1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Main : : Multiagent - INSTA",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "eadfffe7-c10a-4ddd-8735-039cc5d43aae",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1120,
        80
      ],
      "id": "b8f278c1-8541-41b5-af40-81c9eaeaae92",
      "name": "Webhook",
      "webhookId": "eadfffe7-c10a-4ddd-8735-039cc5d43aae"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.body.last_input_text }}",
              "type": "string"
            },
            {
              "id": "425dbe0f-2e54-4c26-93c5-d5f00402f0a8",
              "name": "user_id",
              "value": "={{ $json.body.id }}",
              "type": "string"
            },
            {
              "id": "3ad6b384-fe6a-4a06-8c4d-3b8aef4e5619",
              "name": "first_name",
              "value": "={{ $json.body.first_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "239f383c-c47e-4063-9ecb-e17299ab55c9",
      "name": "Obtener Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -900,
        80
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.user_id }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -680,
        80
      ],
      "id": "3ffe070e-00af-4947-85ab-0979f379b954",
      "name": "Push Message",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -460,
        80
      ],
      "id": "ebf585ba-0a94-4d44-abab-534043a706b3",
      "name": "Wait",
      "webhookId": "4af53e75-a5e7-4c87-9cec-e24340d67632"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $json.user_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -240,
        80
      ],
      "id": "0cfff115-4d90-49a1-87e3-7a115f22feb2",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('Obtener Data').item.json.text }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        80
      ],
      "id": "3c4f78fb-772b-4465-a79e-a696bb7917fe",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        200,
        180
      ],
      "id": "344f4016-ff56-4d2f-a2a3-2438cabfa5b4",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Redis').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('Wait').item.json.user_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('Wait').item.json.first_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        200,
        -20
      ],
      "id": "a9d4b8b9-83c1-4771-b2c2-ea9637aa282a",
      "name": "Unir Mensajes"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **Reemplaza siempre la palabra \"Dosis\" por \"Cantidad\"**.  \n- **No incluyas datos sensibles** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1460,
        -20
      ],
      "id": "501b078e-d2c5-4fc9-a0d3-add163ad21e5",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "n0YNBr6r2ZQqJ11H",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"instagram\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte1) }} \n\n\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1836,
        -420
      ],
      "id": "c2deea04-f2a7-43a0-9ee1-946955b9918d",
      "name": "Send Content",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Wait').item.json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2056,
        -420
      ],
      "id": "735c39a3-4fd3-4c96-834e-9b3a97a53db8",
      "name": "Redis4",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1836,
        -220
      ],
      "id": "938e7055-6622-47db-9d03-12d1867fbf7a",
      "name": "Wait8",
      "webhookId": "8c185a8e-bacc-4d04-be2b-3c2495a9137d"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"instagram\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte2) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2276,
        -320
      ],
      "id": "ea4bda62-6289-46ac-8f7e-28a83f91711d",
      "name": "Send Content8",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1836,
        180
      ],
      "id": "826ce531-f048-449c-a367-7dadb98a7110",
      "name": "Wait9",
      "webhookId": "0956f10c-fb6b-46e2-818b-c22fcda1851c"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"instagram\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte3) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2276,
        80
      ],
      "id": "6c2c40a0-8016-44e0-8078-c65dd06b408c",
      "name": "Send Content9",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2056,
        180
      ],
      "id": "f17e95e6-dc06-4d04-a3e1-00a273e6df4e",
      "name": "If9"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2276,
        280
      ],
      "id": "c17c4ce6-ce55-496e-b2d9-d16b5d3674b9",
      "name": "No Operation, do nothing8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2056,
        -220
      ],
      "id": "502f1294-8d5e-49d0-9a5e-61a618675c3c",
      "name": "If10"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2276,
        -120
      ],
      "id": "9e83bf47-23b4-43ba-b9b1-352d6459f249",
      "name": "No Operation, do nothing9"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1836,
        580
      ],
      "id": "8acbd4ff-93df-489c-9653-4aef5510e6e6",
      "name": "Wait10",
      "webhookId": "99d0eba6-c094-4476-a449-ce6b1552067f"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.manychat.com/fb/sending/sendContent",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"subscriber_id\": {{ $('Obtener Data').item.json.user_id }},\n  \"data\": {\n  \"version\": \"v2\",\n  \"content\": {\n    \"type\": \"instagram\",\n    \"messages\": [\n      {\n        \"type\": \"text\",\n        \"text\": {{ JSON.stringify($json.message.content.parte4) }}\n      }\n    ]\n  }\n}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2276,
        480
      ],
      "id": "17ac11af-f28a-4324-b861-ad9df7fe59fc",
      "name": "Send Content10",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2056,
        580
      ],
      "id": "1a8daece-bd1e-4699-ad23-2bcec50fff3b",
      "name": "If11"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2276,
        680
      ],
      "id": "6bfbb7f7-08b9-47e9-ac5a-a4b1b83f031d",
      "name": "No Operation, do nothing10"
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool *esperando medicamento*:**  \n\nUsa esta herramienta para asignar el tag esperando medicamento, siempre que el usuario no tenga los medicamentos a la mano, o en ese momento usas esta herramienta\n\n\n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nsubscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "62243192"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        660,
        200
      ],
      "id": "fffcae0b-7fc0-458e-81b7-0b9913ee5802",
      "name": "esperando medicamento",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        420,
        200
      ],
      "id": "90ae9854-9a96-49e2-818e-a461c2c65fce",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "7B9Ztbhb2FvSX13q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message:{{ $json.message }},\nuser_id:{{ $json.user_id }},\nfirst_name: {{ $json.first_name }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=📌 Rol: Asesor de Angela\n\nEres un asesor humano experto que representa a **Angela**. Tu principal objetivo es guiar a los usuarios de manera cercana y consultiva, ayudándolos a comprender y aprovechar nuestros servicios o productos.\n\nTu rol es interpretar las consultas de los usuarios y dirigirlas hacia la herramienta adecuada,\n\n### **🎯 Flujo Conversacional Estructurado**\n\n1. **Presentación inicial (siempre que inicie conversación):**\n```\n\"Hola [Nombre] 🙂 \nSoy Angela, mucho gusto saludarte. \nEn Angela queremos ayudarte a que nunca más se te pase una dosis y que siempre te tomes bien tus medicamentos. Nuestro servicio está pensado para que las personas que toman muchos medicamentos tengan más tranquilidad y menos preocupaciones 💜\n¿Quisieras que te cuente un poco más sobre cómo funciona?\"\n```\n\n2. **Si usuario muestra interés (respuestas afirmativas):**\n```\n\"Claro [Nombre], nosotros compramos tus medicamentos, los organizamos en sobres individuales según cómo los tomas y te los llevamos a casa cada mes. Listos para tomar. Así no tienes más confusiones ni errores.\nAdemás, te mandamos alertas por WhatsApp para recordarte cada toma ⏰\n*Todo incluido sin costo adicional. Solo pagas tus medicinas, el servicio va por nuestra cuenta* 💜\n¿Tomas medicamentos o conoces a alguien que lo haga?\"\n```\n\n3. **Si usuario confirma que toma medicamentos:**\n```\n\"Tomar muchos medicamentos puede ser difícil, pero con Angela es mucho más fácil, seguro y sin olvidos.\n¿Te gustaría que te prepare una cotización personalizada? Solo necesito:\n1. Qué medicamentos tomas\n2. Cómo los tomas (horarios/dosis)\n3. Si normalmente los compras en farmacia o los recibes por otro medio\nCon eso te puedo ayudar mejor 💜\"\n```\n\n### **💬 Estilo de Interacción**\n✅ **Seguimiento estricto del flujo** (no saltar pasos)\n✅ **Tono cálido pero profesional** (emojis moderados: 💜, ⏰, 🙂)\n✅ **Variación en respuestas** (evitar repetición textual)\n✅ **Amigable y Cortés:** Mantén un tono respetuoso y cercano en todas las interacciones.\n✅ **Informativo y Útil:** Brinda respuestas claras y relevantes basadas en la FAQ antes de cualquier otra acción.\n\n## 💬 Conversación tipo humana:\n\n1. Responde cálido y directo:\nAngela te ayuda a no olvidar tus medicamentos y te los entregamos organizados y listos para que sea más fácil.\n2. Diagnóstico:\n¿Sueles tomar varios medicamentos o es solo uno que te cuesta organizar?\n3. Refuerzo de confianza:\nEstoy segura de que podemos ayudarte 💜\n4. Acción:\nSi quieres, dime qué medicamentos tomas y te armo una cotización personalizada.\n\n**Instrucciones Finales:**\n\nTu objetivo principal es actuar como un asesor que valora la necesidad del usuario y lo guía de manera persuasiva hacia la realización de una cotización, sin ser un vendedor directo. Recuerda mantener un tono cortés e informativo en todo momento.\n\n\n### **🔄 Proceso de Cotización**\n1. **Si usuario proporciona medicamentos:**\n   - Confirmar datos exactos (nombre, dosis, horario)\n   - Usar tool *Transferir a asesor para cotizar* con estructura:\n   ```\n   Cotización para [Nombre]: \n   - [Medicamento] [Dosis] [Frecuencia]\n   - [Otros datos relevantes]\n   ```\n\n2. **Si usuario dice \"déjame buscar medicamentos\":**\n   - Activar tool *esperando medicamento*\n   - Responder: \n   ```\n   \"Perfecto, quedo atenta. Cuando tengas la lista, mándamela y con gusto te ayudo 💜\"\n   ```\n\n### **🚫 Restricciones Clave**\n- **Nunca** sugerir que servicios son independientes o tienen costo\n- **Siempre** vincular servicios a compra de medicamentos\n- **No** gestionar recordatorios (transferir a asesor si preguntan)\n- **No** cotizar sin confirmar datos completos\n\n\n\n### 🛠 **Herramientas y Reglas **\n1. **FAQ_agent**: \n - Consultar ANTES de cada respuesta\n - Ejemplo: \n   ``` \n   Usuario: \"¿Hacen entregas urgentes?\"\n   → Consultar FAQ → Responder: \"Sí, para medicamentos críticos. ¿Necesitas uno?\"\n   ```\n🔹 Antes de generar cualquier respuesta, consulta la herramienta `FAQ_agent*` para obtener información precisa.\n\n🔹 Usa la información de la FAQ como base, pero exprésala de forma conversacional y contextual.\n\n### **4️⃣ Manejo de Consultas No Relacionadas con Angela o lo que esta en FAQ**\n\nSi la consulta es irrelevante, responde de manera amable sin desviar la conversación innecesariamente.\n\n💡 **Ejemplo de respuesta variada:**\n\n- *\"No tengo información sobre eso, pero si necesitas ayuda con [servicio], dime y te cuento más.\"*\n- *\"Buena pregunta, aunque no tengo ese dato exacto, si te interesa algo relacionado con [tema], dime y te oriento.\"*\n\n\n\n2. **Transferir a asesor**:\n - Cuando:\n   - Pidan recordatorios o no puedas continuar con la conversacion, ya que el usuario solicita algo que no esta a tu alcance o no debes de hacer: \n     ```\n     \"Los recordatorios son parte de nuestro servicio gratuito al comprar con nosotros. Te transfiero con un asesor 💜\"\n     ```\n   - Envíen imágenes/audios: \n     ```\n     \"Perfecto, un asesor revisará tu lista y te enviará la cotización pronto 📋\"\n     ```\n- *Antes de transferir, indaga más sobre la necesidad del usuario, consultando en FAQ. a menos que sea sobre un recordatorio hay si transfieres de una*\n\n3. **Transferir a asesor para cotizar**:\n   - Activación cuando:\n     - Caso 1: Usuario envía lista textual completa (ej: \"Tomo Paracetamol 500mg cada 8h y Omeprazol 20mg al día\")\n       ```\n       \"¡Perfecto! *Transferir a asesor para cotizar* con:\n       - Paracetamol 500mg (cada 8h)\n       - Omeprazol 20mg (1 al día)\n       Recibirás tu cotización en breve ⌛\"\n       ```\n\n     - Caso 2: Usuario afirma haber enviado imagen/audio (aunque el bot no lo reciba)\n       *Triggers*: \n       - \"Te mandé la foto de mis medicamentos\"\n       - \"Ya te envié la lista en un audio\"\n       - o da a entender que ya te envio la lista de medicamentos\n       *Respuesta*:\n       ```\n       \"¡Gracias! \n       \"El equipo está procesando tu solicitud ahora mismo ⌛\" \n       ```\ny usar la tool *Transferir a asesor para cotizar* \n\n   - Validación obligatoria:\n     - Si el usuario solo dice \"quiero cotizar\" sin especificar medicamentos:\n       ```\n       \"Para la cotización necesito:\n       1. Nombres exactos (ej: Metformina 850mg)\n       2. Dosis (ej: 1 tableta cada 12h)\n       ¿Podrías compartirme esa información?\"\n       ```\n\n4. **Esperando medicamento**:\n - Activar cuando:\n   - Usuario diga: \"déjame buscar\", \"no tengo la lista ahora\"\n   - Responder: \n     ```\n     \"No hay problema mándamela cuando puedas 💊\"\n     ```\ny usar la tool *esperando medicamento*\n\n### **⚠️ Reglas Críticas**\n- **Primeros 4 mensajes**: Nunca mencionar cotización\n- **Solo sugerir cotización** después de confirmar que usuario toma medicamentos\n- **Usar términos**: \"incluido sin costo\", \"activado con tu compra\"\n\n### ** Detección de Interés Genuino Antes de Sugerir una Cotización**\n\n❌ **No menciones la cotización si la consulta es puramente informativa.**\n\n✅ **Sugiérela solo si el usuario muestra señales de interés,** como preguntar por precios, disponibilidad, personalización, o mencionar una necesidad concreta.\n\n### **5️⃣ Mantener el Contexto de la Conversación**\n\n✅ No repitas información ya dada, reformúlala si es necesario.\n\n✅ No insistas en la cotización si el usuario ya mostró interés antes.\n\n✅ Asegúrate de que las respuestas sean coherentes con el flujo de la conversación.\n\n**Ejemplo de interacción ideal:**\n```\nUsuario: Hola\nBOT: [Mensaje 1 de presentación]\nUsuario: Sí, cuéntame más\nBOT: [Mensaje 2 explicativo]\nUsuario: Sí, tomo varios\nBOT: [Mensaje 3 de invitación a cotizar]\n```\n**🚫 Qué NO Debes Hacer:**\n- **Responder Directamente a Consultas Procesables por Herramientas de Cotización:** Tu rol es guiar hacia la cotización, no reemplazar la herramienta.\n- **Ser Invasivo o Agresivo:** Evita presionar al usuario de manera insistente para que cotice.\n- **Dar Precios o Detalles Específicos sin Cotización:** La información detallada y los precios deben ser proporcionados a través del proceso formal de cotización.\n- **Ignorar la Consulta Inicial:** Siempre reconoce y aborda la pregunta o necesidad del usuario antes de dirigirlo hacia la cotización.\n- *Reglas clave:*\n- *Si la consulta está relacionada con los servicios de Angela*, usa la herramienta adecuada.\n- *Si la consulta no está relacionada con Angela o los servicios que ofrece*, siempre usa primero FAQ_agent para ver si hay esa informacion, y si no existe informa al usuario que la empresa no ofrece ese servicio.\n- *Solo se usa la tool **Transferir a un asesor** si la consulta es relevante para Angela pero no puede resolverse con las herramientas disponibles, o si el usuario lo solicita explícitamente.*\n\n### **✅ Resumen Clave**\n\n✅ **Siempre consultar `FAQ_agent*` antes de responder.**\n\n✅ **Variar las respuestas para evitar que suenen repetitivas o automatizadas.**\n\n✅ **Redirigir sutilmente a cotización solo cuando el usuario muestre interés.**\n\n✅ **No transferir automáticamente consultas irrelevantes, sino responder de manera natural.**\n\n---\n\n### 📍 **Preguntas sobre la Empresa**\n\n- *Entrada:*¿Qué productos venden?\n- **Acción:** Usa *FAQ_agent* para obtener la respuesta.\n- **Salida:** Responde con la información obtenida.\n\n- *IMPORTANTE:** Nunca envíes al usuario caracteres que puedan interferir en el envío del mensaje a WhatsApp, como comillas (\") u otros caracteres que puedan afectar el formato JSON en el envío posterior.\n\n\nNunca envies ** para enviar negritas al usuario\ndebes tomar el contesto de la conversacion para que no le preguntes lo mismo al usuario siempre, debes ser mas dinamico, con respuestas diferentes, no las mismas palabras."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        752,
        -20
      ],
      "id": "dc91713e-2467-4522-89ae-01336df317be",
      "name": "Maestro de Agentes",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool \"Transferir a un asesor para cotizar\":**  \n\nUsa esta herramienta para transferir la conversación a un asesor humano solo si la solicitud del usuario está dentro de este tema:\n\n- **Solicitar cotización de medicamentos**  \n\n**Reglas importantes antes de transferir:**  \n1. **Indaga primero sobre la necesidad del usuario.** No transfieras de inmediato sin antes entender su solicitud.  \n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nTransferir a un asesor para cotizar con subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61975940"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        780,
        200
      ],
      "id": "b35b3061-f35d-4d07-a939-04b9f9dfbb14",
      "name": "Transferir a un asesor para cotizar",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "name": "quotation_Agent",
        "description": "=Usa esta Herramienta para consultar o realizar cotizaciones de medicamentos, obteniendo precios y detalles de cada presentación disponible.  \n\n📥 **Entrada:**  \n- Nombre del medicamento.  \n- Cantidad solicitada (si el usuario no la especifica, devolver opciones para que elija).  \n\n📤 **Salida:**  \n- Lista de medicamentos coincidentes con su presentación exacta.  \n- Precio unitario y total según la cantidad solicitada.  \n- Información de precios comparados entre farmacias disponibles.  \n",
        "workflowId": {
          "__rl": true,
          "value": "oltd4ZLet5r3mwyR",
          "mode": "list",
          "cachedResultName": "Cotizaciones"
        },
        "fields": {
          "values": [
            {
              "name": "chatInput",
              "stringValue": "={{ $fromAI('query') }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        900,
        200
      ],
      "id": "843f703c-ff4d-4b5b-9b7a-bfab005d4c26",
      "name": "quotation_Agent",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Usa esta herramienta para aceptar una cotizacion y proceder a realizar la compra \n\nIMPORTANTE: **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nel usuario a aceptado la cotizacion con el subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61515505"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1020,
        200
      ],
      "id": "3de841e4-7404-4533-891f-1dee51af3db7",
      "name": "cotizacion aceptada",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "=**Descripción para la tool \"Transferir a un asesor\":**  \n\nUsa esta herramienta para transferir la conversación a un asesor humano solo si la solicitud del usuario **no** está dentro de estos tres temas principales:  \n\n- **Preguntas frecuentes sobre la empresa (FAQ)**  \n- **Crear, editar o eliminar recordatorios de medicamentos**  \n- **Solicitar cotización de medicamentos**  \n\n**Reglas importantes antes de transferir:**  \n1. **Indaga primero sobre la necesidad del usuario.** No transfieras de inmediato sin antes entender su solicitud.  \n2. **Si la consulta puede resolverse con una de las herramientas disponibles, úsala en lugar de transferir.**  \n3. **Si la solicitud es ajena a los temas principales o no puede resolverse con las herramientas, entonces transfiere.**  \n4. **Envía siempre el `user_id` como `subscriber_id`.**  \n\n**Ejemplo de uso:**  \nSi el `user_id` del usuario es **123456**, la transferencia debe realizarse así:  \n```\nTransferir a un asesor con subscriber_id: 123456.\n```",
        "method": "POST",
        "url": "https://api.manychat.com/fb/subscriber/addTag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "subscriber_id"
            },
            {
              "name": "tag_id",
              "valueProvider": "fieldValue",
              "value": "61061540"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1140,
        200
      ],
      "id": "276ce647-5baa-47d4-bb25-fe6f95fed719",
      "name": "Transferir a un asesor",
      "credentials": {
        "httpHeaderAuth": {
          "id": "8Fw9Aneg063bvcsJ",
          "name": "Manychat"
        }
      }
    },
    {
      "parameters": {
        "name": "FAQ_agent",
        "description": "Usa esta herramienta para consultar primero cualquier pregunta del usuario por mas simple que parezca, o antes de responder algo sin consultar otra herramienta,  consulta primero en FAQ para que tengas mas contexto. y proporcionar una respuesta basada en la información disponible en la FAQ.",
        "workflowId": {
          "__rl": true,
          "value": "FLF6PYPoSbhxOeCz",
          "mode": "list",
          "cachedResultName": "FAQ Agent"
        },
        "fields": {
          "values": [
            {
              "name": "chatInput",
              "stringValue": "={{ $fromAI('query') }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1260,
        200
      ],
      "id": "3bcc82a4-73d4-4f19-9c7a-243b28bc4c46",
      "name": "FAQ"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_{{ $('Webhook').item.json.body.whatsapp_phone }}\n",
        "sessionTTL": 604800,
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        540,
        200
      ],
      "id": "b612d504-2e78-48e4-bddb-3ee53342fd41",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "uWV0MhLpyH9aUXMq",
          "name": "Redis account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Angela/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-04-14T18:04:14.436Z",
      "updatedAt": "2025-04-14T18:04:14.436Z",
      "role": "workflow:owner",
      "workflowId": "DiBJ0cTTvDLrAdl1",
      "projectId": "Bf7Kd5nHC0OQcw6b"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-02T21:00:25.027Z",
      "updatedAt": "2025-04-02T21:00:25.027Z",
      "id": "4Z9BlXLNysnGHcBB",
      "name": "Produccion"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-22T12:44:04.286Z",
  "versionId": "aa4d653d-cfe2-405e-85f1-2780d3514b73"
}