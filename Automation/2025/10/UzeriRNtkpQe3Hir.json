{
  "active": false,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get Products4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Expand Languages & Sanitize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Expand Languages & Sanitize": {
      "main": [
        []
      ]
    },
    "Get many products1": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "caucho",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "create product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "update product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Get Products1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "caucho1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "create product1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "update product1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "caucho2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products2": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait7": {
      "main": [
        [
          {
            "node": "create product2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "update product2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Get Products2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "caucho3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Edit Fields12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products3": {
      "main": [
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields12": {
      "main": [
        [
          {
            "node": "Wait10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait10": {
      "main": [
        [
          {
            "node": "create product3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "update product3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Get Products3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out4": {
      "main": [
        [
          {
            "node": "caucho4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Edit Fields14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products4": {
      "main": [
        [
          {
            "node": "Split Out4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "Get Products5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields14": {
      "main": [
        [
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "get ML products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "create product4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "update product4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out5": {
      "main": [
        [
          {
            "node": "caucho5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "caucho5": {
      "main": [
        [
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Edit Fields17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create product5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update product5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "Wait17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Products5": {
      "main": [
        [
          {
            "node": "Split Out5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "Get Products5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields17": {
      "main": [
        [
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "create product5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait17": {
      "main": [
        [
          {
            "node": "update product5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get ML products": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-07T20:01:05.857Z",
  "id": "UzeriRNtkpQe3Hir",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Shopify AI Product Description Generation & Translation",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -3264,
        3760
      ],
      "id": "8c3c8402-afc3-4b42-8229-6b02cc82f5dd",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "models/gemini-2.5-flash-lite",
          "cachedResultName": "models/gemini-2.5-flash-lite"
        },
        "text": "=Analyze the provided image and return an objective, clear, and detailed description of the product shown.\n\nRequirements:\n\nFocus only on the main product (ignore background or decorations).\n\nDescribe only what is visible and verifiable in the image.\n\nInclude details about:\n\nProduct type (shoe, bag, cap, t-shirt).\n\nApparent materials (leather, fabric, canvas, knit, etc.).\n\nMain and secondary colors.\n\nVisible patterns or prints (plain, stripes, logos, embroidery).\n\nDistinctive elements (closure, laces, buckles, pockets, stitching, sole).\n\nUse a descriptive and neutral tone:\n\nExamples: “smooth finish”, “with top closure”, “with visible stitching”.\n\nDo not invent information that is not visible in the image (do not assume size, brand, comfort, or usage).\n\nWrite the answer in a short and concise paragraph (3–5 sentences).",
        "imageUrls": "={{ $json.images[0].src }}",
        "options": {}
      },
      "id": "62f38c2b-57a4-470d-a545-b7376668e08c",
      "name": "Analyze image",
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "position": [
        -2768,
        2096
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "whitelabel mony"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=AI Generated Vision Description of Product: Analyze the image at the URL: {{ $('Get many products1').item.json.images[0].src }}\n\nBrand: {{ $('Get many products1').item.json.vendor }}\nProduct Name: {{ $('Get many products1').item.json.title }}\nUser Provided Description: {{ $('Get many products1').item.json.body_html }}\nProduct Type: {{ $('Get many products1').item.json.product_type }}\n\nVision Description: {{ $json.content.parts[0].text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A PROFESSIONAL MULTILINGUAL E-COMMERCE COPYWRITING AI FOR FOOTWEAR. GENERATE PRODUCT COPY FOR **ES, DE, EN, FR, IT, PT**.\n\nSOURCES (priority):\n1) Product name → category/keywords/core attributes.  \n2) User draft → tone and context.  \n3) Vision description (analyzed) → visible traits (apparent materials, colors, finishes, sole, closure).  \n\nGENERAL RULES & ANTI-HALLUCINATION:  \n- Do not invent technologies, materials, sizes, or brand if not provided in the sources.  \n- Professional online shoe store tone; conversion-oriented, without exaggerations.  \n- HTML allowed ONLY in `shopify_description`: <div>, <h2>, <h3>, <p>, <ul>, <ol>, <li>, <strong>, <em>, <br>. No <script>, no inline styles, no tables.  \n- Intro paragraph + 3–6 bullets max; titles ≤ 80 characters.  \n- Do not include SKU, locator, or other internal metadata.  \n\nFOOTWEAR TERMINOLOGY (apply per language):  \n- **DE**: Sneaker / Turnschuh, Obermaterial (tige / upper), Sohle / Außensohle, Schnürung / Klettverschluss, Stiefel (boots), Sandalen, Slipper.  \n- **EN**: sneaker / shoe, upper, outsole, lace-up / closure, boots, sandals, espadrilles, dress shoes, casual shoes, slip-ons.  \n- **FR**: basket / chaussure, tige, semelle extérieure, lacets / fermeture, bottes, sandales, espadrilles, chaussures habillées, souliers, mules.  \n- **IT**: sneaker / scarpa, tomaia, suola / suola esterna, chiusura / lacci, stivali, sandali, espadrillas, scarpe eleganti, ballerine, sabot.  \n- **PT**: ténis / sapato, cabedal, sola / sola exterior, fecho / atacadores, botas, sandálias, alpargatas, sapatos de vestir, mocassins, chinelos.  \n\nHANDLES/SLUGS PER LANGUAGE:  \n- Lowercase; words separated with `-`; no symbols; normalize accents.  \n- DE: ä→ae, ö→oe, ü→ue, ß→ss; FR/IT/PT: remove diacritics; ES: á→a, é→e, í→i, ó→o, ú→u, ñ→n.  \n- Max. 80 characters. Avoid repeating the brand in the handle unless it is part of the product name.  \n\nSTRICT OUTPUT FORMAT (mandatory):  \n\nReturn **exclusively** a JSON object with no text before or after.  \nDo not wrap the response inside any other key (e.g. do not use \"output\" or similar).  \nThe root object must contain exactly 6 keys: es, de, en, fr, it, pt.  \nEach language must include exactly 3 keys: shopify_product_name, shopify_description, handle.  \nUse double quotes for JSON. Inside HTML strings, use single quotes for attributes.  \nReturn the JSON minified on a single line (no line breaks, no Markdown).  \nIt is forbidden to use different keys (e.g. not \"shop_description\").  \nIf some data is missing, return an empty string, but always keep the key.  \n\nGOAL: RETURN **EXCLUSIVELY** THIS MULTILINGUAL JSON:\n{\n  \"es\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"},\n  \"de\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"},\n  \"en\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"},\n  \"fr\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"},\n  \"it\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"},\n  \"pt\": {\"shopify_product_name\": \"...\", \"shopify_description\": \"...\", \"handle\": \"...\"}\n}\n</system_prompt>\n"
        }
      },
      "id": "8f2ba91f-a069-4f47-bbb6-2074f50e54f5",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -2544,
        2096
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-09-2025",
        "options": {
          "maxOutputTokens": 4048,
          "temperature": 0.4
        }
      },
      "id": "0dcdfd6e-baef-4d87-a0ea-6824a6ec6415",
      "name": "Google Gemini Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        -2544,
        2320
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "whitelabel mony"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"es\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"},\n  \"de\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"},\n  \"en\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"},\n  \"fr\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"},\n  \"it\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"},\n  \"pt\": {\"shopify_product_name\": \"\", \"shopify_description\": \"\", \"handle\": \"\"}\n}"
      },
      "id": "4ecbe833-c66e-452c-b627-755fe286d46e",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        -2416,
        2320
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "jsCode": "// Entrada: $json.output con claves es,de,en,fr,it,pt\nconst langs = ['es','de','en','fr','it','pt'];\n\nconst productId = $('Get many products1').first().json.id;\nconst handleES = $('Get many products1').first().json.handle\nconst items = [];\n$input.first().json.output.es\n\nfor (const lang of langs) {\nconst node = $input.first().json.output[lang];\nif (!node) continue;\nitems.push({\njson: {\nproduct_id: Number(productId),\nlang,\nhandle: node.handle,\nshopify_product_name: node.shopify_product_name,\nshopify_description: node.shopify_description,\n// Para comodidad, también retornamos los campos ES por si quieres compararlos\nbase_handle_es: handleES\n}\n});\n}\n\n\nreturn items;"
      },
      "id": "00823cc9-767a-484e-a3f2-749d554ff508",
      "name": "Expand Languages & Sanitize",
      "type": "n8n-nodes-base.code",
      "position": [
        -2192,
        2096
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "authentication": "accessToken",
        "resource": "product",
        "operation": "getAll",
        "limit": 2,
        "additionalFields": {}
      },
      "id": "b597fc44-2492-46f3-8c37-3799106d7e63",
      "name": "Get many products1",
      "type": "n8n-nodes-base.shopify",
      "position": [
        -2992,
        2096
      ],
      "typeVersion": 1,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2544,
        1120
      ],
      "id": "f98ec9d9-9502-4600-93f8-cbcd55da9258",
      "name": "Split Out"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ml",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2992,
        1536
      ],
      "id": "f27e2b59-6e6e-4dd8-b17c-12172106d231",
      "name": "Webhook",
      "webhookId": "b670c147-2dde-406a-a7bc-9fa692c7978b",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/oauth/token",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "grant_type",
              "value": "authorization_code"
            },
            {
              "name": "client_id",
              "value": "7334627525708690"
            },
            {
              "name": "client_secret",
              "value": "Ne3ghVZguF8tkwL5Je4WYuiY2pzb7oOS"
            },
            {
              "name": "redirect_uri",
              "value": "https://automation.whitelabel.lat"
            },
            {
              "name": "code",
              "value": "TG-6900d1c610767800017246fe-46822039"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2992,
        1760
      ],
      "id": "6d9e0daa-ff3b-4e62-94c5-82e2540120fe",
      "name": "Get token"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2096,
        1120
      ],
      "id": "f279c885-6434-432b-bb38-b44af3fe3706",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "https://api.mercadolibre.com/users/me",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-102810-35f67e3ab489d703ec44df92b95d87fb-46822039"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2992,
        1952
      ],
      "id": "ca216ec6-99be-4be8-a4d4-e77f47d0a2cc",
      "name": "verificar token"
    },
    {
      "parameters": {
        "url": "https://api.mercadolibre.com/sites/MLV/domain_discovery/search?q=amortiguador",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2992,
        2640
      ],
      "id": "20c90d2e-478b-4fa1-b11f-95eb2734bbac",
      "name": "get category"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"CO\", // Cambia a \"VE\" cuando publiques en Venezuela\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV23030\",\n        amortiguador: \"MLV179449\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio === //\n    let precioBase = parseFloat(variante.price || 0);\n    if (CONFIG.pais === \"CO\") {\n      precioBase = precioBase * CONFIG.tasaCambioUSD;\n    }\n\n    const precioFinal = Math.max(precioBase, 3000);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2320,
        1120
      ],
      "id": "941a9a8f-02c8-4fce-a7c4-6073a27f9c4e",
      "name": "caucho"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/291859081/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        1056
      ],
      "id": "f222aed8-68a6-44de-90c2-eff239499bdc",
      "name": "HTTP Request2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1424,
        1056
      ],
      "id": "b505c66a-edab-4407-b4e7-2d7a31f75815",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        1120
      ],
      "id": "3e9b1d39-4cdf-4559-8f90-7b2f50e906b3",
      "name": "create product",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('HTTP Request2').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        1312
      ],
      "id": "6846cc77-9cca-4dc9-b839-1aef26aafa2c",
      "name": "update product",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('Loop Over Items').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('Loop Over Items').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('Loop Over Items').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('Loop Over Items').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('Loop Over Items').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('Loop Over Items').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('Loop Over Items').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1200,
        1152
      ],
      "id": "934f6c34-b190-4cc7-b6b9-0cf0df47ffb7",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "https://tonowheels.myshopify.com/admin/api/2024-10/products.json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2768,
        1120
      ],
      "id": "46c21af2-eb03-46a1-b982-dd9443dc57a4",
      "name": "Get Products",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1872,
        528
      ],
      "id": "661c7c92-ad51-4e9c-b706-df812f9e2b1d",
      "name": "Edit Fields1",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('Loop Over Items').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1200,
        960
      ],
      "id": "4eece1a0-78f1-4bfd-9980-7b4734e6a7fc",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1872,
        1056
      ],
      "id": "8be3418b-5644-4f60-b325-0edeccc68131",
      "name": "Wait",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -976,
        960
      ],
      "id": "59139b53-2e2a-4159-9cc1-ab587afac401",
      "name": "Wait1",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -976,
        1152
      ],
      "id": "0081cabd-4af5-4aff-bad8-e9bb02eca355",
      "name": "Wait2",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1424,
        528
      ],
      "id": "080587a9-42e5-406f-93b3-14016c2525a0",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -976,
        528
      ],
      "id": "9f92ebae-8c63-40b5-aa75-adff5f11aad4",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"CO\", // Cambia a \"VE\" cuando publiques en Venezuela\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV23030\",\n        amortiguador: \"MLV179449\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio === //\n    let precioBase = parseFloat(variante.price || 0);\n    if (CONFIG.pais === \"CO\") {\n      precioBase = precioBase * CONFIG.tasaCambioUSD;\n    }\n\n    const precioFinal = Math.max(precioBase, 3000);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1200,
        528
      ],
      "id": "c3721129-c41c-43da-bf55-8691a7434e34",
      "name": "caucho1"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/291859081/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -528,
        432
      ],
      "id": "d447aab2-54dc-4c99-8c8f-e83d77d4231b",
      "name": "HTTP Request",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -304,
        432
      ],
      "id": "b615df67-794f-44ed-bc59-0cc40defd49f",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        480
      ],
      "id": "f0158861-df95-48c3-bfe2-4e5ea8c3adf3",
      "name": "create product1",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('HTTP Request').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        672
      ],
      "id": "f88538b9-dcd8-4386-9162-f7fc90867d84",
      "name": "update product1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('Loop Over Items1').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('Loop Over Items1').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('Loop Over Items1').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('Loop Over Items1').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('Loop Over Items1').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('Loop Over Items1').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('Loop Over Items1').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        544
      ],
      "id": "630608a1-2f81-45bd-8bc2-7b0b5aac297e",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "url": "={{ $json.next }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        528
      ],
      "id": "aaefc1d8-4827-476d-b6bf-03baf7869770",
      "name": "Get Products1",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products1').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -752,
        -80
      ],
      "id": "c2030339-15f0-49da-9947-7b52e499a8cd",
      "name": "Edit Fields4",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('Loop Over Items1').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        352
      ],
      "id": "b4842c03-31b2-43c9-afbc-ff15944f7fb9",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -752,
        432
      ],
      "id": "c0101813-9f11-4539-9c8a-dc96ed030899",
      "name": "Wait3",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        144,
        352
      ],
      "id": "e8e68c00-5f0c-489a-85fa-49ba2ae1c2ee",
      "name": "Wait4",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        144,
        544
      ],
      "id": "2d858b3e-1284-4cbd-93ed-f9a8b5551c38",
      "name": "Wait5",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -304,
        -80
      ],
      "id": "a26a6eab-bf55-4091-81d2-6944c9753908",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        144,
        -80
      ],
      "id": "c0430fb5-0ea9-4d8f-a0e5-ceb8727d3629",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"CO\", // Cambia a \"VE\" cuando publiques en Venezuela\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV23030\",\n        amortiguador: \"MLV179449\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio === //\n    let precioBase = parseFloat(variante.price || 0);\n    if (CONFIG.pais === \"CO\") {\n      precioBase = precioBase * CONFIG.tasaCambioUSD;\n    }\n\n    const precioFinal = Math.max(precioBase, 3000);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -80
      ],
      "id": "0e4c9119-d002-4863-8694-7e50ef239b46",
      "name": "caucho2"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/291859081/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        -160
      ],
      "id": "51ed784c-754b-4688-8be9-c907b8532737",
      "name": "HTTP Request1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        816,
        -160
      ],
      "id": "9f0d6658-55be-4f67-abfc-1113b6e75f0d",
      "name": "If2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1488,
        -160
      ],
      "id": "0f7fdbc6-7ad2-4759-a473-3957fa6a7dcf",
      "name": "create product2"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('HTTP Request1').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1488,
        48
      ],
      "id": "1ebd03bf-f568-41f7-8f86-511dd199d81e",
      "name": "update product2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('Loop Over Items2').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('Loop Over Items2').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('Loop Over Items2').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('Loop Over Items2').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('Loop Over Items2').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('Loop Over Items2').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('Loop Over Items2').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -64
      ],
      "id": "4c4e2128-ec0f-4502-b5a1-482621a22bb8",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "url": "={{ $json.next }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -528,
        -80
      ],
      "id": "79080fae-f10f-4c2b-8399-95b5158e8edd",
      "name": "Get Products2",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products2').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        368,
        -736
      ],
      "id": "4a40cc30-5ebe-4b95-8fdb-f62aa6308005",
      "name": "Edit Fields7",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('Loop Over Items2').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -256
      ],
      "id": "2f223a5b-a51e-4bd7-9ebd-6031516dd7d7",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        368,
        -160
      ],
      "id": "fb719200-6222-496e-8d51-21d654ed992c",
      "name": "Wait6",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1264,
        -256
      ],
      "id": "81e2f30a-a0b7-498f-81bb-003273ac910a",
      "name": "Wait7",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1264,
        -64
      ],
      "id": "2f599fe0-0e76-43d1-a40c-2124dc44fd8e",
      "name": "Wait8",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        816,
        -736
      ],
      "id": "d10eb7f0-9e5a-44a3-bbb0-9dff741f2ed4",
      "name": "Split Out3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1264,
        -736
      ],
      "id": "dde780d8-7d3e-4249-967e-eeb1f014746f",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"CO\", // Cambia a \"VE\" cuando publiques en Venezuela\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV23030\",\n        amortiguador: \"MLV179449\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio === //\n    let precioBase = parseFloat(variante.price || 0);\n    if (CONFIG.pais === \"CO\") {\n      precioBase = precioBase * CONFIG.tasaCambioUSD;\n    }\n\n    const precioFinal = Math.max(precioBase, 3000);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -736
      ],
      "id": "52961c6a-ea44-4c9b-b564-13bdfc5a3ff7",
      "name": "caucho3"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/291859081/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1712,
        -752
      ],
      "id": "8f873e64-2903-4db9-ad42-e5103f029d10",
      "name": "HTTP Request3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1936,
        -752
      ],
      "id": "772928f9-64c5-40e2-9ced-dfe2995e9eca",
      "name": "If3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2608,
        -736
      ],
      "id": "572738ca-da3f-4871-9928-1b2679d31d64",
      "name": "create product3"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('HTTP Request3').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2608,
        -544
      ],
      "id": "04c1248c-040b-4e2d-b954-dd339a99b9be",
      "name": "update product3",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('Loop Over Items3').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('Loop Over Items3').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('Loop Over Items3').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('Loop Over Items3').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('Loop Over Items3').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('Loop Over Items3').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('Loop Over Items3').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        -656
      ],
      "id": "b0709b25-d5ee-4ef8-864d-e6074374addc",
      "name": "Edit Fields10"
    },
    {
      "parameters": {
        "url": "={{ $json.next }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        -736
      ],
      "id": "7c8e61ab-15a2-4a26-abf2-51a9f5f8fa08",
      "name": "Get Products3",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products3').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        -944
      ],
      "id": "57cd0105-e209-42d6-93f8-298314f840fe",
      "name": "Edit Fields11",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('Loop Over Items3').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        -848
      ],
      "id": "24e4bd5b-88ea-4fd0-b143-8ba470b9d829",
      "name": "Edit Fields12"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1488,
        -752
      ],
      "id": "1be84338-c216-44e2-8003-2aa287e1bd99",
      "name": "Wait9",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2384,
        -848
      ],
      "id": "5a048b4e-b388-4386-8ed4-06f9d16c0911",
      "name": "Wait10",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2384,
        -656
      ],
      "id": "4b4bbe8c-b769-48ab-9b1d-85638b161642",
      "name": "Wait11",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2768,
        3744
      ],
      "id": "086d2472-6e2b-4bb9-82d6-de8b593c539a",
      "name": "Split Out4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2320,
        3744
      ],
      "id": "9d70d693-864b-4325-97c7-759c1fb26e04",
      "name": "Loop Over Items4"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"VE\", // Cambia a \"VE\" cuando publiques en Venezuela - \"CO\" Colombia\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV403699\",\n        amortiguador: \"MLV122587\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio (AJUSTADA) === //\n    let precioBase = parseFloat(variante.price || 0);\n\n    if (CONFIG.pais === \"CO\") {\n      // Si hay tasa de cambio válida la aplicamos; si no, dejamos el precio tal cual (se entiende que ya viene en COP).\n      if (CONFIG.tasaCambioUSD && Number(CONFIG.tasaCambioUSD) > 0) {\n        precioBase = precioBase * Number(CONFIG.tasaCambioUSD);\n      } else {\n        // no hay tasa de cambio: se mantiene el valor recibido\n        precioBase = precioBase;\n      }\n    } else if (CONFIG.pais === \"VE\") {\n      // En Venezuela se usa exactamente el valor que llega (asumido en USD)\n      precioBase = precioBase;\n    } else {\n      // Otros países: por defecto mantén el valor original\n      precioBase = precioBase;\n    }\n\n    // Aplicar un mínimo razonable según la moneda del site para no alterar precios en USD\n    const moneda = siteConfig.currency_id;\n    const minimoPorMoneda = moneda === \"COP\" ? 3000 : 0.01; // si COP => 3000, si USD u otra => mínimo insignificante\n    const precioFinal = Math.max(precioBase, minimoPorMoneda);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2544,
        3744
      ],
      "id": "f0e6c18b-25d6-4930-bdab-24c6e0cb8bcf",
      "name": "caucho4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1648,
        3664
      ],
      "id": "36b7b1c4-714c-4a04-8ae9-edab52c475e2",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-102810-35f67e3ab489d703ec44df92b95d87fb-46822039"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        3744
      ],
      "id": "851ce54f-f356-4afa-b3d7-5eafecc260e0",
      "name": "create product4",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('get ML products').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-102810-35f67e3ab489d703ec44df92b95d87fb-46822039"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        3936
      ],
      "id": "261c9c31-940e-4968-b8c0-3ec8922fa491",
      "name": "update product4",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('Loop Over Items4').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('Loop Over Items4').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('Loop Over Items4').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('Loop Over Items4').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('Loop Over Items4').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('Loop Over Items4').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('Loop Over Items4').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1424,
        3760
      ],
      "id": "f0080962-c263-477f-bde5-adab7da19662",
      "name": "Edit Fields9"
    },
    {
      "parameters": {
        "url": "https://tonowheels.myshopify.com/admin/api/2024-10/products.json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2992,
        3744
      ],
      "id": "a91dc840-2e42-4311-9288-fbeb8679a9c8",
      "name": "Get Products4",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products4').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2096,
        3264
      ],
      "id": "10703adf-b8bf-4531-bdf9-df96266dea1d",
      "name": "Edit Fields13",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('Loop Over Items4').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1424,
        3568
      ],
      "id": "52116ba1-8cc0-4e42-95e3-6a911b21f805",
      "name": "Edit Fields14"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2096,
        3664
      ],
      "id": "fd0149d7-64de-4a79-8656-7e6739e66afa",
      "name": "Wait12",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1200,
        3568
      ],
      "id": "149f0ab8-16bb-4a42-81a1-a44ecbac22b9",
      "name": "Wait13",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1200,
        3760
      ],
      "id": "59265a33-e794-4d74-ba43-e5c97d760d90",
      "name": "Wait14",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.products",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1648,
        3184
      ],
      "id": "a728b04e-e409-4a01-94f2-96eea5cf65f9",
      "name": "Split Out5"
    },
    {
      "parameters": {
        "jsCode": "// === CONFIGURACIÓN GENERAL === //\nconst CONFIG = {\n  pais: \"CO\", // Cambia a \"VE\" cuando publiques en Venezuela\n  tasaCambioUSD: 4000, // Solo se usa en Colombia para convertir precios en USD\n  sites: {\n    CO: {\n      site_id: \"MCO\",\n      currency_id: \"COP\",\n      categorias: {\n        default: \"MCO1747\",\n        caucho: \"MCO23030\",\n        amortiguador: \"MCO165996\",\n        otros: \"MCO447991\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    },\n    VE: {\n      site_id: \"MLV\",\n      currency_id: \"USD\",\n      categorias: {\n        default: \"MLV1747\",\n        caucho: \"MLV23030\",\n        amortiguador: \"MLV179449\",\n        otros: \"MLV1953\"\n      },\n      atributos: {\n        caucho: {\n          ancho: \"SECTION_WIDTH\",\n          perfil: \"AUTOMOTIVE_TIRE_ASPECT_RATIO\",\n          rin: \"RIM_DIAMETER\",\n          cantidad: \"TIRES_NUMBER\",\n          carga: \"LOAD_INDEX\"\n        },\n        amortiguador: {\n          numeroParte: \"PART_NUMBER\",\n          tipo: \"PART_TYPE\",\n          marcaVehiculo: \"VEHICLE_BRAND\"\n        }\n      }\n    }\n  }\n};\n\n// === FUNCIONES AUXILIARES === //\nfunction cleanHTML(html) {\n  if (!html) return \"\";\n  return html.replace(/<[^>]*>?/gm, \"\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction extraerMedidasCaucho(texto) {\n  const regex = /(\\d{3})[\\/\\-](\\d{2})[Rr]?(\\d{2})/;\n  const match = texto.match(regex);\n  if (!match) return null;\n  return {\n    ancho: `${match[1]} mm`,\n    perfil: match[2],\n    rin: `${match[3]} in`\n  };\n}\n\n// === FUNCIÓN PARA LIMITAR TÍTULOS A 60 CARACTERES === //\nfunction limitarTitulo(titulo, max = 60) {\n  if (titulo.length <= max) return titulo;\n  const truncado = titulo.substring(0, max);\n  const ultimoEspacio = truncado.lastIndexOf(\" \");\n  return (ultimoEspacio > 0 ? truncado.substring(0, ultimoEspacio) : truncado).trim();\n}\n\n// === PROCESO PRINCIPAL === //\nconst productos = items.map(item => item.json);\nconst publicaciones = [];\n\nfor (const producto of productos) {\n  const base = {\n    title: producto.title,\n    description: cleanHTML(producto.body_html),\n    vendor: producto.vendor,\n    images: (producto.images || []).map(img => ({ source: img.src })),\n  };\n\n  const tituloLower = base.title.toLowerCase();\n  const esCaucho = tituloLower.includes(\"caucho\") || tituloLower.includes(\"llanta\") || tituloLower.includes(\"neumático\");\n  const esAmortiguador = tituloLower.includes(\"amortiguador\");\n\n  const siteConfig = CONFIG.sites[CONFIG.pais];\n  let categoria = siteConfig.categorias.otros;\n\n  if (esCaucho) categoria = siteConfig.categorias.caucho;\n  else if (esAmortiguador) categoria = siteConfig.categorias.amortiguador;\n\n  let medidas = null;\n  if (esCaucho) {\n    medidas = extraerMedidasCaucho(base.title) || extraerMedidasCaucho(base.description);\n  }\n\n  for (const variante of producto.variants || []) {\n    // === Conversión de precio === //\n    let precioBase = parseFloat(variante.price || 0);\n    if (CONFIG.pais === \"CO\") {\n      precioBase = precioBase * CONFIG.tasaCambioUSD;\n    }\n\n    const precioFinal = Math.max(precioBase, 3000);\n\n    // === Generar título con límite de 60 caracteres === //\n    const tituloBase = `${base.title} - ${variante.title !== \"Default Title\" ? variante.title : \"\"}`.trim();\n    const tituloFinal = limitarTitulo(tituloBase, 60);\n\n    const item = {\n      title: tituloFinal,\n      price: precioFinal,\n      currency_id: siteConfig.currency_id,\n      available_quantity: variante.inventory_quantity || 0,\n      buying_mode: \"buy_it_now\",\n      condition: \"new\",\n      listing_type_id: \"gold_special\",\n      category_id: categoria,\n      description: { plain_text: base.description },\n      pictures: base.images,\n      attributes: [\n        { id: \"BRAND\", value_name: base.vendor || \"Sin marca\" },\n        { id: \"MODEL\", value_name: base.title }\n      ]\n    };\n\n    // === ATRIBUTOS DE CAUCHO === //\n    if (esCaucho) {\n      const attr = siteConfig.atributos.caucho;\n      const ancho = medidas?.ancho || \"205 mm\";\n      const perfil = medidas?.perfil || \"55\";\n      const rin = medidas?.rin || \"16 in\";\n\n      item.attributes.push(\n        { id: attr.ancho, value_name: ancho },\n        { id: attr.perfil, value_name: perfil },\n        { id: attr.rin, value_name: rin },\n        { id: attr.carga, value_name: \"91\" },\n        { id: attr.cantidad, value_name: \"1\" }\n      );\n    }\n\n    // === ATRIBUTOS DE AMORTIGUADOR === //\n    if (esAmortiguador) {\n      const attr = siteConfig.atributos.amortiguador;\n      const partNumber =\n        variante.sku ||\n        producto.handle ||\n        `${base.vendor}-${variante.id}`.replace(/\\s+/g, \"-\");\n\n      item.attributes.push(\n        { id: attr.numeroParte, value_name: partNumber },\n        { id: attr.tipo, value_name: \"Amortiguador\" },\n        { id: attr.marcaVehiculo, value_name: \"Universal\" }\n      );\n    }\n\n    publicaciones.push({ json: item });\n  }\n}\n\nreturn publicaciones;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1424,
        3184
      ],
      "id": "03360730-0b41-4e1b-966f-cce1d325a673",
      "name": "caucho5"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/291859081/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        3184
      ],
      "id": "78054b81-a0f9-4b6d-91f7-279a0736ddf3",
      "name": "HTTP Request5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74da0a56-6733-4c1a-8971-4e2741048a77",
              "leftValue": "={{ $json.paging.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -752,
        3184
      ],
      "id": "933a3e59-83c6-4c13-b075-193de4871907",
      "name": "If5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mercadolibre.com/items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.item }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        3088
      ],
      "id": "8f1d18b1-9028-49da-a6aa-79d2c089c832",
      "name": "create product5",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.mercadolibre.com/items/{{ $('HTTP Request5').item.json.results[0] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-100809-7782bf6d848c6ad490e60499545b1cc4-291859081"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        3280
      ],
      "id": "8e0cbc97-25a3-4146-9750-a756416db6fb",
      "name": "update product5",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5d070c-d1b6-498f-9bd8-9342a0e3bc77",
              "name": "title",
              "value": "={{ $('caucho5').item.json.title }}",
              "type": "string"
            },
            {
              "id": "bb11ebbb-a03a-488f-9943-17a97ef43326",
              "name": "price",
              "value": "={{ $('caucho5').item.json.price }}",
              "type": "number"
            },
            {
              "id": "824c7b2e-765a-4fbb-bd8e-a95a7f00f12d",
              "name": "currency_id",
              "value": "={{ $('caucho5').item.json.currency_id }}",
              "type": "string"
            },
            {
              "id": "366e2872-821c-4f2d-a776-69cf7ca2dce8",
              "name": "available_quantity",
              "value": "={{ $('caucho5').item.json.available_quantity }}",
              "type": "number"
            },
            {
              "id": "995e7518-f1fb-49cb-b27e-067bb6e0456a",
              "name": "condition",
              "value": "={{ $('caucho5').item.json.condition }}",
              "type": "string"
            },
            {
              "id": "22764566-a28e-4fb8-a9a4-fc0425449fe5",
              "name": "category_id",
              "value": "={{ $('caucho5').item.json.category_id }}",
              "type": "string"
            },
            {
              "id": "9256e42a-a124-422d-a369-3199dedeac09",
              "name": "pictures",
              "value": "={{ $('caucho5').item.json.pictures }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -528,
        3280
      ],
      "id": "84b4e30c-9c01-4c7e-9063-e8f89ada4478",
      "name": "Edit Fields15"
    },
    {
      "parameters": {
        "url": "={{ $json.next }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyAccessTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1872,
        3264
      ],
      "id": "7879e7ad-4a79-431e-96c9-082c0fb6ff40",
      "name": "Get Products5",
      "notesInFlow": false,
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "9RO1LDkPgTRAthd9",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b2c7cf4-b063-4aab-afe4-b74cb0684a2b",
              "name": "next",
              "value": "={{$('Get Products5').first().json.headers.link.match(/<([^>]+)>; rel=\"next\"/)[1]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        368,
        3264
      ],
      "id": "5a353c98-b4d2-4edd-bfd6-0993ad88c36a",
      "name": "Edit Fields16",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54c25536-0a25-44a2-97e4-abcfcfb474f9",
              "name": "item",
              "value": "={{ $('caucho5').item.json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -528,
        3088
      ],
      "id": "3b77e6b8-4a4f-49c9-9bd7-8c14bf648ccf",
      "name": "Edit Fields17"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1200,
        3184
      ],
      "id": "19bc65b3-0a3c-4bca-b911-01994120b81b",
      "name": "Wait15",
      "webhookId": "a9e9dc4c-0887-4a25-87ad-0fdc0a74dcf6"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -304,
        3088
      ],
      "id": "8597d0db-4b8f-4140-be19-7792dfe74326",
      "name": "Wait16",
      "webhookId": "d36d2f4c-8c59-4501-b046-7e988a16773f"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -304,
        3280
      ],
      "id": "9261dde9-3283-437b-b760-b8b574ded772",
      "name": "Wait17",
      "webhookId": "8d68a993-462f-4d3b-bde9-25dce75d1bd8"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        144,
        3184
      ],
      "id": "ad8e1f76-d79c-4816-afaf-49b40075f0b9",
      "name": "Merge"
    },
    {
      "parameters": {
        "url": "=https://api.mercadolibre.com/users/46822039/items/search?q={{ $json.title }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer APP_USR-7334627525708690-102810-35f67e3ab489d703ec44df92b95d87fb-46822039"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1872,
        3664
      ],
      "id": "38256195-c560-4ad0-8024-38dfe1ff3d87",
      "name": "get ML products",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-07T20:01:05.857Z",
      "updatedAt": "2025-10-07T20:01:05.857Z",
      "role": "workflow:owner",
      "workflowId": "UzeriRNtkpQe3Hir",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-28T22:04:39.628Z",
  "versionId": "ba1902ec-6b5c-4e94-a951-f4471cba75a7"
}