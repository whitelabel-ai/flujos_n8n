{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "ChatwootData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type message Whatsap": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [],
        []
      ]
    },
    "DataText": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "DataText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataAudio": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ChatwootData": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "whatsappData": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "whatsap trigger": {
      "main": [
        [
          {
            "node": "whatsappData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "type message Whatsap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setData": {
      "main": [
        [
          {
            "node": "Get all agents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording1": {
      "main": [
        [
          {
            "node": "DataAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Qubra",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Qubra",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qubra": {
      "main": [
        [
          {
            "node": "Message a model1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ChatwootData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generar Informe": {
      "ai_tool": [
        [
          {
            "node": "Qubra",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Transcribe a recording1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all agents": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Data Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Agent & Business": {
      "main": [
        [
          {
            "node": "Qubra",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a business": {
      "main": [
        [
          {
            "node": "Data Agent & Business",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Agent": {
      "main": [
        [
          {
            "node": "Get a business",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-23T02:04:28.635Z",
  "id": "sVMDU6eZ4l1Fy9vs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Generator Qubra",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d33f420d-c4e0-4cf8-94a0-7ba44d53d25c",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -400,
        1024
      ],
      "id": "c763c16e-115e-4ed4-8e92-f327f9d6131e",
      "name": "Webhook",
      "webhookId": "d33f420d-c4e0-4cf8-94a0-7ba44d53d25c"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38cdad62-0d9c-45bc-860e-9e03d107ba58"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82df4052-c480-44a2-9d09-c195d4bc6879",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c1a8cf-af4e-4bca-a66c-184829c009d8",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "=file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71778507-22f2-4e0f-99d7-fdd87ed1f26b",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        304,
        880
      ],
      "id": "fef5aec4-9284-415e-84fb-9ac483ad05f8",
      "name": "type message Whatsap"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $('initData').item.json.mensaje }}",
              "type": "string"
            },
            {
              "id": "1abd896c-ea14-41a2-9500-ef9393cc170f",
              "name": "agentId",
              "value": "={{ $('ChatwootData').item.json.agentId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        1024
      ],
      "id": "389d7b61-ca01-4989-bf86-d6b00435118c",
      "name": "DataText"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        784,
        1024
      ],
      "id": "6666fe90-750e-4c68-8961-770aebbf4681",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<audio>{{ $json.content.parts[0].text }}</audio>",
              "type": "string"
            },
            {
              "id": "e4e0ad5b-ef37-475c-8c1e-9d8a94461b7b",
              "name": "agentId",
              "value": "={{ $('ChatwootData').item.json.agentId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        832
      ],
      "id": "744e554f-7f8b-451d-b40b-0dd84661ceb8",
      "name": "DataAudio"
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 572,
        "width": 704,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -496,
        704
      ],
      "id": "e51c6b37-cb84-4262-ae10-06100b9234c7",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $json.body.conversation.meta.sender.name.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "01193a9d-40ea-48b1-96f1-592105684644",
              "name": "tipo_mensaje",
              "value": "={{ $json.body.type }}",
              "type": "string"
            },
            {
              "id": "c6b5261d-a252-4328-af15-9699dfc5ba2b",
              "name": "receptor",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $json.body.conversation.labels }}",
              "type": "array"
            },
            {
              "id": "2189dde7-a49e-4226-be25-22f3e62caf99",
              "name": "conversation_id",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            },
            {
              "id": "c8242d40-84d3-4c64-adcc-d15b8de57a9a",
              "name": "account_id",
              "value": "={{ $json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "7d6c4435-2ae7-4716-a211-c8d9898dcd48",
              "name": "api_access_token",
              "value": "=AKgj4inXtQC2qoDuxiHxEFtL",
              "type": "string"
            },
            {
              "id": "aad140bb-399a-46df-b78b-98aa0a9fd6e8",
              "name": "=data",
              "value": "={{ $('Webhook').item.binary.audio}}",
              "type": "object"
            },
            {
              "id": "289f0a9d-b47b-46ff-83d5-3e89462f395f",
              "name": "agentId",
              "value": "={{ $json.body.agentId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -176,
        1024
      ],
      "id": "5d7a04cc-e197-4a81-9b80-5efd8e9041dd",
      "name": "ChatwootData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7fba40fd-13ea-470a-a784-d886fa69b736",
              "name": "account_id",
              "value": "={{ $json.metadata.display_phone_number }}",
              "type": "string"
            },
            {
              "id": "cb120617-0a0f-4b8d-8979-909001725c0d",
              "name": "phone_number_id",
              "value": "={{ $json.metadata.phone_number_id }}",
              "type": "string"
            },
            {
              "id": "5276d674-1b57-4af7-88f3-5f9616e64cc3",
              "name": "nombre",
              "value": "={{ $json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "92d97526-26b7-461c-b7ec-7cd13074512e",
              "name": "phone_number",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "0605a012-1740-4b13-8e7f-57e156ad2fbe",
              "name": "mensaje",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "5060779d-87fc-49af-9212-c7972aae9ff0",
              "name": "tipo_mensaje",
              "value": "={{ $json.messages[0].type }}",
              "type": "string"
            },
            {
              "id": "358f4697-0d6f-4184-bfbd-31ff4f2e2ac2",
              "name": "tags",
              "value": "={{ $json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -176,
        832
      ],
      "id": "ee1c34e7-37b8-445f-ade5-18d307e45e93",
      "name": "whatsappData"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "db4445da-e4e4-47df-9e60-7167703e0291",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -400,
        832
      ],
      "id": "57d4e2a3-27df-4970-8a02-a89b4bb3ed1b",
      "name": "whatsap trigger",
      "webhookId": "db4445da-e4e4-47df-9e60-7167703e0291",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cb120617-0a0f-4b8d-8979-909001725c0d",
              "name": "phone_number_id",
              "value": "={{ $json.phone_number_id }}",
              "type": "string"
            },
            {
              "id": "5276d674-1b57-4af7-88f3-5f9616e64cc3",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "92d97526-26b7-461c-b7ec-7cd13074512e",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "0605a012-1740-4b13-8e7f-57e156ad2fbe",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "5060779d-87fc-49af-9212-c7972aae9ff0",
              "name": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}",
              "type": "string"
            },
            {
              "id": "358f4697-0d6f-4184-bfbd-31ff4f2e2ac2",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "string"
            },
            {
              "id": "d7bd017f-435b-4c5c-89ba-77b2bdd3d56d",
              "name": "account_id",
              "value": "={{ $json.account_id }}",
              "type": "string"
            },
            {
              "id": "5df9085c-2dab-4895-87b6-26f1a70b74c6",
              "name": "conversation_id",
              "value": "={{ $json.conversation_id }}",
              "type": "string"
            },
            {
              "id": "3b0ab472-eb47-486f-87b8-92fe29a4f764",
              "name": "=data",
              "value": "={{ $json.data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        48,
        928
      ],
      "id": "b6e88130-2d7f-47bb-a5ba-03473c655600",
      "name": "initData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f107ad-f4e3-4616-a1ec-515f7324ba23",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "6f55c6f4-4cb3-4cec-9d31-b956d3fffde0",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "bad14eb8-f005-4d91-bd83-600e6105d974",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "a4895cfb-af6e-49c8-a57c-23a43d43e913",
              "name": "agentId",
              "value": "={{ $json.agentId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1296,
        848
      ],
      "id": "a68383e0-e0f9-4e29-9b43-65b4124c89fb",
      "name": "setData"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        784,
        832
      ],
      "id": "b2d5c6fb-7a0e-4fbe-8478-5e41c727f191",
      "name": "Transcribe a recording1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "=",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('setData').item.json.mensaje }}",
              "type": "string"
            },
            {
              "id": "32e3f14f-f9f9-4914-8b3d-a8ed2dc551cf",
              "name": "agentName",
              "value": "={{ $json.agentName }}",
              "type": "string"
            },
            {
              "id": "62e236b4-d494-4a53-8888-6a15412e7b80",
              "name": "agentDescription",
              "value": "={{ $json.agentDescription }}",
              "type": "string"
            },
            {
              "id": "792d4574-9c87-43f7-9ac9-ba48d37a011a",
              "name": "questionsPrompt",
              "value": "={{ $json.questionsPrompt }}",
              "type": "string"
            },
            {
              "id": "6e43b04b-b710-4b63-a869-f49432b8b465",
              "name": "businessName",
              "value": "={{ $('Get a business').item.json.name }}",
              "type": "string"
            },
            {
              "id": "454e873e-acdd-435f-b100-890c934a854f",
              "name": "businessDescription",
              "value": "={{ $('Get a business').item.json.description }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        656
      ],
      "id": "739d792e-7d10-47ca-ade1-b66d35e1eb30",
      "name": "Data"
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 1312
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        704
      ],
      "id": "b568eb8c-de1f-48d0-b987-eb714b8b7c08",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 600,
        "width": 696,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2560,
        704
      ],
      "id": "6cb96f71-df4f-41ff-af4e-ffb497683090",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1952,
        1088
      ],
      "id": "5e445a78-043f-4c5c-8981-26c18b236626",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_qubra_{{ $json.user_id }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2128,
        1152
      ],
      "id": "93519c38-752a-4abf-9333-1c231a177562",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **Reemplaza siempre la palabra \"Dosis\" por \"Cantidad\"**.  \n- **No incluyas datos sensibles** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\nIMPORTANTE:\ncuando detectes que llegue un informecompleto bien estructurado en formato markdoun con titulo... tipo objeto{ ... }: todo lo que llegue dentro de Informe: lo debes enviar en una sola parte, sin cortar nada, ignoras las Reglas de esa parte que contiene el Informe, envias en una sola parte asi:\n\"Informe\": \"todo el contenido que llegue despues\"\n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\",\n  \"Informe\": \"Texto con todo el contenido del Informe completo\"\n}\n---\n\n### **Mensaje:**  \n\"{{ $json.output }}\" \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2640,
        912
      ],
      "id": "cbbb0c81-3e40-4306-82b3-65fbc8d6aa19",
      "name": "Message a model1",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json.message.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3008,
        912
      ],
      "id": "e10bbbda-ade3-4ac8-8be2-e55b78672466",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensaje del usuario: \"{{ $json.message }}\",",
        "options": {
          "systemMessage": "=# Identidad del agente Qubra llamado: \"{{ $json.agentName }}\"\n\n{{ $json.agentDescription }}\n\nNo eres un chatbot genérico: eres *un consultor empático, estratégico y motivador*, con personalidad artística y profesional.\n\nfecha y hora hoy: {{ $now }}\n\nPara ayudarte a conocer mejor la empresa, este es el contexto que debes conocer:\nNombre de la empresa: \"{{ $json.businessName }}\"\nDescripción de la empresa: \"{{ $json.businessDescription }}\"\n\n## Personalidad\n\nCombinas 4 arquetipos:\n\n- 🎨*Artista Creador:* Usas metáforas y un lenguaje cercano, inspirador, creativo. Ayudas al usuario a “pintar” la esencia de su marca con autenticidad.\n- 📊 *Estratega Analítico:* Haces preguntas inteligentes, detectas patrones, sintetizas con claridad. Desarmas problemas de manera lógica y accesible.\n- 🏗️ *Constructor de Futuro:* Orientas hacia el cambio, mostrando nuevas perspectivas y posibilidades de mejora, evitando soluciones genéricas.\n- 🤝 *Socio Estratégico:* Te pones en los zapatos del usuario, entiendes su negocio y contexto real, y traduces lo complejo en ideas claras y aplicables.\n\nTu tono es *cercano, profesional, claro, estratégico, empático y auténtico*.\n\n---\n\n# Principios Fundamentales de Qubra\n\n✅ *Autenticidad y Propósito:* Cada interacción debe reflejar la singularidad del usuario y conectar con lo que da sentido a su marca. Nunca dar respuestas genéricas ni superficiales.\n✅ *Claridad y Simplicidad (anti-tecnicismos):* Evita jerga técnica o lenguaje frío. Explica siempre en términos humanos y accesibles, para que todo sea comprensible y accionable.\n✅ *Empatía y Validación Emocional:* Reconoce frustraciones, miedos y deseos. No solo valides con frases amables: demuestra comprensión real y genera confianza a través del acompañamiento.\n✅ *Disrupción y Perspectivas Únicas:* No te limites a repetir problemas. Muestra nuevas formas de ver el negocio, oportunidades inesperadas y caminos personalizados.\n✅ *Socio Estratégico:* Habla como un aliado del negocio, vinculando siempre el diagnóstico con la vida real del usuario (ventas, clientes, tiempo, esfuerzo).\n\n❌ Nunca usar un tono vendedor agresivo.\n❌ Nunca ofrecer soluciones enlatadas o impersonales.\n❌ Nunca abrumar con exceso de información.\n❌ Nunca juzgar o minimizar las respuestas del usuario.\n\n---\n\n# Objetivo de Qubra\n\n1. Guiar al usuario en una conversación diagnóstica estructurada, para descubrir su realidad actual en marketing, procesos y tecnología.\n2. Responder preguntas sobre Vanguardistas y su metodología cuando sea necesario.\n3. Capturar todas las respuestas del usuario, validarlas y almacenarlas en memoria, para luego enviarlas a la `tool` *Generar Informe*.\n4. Al final, invitar al usuario a recibir su informe por email y pedir el correo de contacto.\n\n---\n\n# Flujo General de Conversación\n{{ $json.questionsPrompt }}\n\n# Manejo de Preguntas del Usuario\n\n- *Si la pregunta es sobre la metodología o la empresa:* usa la `tool` *Buscar en Documentación (RAG)* para responder con precisión y sencillez.\n- *Si la pregunta es fuera de contexto:* redirige con cortesía hacia la conversación diagnóstica. Ejemplo:\n  > “Es un tema interesante. Para darte un diagnóstico útil para tu negocio, ¿te parece si seguimos explorando tu presencia digital?”\n\n---\n\n# Reglas de Qubra\n\n✅ Siempre guiar la conversación hacia el diagnóstico.\n✅ Ser empático y profesional, nunca robótico ni vendedor agresivo.\n✅ Reconocer frustraciones y esperanzas, mostrando comprensión real.\n✅ Recordar el contexto completo y usar referencias a respuestas previas.\n✅ Guardar y estructurar respuestas en memoria, para enviarlas a la `tool` Generar Informe.\n✅ Pedir y validar el correo antes de finalizar la sesión.\n✅ Mantener el tono Vanguardista: humano, estratégico, artístico, inspirador y auténtico.\n\n❌ Nunca dar un diagnóstico final dentro del chat (eso lo hace la tool del informe).\n❌ Nunca improvisar información que no esté en la documentación de Vanguardistas.\n❌ Nunca terminar la conversación sin ofrecer el próximo paso (el informe).\n\n---\n\n# Tools disponibles\n\n1. *Generar Informe:* recibe el historial completo de conversación (preguntas y respuestas) y crea el informe diagnóstico para el usuario.\n2. *Buscar en Documentación (RAG):* permite consultar la documentación de Vanguardistas para responder preguntas de proceso/metodología.\n3. *Guardar Progreso en DB (opcional):* guarda estado de respuestas en caso de desconexión del chat.\n\n---\n\n# Instrucciones técnicas\n\n- Mantén toda la información del usuario organizada en un objeto estructurado (ejemplo JSON) con campos:\n\n  - `nombre`\n  - `empresa`\n  - `correo`\n  - `respuestas_marketing`\n  - `respuestas_procesos`\n  - `respuestas_tecnologia`\n  - `respuestas_propósito`\n  - `preguntas_extra`\n\n- Una vez el usuario haya respondido lo suficiente, *invoca la tool Generar Informe* enviando el historial de conversación + datos estructurados.\nIMPORTANTE, Si faltan respuestas para alguna etapa, Qubra nunca debe mandar a la tool. Debe detectar huecos y pedir lo que falta con calidez.\n\n- Cierra siempre agradeciendo, resaltando lo valioso de las respuestas del usuario(muy brevemente, corto) y confirmando el envío del informe al correo que el usuario te confirmo y dices algo como espera 1 minuto estamos generando tu diagnostigo.\n- anexa la respuesta de la tool Generar Informe, al final después del cierre, ejemplo:\n  \"mensaje cierre\"\n  Informe: \"todo el contenido del informe sin modificar nada\"\n\nIMPORTANTE siempre antes de dar el cierre invoca la tool *Generar Informe*"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        848
      ],
      "id": "5b3cbad3-a19b-4500-9154-1970f52cae35",
      "name": "Qubra",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "description": "cuando tengas las respuestas completas del usuario llama esta tool para generar el informe.",
        "workflowId": {
          "__rl": true,
          "value": "kU6PQmiycPyk0PMH",
          "mode": "list",
          "cachedResultUrl": "/workflow/kU6PQmiycPyk0PMH",
          "cachedResultName": "informe"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "¿Qué es lo que te inspira a trabajar cada día?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Qu__es_lo_que_te_inspira_a_trabajar_cada_d_a_', `respuesta del usuario a la pregunta ¿Qué es lo que te inspira a trabajar cada día?`, 'string') }}",
            "user_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('user_name', ``, 'string') }}",
            "user_email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('user_email', ``, 'string') }}",
            "user_empresa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('user_empresa', `nombre de la empresa del usuario`, 'string') }}",
            "¿Qué vendes y a qué sector te diriges?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Qu__vendes_y_a_qu__sector_te_diriges_', `respuesta del usuario a la pregunta Qué vendes y a qué sector te diriges?`, 'string') }}",
            "¿Qué emociones quieres que tu marca transmita a tus clientes?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Qu__emociones_quieres_que_tu_marca_transmita_a_tus_clientes_', `respuesta del usuario a la pregunta ¿Qué emociones quieres que tu marca transmita a tus clientes?`, 'string') }}",
            "¿Hasta qué punto conoces a profundidad a tu cliente ideal y el problema específico que tu marca/empresa resuelve para ellos?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Hasta_qu__punto_conoces_a_profundidad_a_tu_cliente_ideal_y_el_', `respuesta del usuario a la pregunta ¿Hasta qué punto conoces a profundidad a tu cliente ideal y el problema específico que tu marca/empresa resuelve para ellos?`, 'string') }}",
            "¿Cómo describirías la experiencia que tus clientes viven al interactuar con tu marca?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_C_mo_describir_as_la_experiencia_que_tus_clientes_viven_al_int', `respuesta del usuario a la pregunta ¿Cómo describirías la experiencia que tus clientes viven al interactuar con tu marca?`, 'string') }}",
            "¿Qué tan visible eres a nivel digital?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Qu__tan_visible_eres_a_nivel_digital_', `respuesta del usuario a la pregunta`, 'string') }}",
            "¿Qué objetivo refleja mejor lo que quieres lograr con tu marca a nivel digital?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Qu__objetivo_refleja_mejor_lo_que_quieres_lograr_con_tu_marca_', `respuesta del usuario a la pregunta ¿Qué tan visible eres a nivel digital?`, 'string') }}",
            "¿Cuáles son los recursos existentes que cuentas actualmente para mejorar tu presencia digital?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Cu_les_son_los_recursos_existentes_que_cuentas_actualmente_par', `respuesta del usuario a la pregunta ¿Qué objetivo refleja mejor lo que quieres lograr con tu marca a nivel digital?`, 'string') }}",
            "Cuando mires atrás, ¿qué te hará sentir que este proceso ha sido un éxito para tu negocio?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cuando_mires_atr_s___qu__te_har__sentir_que_este_proceso_ha_sid', `respuesta del usuario a la pregunta ¿Cuáles son los recursos existentes que cuentas actualmente para mejorar tu presencia digital?`, 'string') }}",
            "¿Cuál es el principal problema que enfrentas con respecto a tus ventas hoy?": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('_Cu_l_es_el_principal_problema_que_enfrentas_con_respecto_a_tus', `respuesta del usuario a la pregunta \n¿Cuál es el principal problema que enfrentas con respecto a tus ventas hoy?`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_name",
              "displayName": "user_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_email",
              "displayName": "user_email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_empresa",
              "displayName": "user_empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Qué es lo que te inspira a trabajar cada día?",
              "displayName": "¿Qué es lo que te inspira a trabajar cada día?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Qué vendes y a qué sector te diriges?",
              "displayName": "¿Qué vendes y a qué sector te diriges?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Qué emociones quieres que tu marca transmita a tus clientes?",
              "displayName": "¿Qué emociones quieres que tu marca transmita a tus clientes?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Cuál es el principal problema que enfrentas con respecto a tus ventas hoy?",
              "displayName": "¿Cuál es el principal problema que enfrentas con respecto a tus ventas hoy?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Hasta qué punto conoces a profundidad a tu cliente ideal y el problema específico que tu marca/empresa resuelve para ellos?",
              "displayName": "¿Hasta qué punto conoces a profundidad a tu cliente ideal y el problema específico que tu marca/empresa resuelve para ellos?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Cómo describirías la experiencia que tus clientes viven al interactuar con tu marca?",
              "displayName": "¿Cómo describirías la experiencia que tus clientes viven al interactuar con tu marca?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Qué tan visible eres a nivel digital?",
              "displayName": "¿Qué tan visible eres a nivel digital?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Qué objetivo refleja mejor lo que quieres lograr con tu marca a nivel digital?",
              "displayName": "¿Qué objetivo refleja mejor lo que quieres lograr con tu marca a nivel digital?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "¿Cuáles son los recursos existentes que cuentas actualmente para mejorar tu presencia digital?",
              "displayName": "¿Cuáles son los recursos existentes que cuentas actualmente para mejorar tu presencia digital?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Cuando mires atrás, ¿qué te hará sentir que este proceso ha sido un éxito para tu negocio?",
              "displayName": "Cuando mires atrás, ¿qué te hará sentir que este proceso ha sido un éxito para tu negocio?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2304,
        1088
      ],
      "id": "2f60064a-6ded-46c4-a30f-c0a996168d66",
      "name": "Generar Informe"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.data",
        "binaryPropertyName": "=data",
        "options": {
          "fileName": "={{ $json.data.fileName }}",
          "mimeType": "={{ $json.data.mimeType }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        560,
        832
      ],
      "id": "fe1ee2ef-ed0b-41d9-bb92-dabef9873769",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "content": "## audio/text\n",
        "height": 588,
        "width": 896,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        272,
        704
      ],
      "id": "bd0dd966-da65-4d37-846d-854c15a85335",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        560,
        1024
      ],
      "id": "cb5a87e1-e176-48c5-8c03-cf8558606dca",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "30fbed33-2e16-4ab5-bb44-fe52b61f11ce",
              "leftValue": "={{ $json.agentId }}",
              "rightValue": "={{ $('setData').item.json.agentId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1296,
        1040
      ],
      "id": "4c5b707e-0bc6-492b-a300-48d158c70dea",
      "name": "Filter"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "p292gja07xvw4en",
        "table": "m2zssas9n6sddx3",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1488,
        848
      ],
      "id": "485d5f1f-6078-44f2-9ff8-73f1444dee6a",
      "name": "Get all agents",
      "alwaysOutputData": true,
      "executeOnce": false,
      "retryOnFail": false,
      "credentials": {
        "nocoDbApiToken": {
          "id": "uRuRbHNOx2HQX2Af",
          "name": "Qubra NocoDB"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef8fb1be-0093-4b10-a383-fdbff63d540d",
              "name": "agentName",
              "value": "={{ $('Data Agent').item.json.agentName }}",
              "type": "string"
            },
            {
              "id": "5779516a-1faf-455c-9062-b32190df8b51",
              "name": "agentDescription",
              "value": "={{ $('Data Agent').item.json.agentDescription }}",
              "type": "string"
            },
            {
              "id": "b4675e66-bd37-45dd-bbd1-19700a431d15",
              "name": "businessName",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "94755913-f5be-4733-824f-17badaf54657",
              "name": "businessDescription",
              "value": "={{ $json.description }}",
              "type": "string"
            },
            {
              "id": "a4b7f46a-b076-4d53-ad35-010cf3a0ca3a",
              "name": "questionsPrompt",
              "value": "={{ $('Data Agent').item.json.questionsPrompt }}",
              "type": "string"
            },
            {
              "id": "630e396a-0dda-40b5-820b-0236219d124f",
              "name": "fullname",
              "value": "={{ $('setData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "abba96c3-8da4-441d-9169-6b27de6809c6",
              "name": "message",
              "value": "={{ $('setData').item.json.mensaje }}",
              "type": "string"
            },
            {
              "id": "dd42e681-8574-4678-aa9f-a2fc110b9539",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1696,
        848
      ],
      "id": "f51a5e46-e5e9-4139-805f-7012202aae0c",
      "name": "Data Agent & Business"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "projectId": "p292gja07xvw4en",
        "table": "m3ayktud7ld7xjb",
        "id": "={{ $json.businessId }}"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1696,
        1040
      ],
      "id": "47035f72-158f-4aa7-aa8f-146edb6f996c",
      "name": "Get a business",
      "credentials": {
        "nocoDbApiToken": {
          "id": "uRuRbHNOx2HQX2Af",
          "name": "Qubra NocoDB"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7da725a6-5ed4-4851-9c6a-edfba1ef8395",
              "name": "agentName",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "844c5dc7-c1d8-4830-b056-ccc4815e5c4f",
              "name": "agentDescription",
              "value": "={{ $json.description }}",
              "type": "string"
            },
            {
              "id": "6528f9c6-e313-4d39-89d4-888f30dbf0b2",
              "name": "questionsPrompt",
              "value": "={{ $json.questions_prompt }}",
              "type": "string"
            },
            {
              "id": "b23f630c-9a43-4757-9dba-32029a68f070",
              "name": "businessId",
              "value": "={{ $json.businessId.Id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        1040
      ],
      "id": "9eb1cf89-ab9e-4279-a8cb-29e50a8d024e",
      "name": "Data Agent"
    }
  ],
  "pinData": {
    "whatsap trigger": [
      {
        "json": {
          "messaging_product": "whatsapp",
          "metadata": {
            "display_phone_number": "573143400476",
            "phone_number_id": "735679592965149"
          },
          "contacts": [
            {
              "profile": {
                "name": "Pedro Rodriguez"
              },
              "wa_id": "573228854498"
            }
          ],
          "messages": [
            {
              "from": "573228854498",
              "id": "wamid.HBgMNTczMjI4ODU0NDk4FQIAEhgUM0ZCOUNFRjE5M0FFNzZENzAxQUEA",
              "timestamp": "1755298718",
              "text": {
                "body": "organizar gastos"
              },
              "type": "text"
            }
          ],
          "field": "messages"
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "updatedAt": "2025-10-23T02:04:28.635Z",
      "createdAt": "2025-10-23T02:04:28.635Z",
      "role": "workflow:owner",
      "workflowId": "sVMDU6eZ4l1Fy9vs",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-25T12:52:34.464Z",
  "versionId": "1cb751b7-763e-4d58-b375-b47c8c42e064"
}