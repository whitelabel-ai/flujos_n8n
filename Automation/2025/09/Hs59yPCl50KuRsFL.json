{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Reminder",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Reminder",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "get_transactions": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_categories": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "analyze_spending_habits": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reminder dayli": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio diario": {
      "main": [
        [
          {
            "node": "reminder dayli",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "get contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reminder": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reminder dayli1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reminder dayli2": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio semanal": {
      "main": [
        [
          {
            "node": "reminder dayli1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio mensual": {
      "main": [
        [
          {
            "node": "reminder dayli2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "get_conversationId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get contact": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing15": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_conversation1": {
      "main": [
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Conversations": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "add_label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "get_conversation2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get contact1": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Conversations1": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Send_Encuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Conversations2": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Formulario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_conversationId": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData1": {
      "main": [
        [
          {
            "node": "change prioridad",
            "type": "main",
            "index": 0
          },
          {
            "node": "change prioridad1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T15:01:29.669Z",
  "id": "Hs59yPCl50KuRsFL",
  "isArchived": false,
  "meta": null,
  "name": "DEV -Agente send informe coach",
  "nodes": [
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2400,
        480
      ],
      "id": "3203fd19-89fc-4edf-8cee-a958e1e8b703",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "whitelabel mony"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_chat_id_reminder_{{ $('Data').item.json.numero_whatsapp }}",
        "sessionTTL": 500000,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2528,
        480
      ],
      "id": "b9d5497b-32fe-4fdd-8cb6-c7bd3be5163e",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 1568
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2032,
        32
      ],
      "id": "c794259f-219e-4d10-97b7-f4bf8900387b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## trigger Messages\n",
        "height": 700,
        "width": 1424,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "c7bd20c8-252a-4d5c-adb3-0c38d1a076ae",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "toolDescription": "Recupera todas las transacciones del usuario en un período de tiempo definido",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagina",
              "value": "={{ $fromAI('pagina', `numero de la pagina a consultar`, 'string') }}"
            },
            {
              "name": "limite",
              "value": "50"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI('fechaFin', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2656,
        480
      ],
      "id": "fb130171-96b5-4891-96a0-3cffb02b1143",
      "name": "get_transactions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "obtiene las categorias de un usuario con su presupuesto y detalles",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2784,
        480
      ],
      "id": "d34a699d-31cc-41a5-a0ab-39a097c7fd22",
      "name": "get_user_categories",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el estado de las metas de ahorro activas del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "estado",
              "value": "activa"
            },
            {
              "name": "pagina",
              "value": "1"
            },
            {
              "name": "limite",
              "value": "10"
            },
            {
              "name": "ordenarPor",
              "value": "fechaCreacion"
            },
            {
              "name": "direccion",
              "value": "desc"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2912,
        480
      ],
      "id": "785a0174-1b57-456f-8374-ccf6b2932b6b",
      "name": "get_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8721a225-ddfb-44a4-bf51-b0e18ba5b767",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3168,
        256
      ],
      "id": "c2d15f9e-0345-4a54-9191-f0ce06077542",
      "name": "If2"
    },
    {
      "parameters": {
        "toolDescription": "Consulta el todas las subscripciones del usuario del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3040,
        480
      ],
      "id": "40a6dbf6-eff5-4b53-87a9-d1273dd1b94e",
      "name": "get_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Analiza los gastos de un período para identificar las 2 categorías con mayor gasto y los 'gastos hormiga' (transacciones pequeñas y frecuentes en una misma categoría",
        "url": "https://api.mony.whitelabel.lat/api/v1/analytics",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI(   'fechaInicio',   'Fecha de fin en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI(   'fechaFin',   'Fecha de inicio en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "agrupacion",
              "value": "={{ $fromAI('agrupacion', `Tipo de agrupación temporal (día, semana, mes, año)`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3216,
        480
      ],
      "id": "c3271b6a-fa18-4940-ae31-46ae9e8573d1",
      "name": "analyze_spending_habits",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "diario"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        336,
        80
      ],
      "id": "e15f6671-5205-4121-98d5-881b98cbdef7",
      "name": "reminder dayli",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        80
      ],
      "id": "2ccc43e7-0f90-405d-908a-b17dd55c5cc5",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        560,
        80
      ],
      "id": "0cf9509a-3d4a-439e-9559-d6efc2a3cf1d",
      "name": "Split Out"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        112,
        80
      ],
      "id": "022b34b9-73ac-4bb5-b3a6-e39c0b02721b",
      "name": "recordatorio diario"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1878dfd8-93d8-424e-adad-eb001b303f7b",
              "name": "trigger_type",
              "value": "={{ $json.trigger_type }}",
              "type": "string"
            },
            {
              "id": "ee72c582-17c1-4ca0-84ba-dde0d82420d7",
              "name": "numero_whatsapp",
              "value": "={{ $json.user_data.numeroWhatsapp }}",
              "type": "string"
            },
            {
              "id": "424bdb40-efa1-49dc-9473-792a53521435",
              "name": "user_data",
              "value": "={{ $json.user_data }}",
              "type": "object"
            },
            {
              "id": "9dca5b25-b6a7-411c-b0dd-c1bad8e70181",
              "name": "informe_data",
              "value": "={{ $json.informe_data }}",
              "type": "object"
            },
            {
              "id": "5ee0da44-2f91-4b7d-956a-2fdb75239a38",
              "name": "phone_number_id",
              "value": "735679592965149",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1232,
        272
      ],
      "id": "b2621689-5513-4aca-9f61-c1e2d5226332",
      "name": "Data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: \"{{ $json.user_data.nombreCompleto.split(' ')[0] }}\",\ntrigger_type: \"{{ $json.trigger_type }}\"\nuser_data: \"{{ JSON.stringify($json.user_data) }}\",\ninforme_data: {{  JSON.stringify($json.informe_data) }}\n",
        "options": {
          "systemMessage": "=# 1. ROL Y FILOSOFÍA CENTRAL\n\n*Tu Identidad:* Eres Mony Insights, el Analista Financiero Proactivo del usuario. No eres un coach conversacional; eres un curador de información financiera.\n\n*Tu Personalidad:* Eres conciso, claro y elegante. Tu comunicación es como un resumen ejecutivo: va directo al punto, pero está presentada de una forma profesional y visualmente agradable. Eres informativo y motivacional, pero no buscas iniciar un diálogo.\n\n*Tu Filosofía Central:* Tu objetivo es transformar los datos financieros complejos que recibes en píldoras de conocimiento fáciles de digerir en menos de 30 segundos, empoderando al usuario a lo largo de su día o semana.\n\n---\n\n# 2. MISIÓN PRINCIPAL\n\nTu única misión es analizar la información proporcionada en el *User Message* (`trigger_type`, `user_data`, `informe_data`) para construir y generar un único mensaje de WhatsApp, autocontenido y de alto valor.\n\nNo usas herramientas ni buscas datos; toda la información que necesitas te es proporcionada.\n\n---\n\n# 3. ANÁLISIS DEL CONTEXTO DE ENTRADA\n\nEn el *User Message* recibirás tres piezas de información clave que debes interpretar:\n\n- *trigger_type:* Esta cadena de texto define tu tarea. Identifica si es un recordatorio o un informe y su frecuencia.\n- *user_data:* Un objeto con los datos del usuario. Extrae su primer nombre para personalizar el saludo.\n- *informe_data:* Un objeto JSON rico en datos, disponible solo cuando el `trigger_type` es de tipo informe. Este es tu material de trabajo principal para construir los reportes.\n\n---\n\n## 4. LÓGICA DE PROCESAMIENTO Y CONSTRUCCIÓN DE MENSAJES\n\nTu única tarea es identificar el **trigger_type** y usar las siguientes directrices para construir una respuesta inteligente y dinámica.\n\n\n### 🔔 Caso: `trigger_type = recordatorio`\n\n**Directriz Clave:**  \nPara evitar la monotonía, debes variar estos mensajes. Elige una de las opciones de la lista correspondiente a la frecuencia cada vez que envíes un recordatorio.  \nNo envíes el mismo mensaje dos veces seguidas.\n\n\n#### 📆 Frecuencia: Diario\n(Elige **una opción** cada vez)\n\n1. **Enfocado en Metas**  \n   > ¡Hola, [nombre]! ☀️ Un pequeño paso hoy es un gran salto para tus metas mañana.  \n   > ¡No olvides registrar tus gastos de hoy! 💪  \n\n2. **Enfocado en Hábitos**  \n   > ¡Hola, [nombre]! ☕️ La claridad financiera es un hábito.  \n   > Dedica 30 segundos a registrar tus movimientos de hoy. ¡Tú tienes el control!  \n\n3. **Rápido y Directo**  \n   > ¡Hola, [nombre]! 📝 Un recordatorio rápido para mantener tus finanzas al día.  \n   > ¿Hubo algún gasto hoy? ¡Regístralo ahora!  \n\n\n#### 📆 Frecuencia: Semanal\n(Elige **una opción** cada vez)\n\n1. **Reflexivo**  \n   > ¡Hola, [nombre]! ✨ Fin de la semana, momento de claridad.  \n   > Tómate 5 minutos para revisar y registrar los gastos pendientes.  \n   > ¡Un pequeño resumen hoy te dará una gran ventaja mañana!  \n\n2. **Enfocado en Progreso**  \n   > ¡Hola, [nombre]! 🚀 ¿Listo para cerrar la semana con fuerza?  \n   > Asegurémonos de que cada gasto esté en su lugar para que tus reportes sean precisos.  \n   > ¡Vamos a ello!  \n\n3. **Simple y Amable**  \n   > ¡Hola, [nombre]! ☕️ Un café y 5 minutos es todo lo que necesitas para poner en orden tus finanzas de la semana.  \n   > ¡Tu futuro yo te lo agradecerá!  \n\n---\n\n## Si el `trigger_type` es de tipo *informe*:\n\nEstos son tus *\"Reportes de Valor\"*. Debes analizar el contenido de `informe_data` y construir el mensaje dinámicamente.\n\n👉 *Si una sección no tiene datos relevantes (ej. no hay ingresos, no hay metas), omítela* para mantener el mensaje conciso y valioso.\n\n### Directrices para *informe-diario*:\n\n* Crea un encabezado claro con la fecha actual.\n* Muestra el total de gastos del día.\n* Si hay transacciones en `informe_data.detalle_transacciones.gastos`, lista las dos más significativas. Si solo hay una, muestra solo esa.\n* Termina con un tip genérico y motivador.\n\n*Ejemplo de Salida:*\n\nResumen del Día ☀️ - 25 de Agosto  \n\n¡Hola, [nombre]! Así se movió tu dinero hoy:  \n• Gastos Totales: $[total_gastos]  \n• Transacciones Clave:  \n[descripcion_gasto_1] ($[monto_gasto_1])  \n\n💡 Tip del Día: Revisa si el gasto de hoy podría convertirse en un hábito. ¡Ser consciente es el primer paso!\n\n---\n\n### Directrices para *informe-semanal, informe-mensual, informe-trimestral*:\n\n- *Encabezado:* Menciona la frecuencia del informe.\n- *PANORAMA GENERAL:* Muestra ingresos, gastos y balance. Si los ingresos son cero, omite ingresos y balance para enfocarte solo en gastos.\n- *ANÁLISIS DE GASTOS:* Analiza `top_categorias_gasto`. Muestra hasta las 3 principales. Si solo hay 1 o 2, muestra esas.\n- *INSIGHT DEL COACH:*\n\n  * Si ingresos > gastos → insight positivo.\n  * Si gastos > ingresos → insight constructivo destacando la categoría principal.\n- *PROGRESO DE METAS:* Analiza `detalle_metas_ahorro_activas`. Si no está vacío, muestra el progreso de la meta principal. Si está vacío, omite toda la sección.\n- *Cierre:* Frase motivacional.\n\n*Ejemplo de Salida:*\n\n\nTu Informe Financiero Semanal 📊  \n\n¡Hola, [nombre]! Aquí tienes la historia que contaron tus números durante la última semana:  \n\nPANORAMA GENERAL  \n🟢 Ingresos: $[total_ingresos]  \n🔴 Gastos: $[total_gastos]  \n💰 Balance: $[saldo_actual]  \n\nANÁLISIS DE GASTOS 🔍  \nTu dinero se concentró principalmente en:  \n🥇 [categoria_1]: $[monto_1]  \n🥈 [categoria_2]: $[monto_2]  \n\n💡 INSIGHT DEL COACH  \n¡Excelente trabajo! Tus ingresos superaron tus gastos, lo que te permitió ahorrar $[saldo_actual]. Este es el camino para alcanzar tus metas más rápido.  \n\nPROGRESO DE METAS 🎯  \n¡No perdamos de vista tus sueños!  \n• [nombre_meta_1]: Has avanzado un [porcentaje]% del total. ¡Sigue así!  \n\nQue tengas una semana financieramente consciente. ✨\n\n\n---\n\n# 5. REGLAS DE ORO DE LA COMUNICACIÓN PROACTIVA\n\n- *CERO CONVERSACIÓN:* Tus mensajes son informativos y finales. Nunca termines con una pregunta que invite a una respuesta.\n- *LA BELLEZA ESTÁ EN EL FORMATO:* Usa negritas, cursivas, emojis y separadores (`---`) para una jerarquía visual clara y mensajes escaneables.\n- *SIEMPRE BASADO EN DATOS:* Construye tu mensaje exclusivamente con la información que recibes en el `User Message`. No inventes ni supongas nada.\n- *PERSONALIZACIÓN ES CLAVE:* Usa siempre el nombre del usuario para que el mensaje se sienta personal y directo.\n- *INTELIGENCIA DINÁMICA:* No rellenes plantillas ciegamente. Analiza los datos de `informe_data` y omite secciones irrelevantes para entregar un reporte más limpio y valioso."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2720,
        256
      ],
      "id": "9ccd13f0-ddd0-4105-a146-5e6b43ba9755",
      "name": "Reminder",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "semanal"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        336,
        272
      ],
      "id": "67fe827e-31da-4bdd-82c8-44e5fa0c3886",
      "name": "reminder dayli1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        272
      ],
      "id": "b9f7964a-279a-4d1d-8ff2-02289b47b2d4",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        560,
        272
      ],
      "id": "9e131e7c-2b6a-43c1-92c4-84059db88387",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "mensual"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        336,
        464
      ],
      "id": "7ea822e9-8234-4d1d-9ef0-69c086ef9c19",
      "name": "reminder dayli2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        464
      ],
      "id": "8de1e972-486e-4fcb-8a08-e96f14659f5b",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        560,
        464
      ],
      "id": "22800159-ae75-489a-a4f3-2f9637a963fa",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        112,
        272
      ],
      "id": "b8def373-3a56-49fa-baa5-46b8fcba2d84",
      "name": "recordatorio semanal"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        112,
        464
      ],
      "id": "e14ddba8-5b2e-434e-a58e-a7854672ab04",
      "name": "recordatorio mensual"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "78a51f47-bc0c-4552-bce9-4007b4e77d14",
              "leftValue": "={{ $json.payload[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2320,
        64
      ],
      "id": "3ad5dad6-f8b5-47eb-a725-d551e1a1653d",
      "name": "If"
    },
    {
      "parameters": {
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/3/contacts/search?q={{ $json.numero_whatsapp }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2128,
        64
      ],
      "id": "10ffe3d4-c86d-4c29-8850-7b86e5ed54cd",
      "name": "get contact"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2320,
        272
      ],
      "id": "e58d2f87-814f-4abf-909a-37fb22ee99d9",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1878dfd8-93d8-424e-adad-eb001b303f7b",
              "name": "trigger_type",
              "value": "={{ $('Data').item.json.trigger_type }}",
              "type": "string"
            },
            {
              "id": "ee72c582-17c1-4ca0-84ba-dde0d82420d7",
              "name": "numero_whatsapp",
              "value": "={{ $('Data').item.json.numero_whatsapp }}",
              "type": "string"
            },
            {
              "id": "424bdb40-efa1-49dc-9473-792a53521435",
              "name": "user_data",
              "value": "={{ $('Data').item.json.user_data }}",
              "type": "object"
            },
            {
              "id": "9dca5b25-b6a7-411c-b0dd-c1bad8e70181",
              "name": "informe_data",
              "value": "={{ $('Data').item.json.informe_data }}",
              "type": "object"
            },
            {
              "id": "5ee0da44-2f91-4b7d-956a-2fdb75239a38",
              "name": "metadata",
              "value": "={\n  \"account_id\": \"3\",\n  \"conversation_id\": \"{{ $json.payload[0].messages[0].conversation_id }}\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2144,
        272
      ],
      "id": "2d3c5681-2301-4e97-8c1e-0a2559de4792",
      "name": "initData"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5088,
        96
      ],
      "id": "6dd185a3-4c3b-458a-986b-684e46e60104",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4688,
        272
      ],
      "id": "b4d87e08-9a16-4d08-ad1b-c5c110ec7027",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4368,
        112
      ],
      "id": "471c6574-f871-43c7-a519-a203ddc09ec0",
      "name": "HTTP Request4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4656,
        112
      ],
      "id": "d8d24dea-8dc3-47d1-95ff-7e6f55835fec",
      "name": "Wait14",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4240,
        288
      ],
      "id": "90257ed4-a4e4-4ae5-87ba-1fba991a0901",
      "name": "Wait15",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4464,
        288
      ],
      "id": "225aa8c3-f201-4b35-b740-d4abd988bd55",
      "name": "If15"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4880,
        320
      ],
      "id": "15baafed-f7c7-462b-8cf4-ab920d47faf0",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4864,
        112
      ],
      "id": "96b96d7b-8cc6-44ca-8516-59af4b0e0882",
      "name": "If16"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5296,
        128
      ],
      "id": "ebf2f3df-5147-4b32-887e-45eab99f63fe",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4240,
        512
      ],
      "id": "a7d7700f-9ab4-4a5f-abfc-498b42ec5303",
      "name": "Wait16",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4464,
        512
      ],
      "id": "7d3f6bc9-ffc2-4209-9f8d-7bfd91ba7527",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4880,
        512
      ],
      "id": "d3fdb792-fce7-49b8-ab48-b97c6cdbf17e",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4704,
        496
      ],
      "id": "d83f1d2b-0950-44a5-a3b1-92c50df2fc96",
      "name": "HTTP Request5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 600,
        "width": 1720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3792,
        48
      ],
      "id": "01676039-6d84-4197-9590-df29cc5ed323",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes más pequeñas* solo si es necesario, asegurándote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), divídelo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), divídelo en *3 partes*.\n\n- Si es *muy largo* (más de *600 caracteres*), agrégale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios ítems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <número>`\n  - `subscriber_id: <número>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3888,
        112
      ],
      "id": "c0034480-4a05-45a3-95ef-b56e5d77e543",
      "name": "Message a model2",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e91ac48-4cd0-41ea-a396-4a103fec7b78",
              "leftValue": "={{ $json.usuarios.informe.resumen.actual.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "6ec93c44-eca8-44dc-ac81-1ee18c80b54b",
              "leftValue": "={{ $json.usuarios.informe.resumen.anterior.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        784,
        80
      ],
      "id": "2670b231-4996-444b-ae89-85129cba1843",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e91ac48-4cd0-41ea-a396-4a103fec7b78",
              "leftValue": "={{ $json.usuarios.informe.resumen.actual.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "6ec93c44-eca8-44dc-ac81-1ee18c80b54b",
              "leftValue": "={{ $json.usuarios.informe.resumen.anterior.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        784,
        272
      ],
      "id": "da521872-7b7b-4ee0-b8d8-5c4832d2a877",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e91ac48-4cd0-41ea-a396-4a103fec7b78",
              "leftValue": "={{ $json.usuarios.informe.resumen.actual.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "6ec93c44-eca8-44dc-ac81-1ee18c80b54b",
              "leftValue": "={{ $json.usuarios.informe.resumen.anterior.transacciones }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        784,
        464
      ],
      "id": "8c3f61c6-060f-4e9a-8f85-0d6c0d918f71",
      "name": "If4"
    },
    {
      "parameters": {
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/3/conversations?status=all&page=3&per_page=25",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        960
      ],
      "id": "276776b7-b3da-41ba-ac5d-d1e4e5cea81a",
      "name": "get_conversation1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.payload",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        240,
        960
      ],
      "id": "1d8c85de-c94d-4b86-ad5a-cfbc2972911b",
      "name": "Split Out3"
    },
    {
      "parameters": {
        "jsCode": "const BASE_URL = \"https://crm.whitelabel.lat/api/v1/accounts/3/conversations\";\nconst TOKEN = \"uuWT9PNsY83ucax7HeqBEUSi\";\n\nasync function getAllConversations() {\n  let page = 1;\n  const perPage = 25;\n  const results = [];\n\n  while (true) {\n    const response = await this.helpers.httpRequest({\n      method: \"GET\",\n      url: `${BASE_URL}?status=all&page=${page}&per_page=${perPage}`,\n      headers: {\n        \"api_access_token\": TOKEN,\n        \"Content-Type\": \"application/json\",\n      },\n      json: true,\n    });\n\n    const payload = response.data?.payload || [];\n\n    if (payload.length === 0) break;\n\n    for (const conv of payload) {\n      results.push({\n        conversation_id: conv.id,\n        contact_id: conv.meta?.sender?.id,\n        name: conv.meta?.sender?.name || null,\n        phone_number: conv.meta?.sender?.phone_number || null,\n        account_id: conv.account_id,\n        labels: conv.labels || [],\n        status: conv.status,\n      });\n    }\n\n    page++;\n  }\n\n  return results.map(r => ({ json: r }));\n}\n\nreturn await getAllConversations();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        16,
        1120
      ],
      "id": "122c95c6-0820-4f19-ae43-a9a6e86009d1",
      "name": "Get_Conversations",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc71d298-231b-4852-aa86-b42f2131eecf",
              "leftValue": "={{ $json.labels }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        224,
        1120
      ],
      "id": "4203b92c-0ceb-4514-90af-7614019ef3ce",
      "name": "If5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $json.account_id }}/conversations/{{ $json.conversation_id }}/labels",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"labels\": [\n    \"no_registrado\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        448,
        1104
      ],
      "id": "dc213932-a6e1-4f80-84cb-d9bc267db66b",
      "name": "add_label"
    },
    {
      "parameters": {
        "content": "## Crm\n",
        "height": 768,
        "width": 864
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -16,
        912
      ],
      "id": "ccf3c3cb-07f4-4317-b156-469543e4eac8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "78a51f47-bc0c-4552-bce9-4007b4e77d14",
              "leftValue": "={{ $json.payload[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        208,
        1296
      ],
      "id": "0ba423c0-8528-465c-9e26-3022dcd02dd6",
      "name": "If6"
    },
    {
      "parameters": {
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/3/contacts/{{ $json.payload[0].id }}/conversations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        432,
        1296
      ],
      "id": "d8d8f508-6bb7-4df0-99b0-eba9bf184320",
      "name": "get_conversation2"
    },
    {
      "parameters": {
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/3/contacts/search?q={{ $json.numero_whatsapp }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        1296
      ],
      "id": "cac2bfac-6a2d-4e49-8b59-1b571afaa297",
      "name": "get contact1"
    },
    {
      "parameters": {
        "jsCode": "const BASE_URL = \"https://crm.whitelabel.lat/api/v1/accounts/3/conversations/1/messages?before=4218\";\nconst TOKEN = \"uuWT9PNsY83ucax7HeqBEUSi\";\n\nasync function getMessages() {\n  const response = await this.helpers.httpRequest({\n    method: \"GET\",\n    url: BASE_URL,\n    headers: {\n      \"api_access_token\": TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    json: true,\n  });\n\n  // El endpoint devuelve un array con \"meta\" y \"payload\"\n  const payload = Array.isArray(response) ? (response[0]?.payload || []) : [];\n\n  if (payload.length === 0) {\n    return [{ json: { info: \"No messages found\" } }];\n  }\n\n  const results = payload.map(msg => ({\n    id: msg.id,\n    content: msg.content,\n    content_type: msg.content_type,\n  }));\n\n  // n8n exige este formato\n  return results.map(r => ({ json: r }));\n}\n\nreturn await getMessages();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        864
      ],
      "id": "7a20b45b-8205-4061-97b6-8e3960f9502f",
      "name": "Get_Conversations1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc71d298-231b-4852-aa86-b42f2131eecf",
              "leftValue": "={{ $json.labels }}",
              "rightValue": "registrado",
              "operator": {
                "type": "array",
                "operation": "contains",
                "rightType": "any"
              }
            },
            {
              "id": "f56f0803-364f-49e0-8ee2-1df4137504b1",
              "leftValue": "={{ $json.phone_number }}",
              "rightValue": "+573228854498",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2048,
        864
      ],
      "id": "a56e2e32-1ecf-435d-9bb0-0fa3a0f768d7",
      "name": "If7"
    },
    {
      "parameters": {
        "jsCode": "const BASE_URL = \"https://crm.whitelabel.lat/api/v1/accounts/3/conversations\";\nconst TOKEN = \"uuWT9PNsY83ucax7HeqBEUSi\";\n\nasync function getAllConversations() {\n  let page = 1;\n  const perPage = 25;\n  const results = [];\n\n  while (true) {\n    const response = await this.helpers.httpRequest({\n      method: \"GET\",\n      url: `${BASE_URL}?status=all&page=${page}&per_page=${perPage}`,\n      headers: {\n        \"api_access_token\": TOKEN,\n        \"Content-Type\": \"application/json\",\n      },\n      json: true,\n    });\n\n    const payload = response.data?.payload || [];\n\n    if (payload.length === 0) break;\n\n    for (const conv of payload) {\n      results.push({\n        conversation_id: conv.id,\n        contact_id: conv.meta?.sender?.id,\n        name: conv.meta?.sender?.name || null,\n        phone_number: conv.meta?.sender?.phone_number || null,\n        account_id: conv.account_id,\n        labels: conv.labels || [],\n        status: conv.status,\n      });\n    }\n\n    page++;\n  }\n\n  return results.map(r => ({ json: r }));\n}\n\nreturn await getAllConversations();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1824,
        1104
      ],
      "id": "458b0388-e577-447d-8871-af2e5c0f7d46",
      "name": "Get_Conversations2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc71d298-231b-4852-aa86-b42f2131eecf",
              "leftValue": "={{ $json.labels }}",
              "rightValue": "registrado",
              "operator": {
                "type": "array",
                "operation": "contains",
                "rightType": "any"
              }
            },
            {
              "id": "f56f0803-364f-49e0-8ee2-1df4137504b1",
              "leftValue": "={{ $json.phone_number }}",
              "rightValue": "+573228854498",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2032,
        1104
      ],
      "id": "35262c2e-6053-4e63-beda-8b9f5b543696",
      "name": "If8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $json.account_id }}/conversations/{{ $json.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": \"¿Cómo calificarías nuestro servicio?\",\n  \"content_type\": \"input_select\",\n  \"content_attributes\": {\n    \"items\": [\n      { \"title\": \"Excelente 😀\", \"value\": \"5\" },\n      { \"title\": \"Bueno 🙂\", \"value\": \"4\" },\n      { \"title\": \"Regular 😐\", \"value\": \"3\" },\n      { \"title\": \"Malo 🙁\", \"value\": \"2\" },\n      { \"title\": \"Terrible 😞\", \"value\": \"1\" }\n    ]\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2448,
        848
      ],
      "id": "e2620b5d-dfb9-4c6e-87d5-64efe71206b5",
      "name": "Send_Encuesta",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $json.account_id }}/conversations/{{ $json.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": \"form\",\n  \"content_type\": \"form\",\n  \"content_attributes\": {\n    \"items\": [\n      { \"name\":\"email\", \"placeholder\":\"Please enter your email\", \"type\":\"email\", \"label\":\"Email\", \"default\":\"[email protected]\" },\n      { \"name\":\"text_aread\", \"placeholder\":\"Please enter text\", \"type\":\"text_area\", \"label\":\"Large Text\", \"default\":\"Sample text\" },\n      { \"name\":\"text\", \"placeholder\":\"Please enter text\", \"type\":\"text\", \"label\":\"text\", \"default\":\"sample input\" },\n      { \"name\":\"select\", \"label\":\"Select Option\", \"type\":\"select\",\n        \"options\":[ { \"label\":\"Burito\",\"value\":\"Burito\" }, { \"label\":\"Pasta\",\"value\":\"Pasta\" } ]\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2432,
        1088
      ],
      "id": "86420738-8f16-4006-9b54-d26598b88c18",
      "name": "Formulario",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/3/contacts/{{ $json.payload[0].id }}/conversations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "uuWT9PNsY83ucax7HeqBEUSi"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2544,
        64
      ],
      "id": "8b2c3077-d65c-4f8d-9a30-4c73c4e4bdbe",
      "name": "get_conversationId"
    },
    {
      "parameters": {
        "jsCode": "const ACCOUNT_ID = $input.first().json.body.account.id;\nconst BASE_URL = `https://crm.whitelabel.lat/api/v1/accounts/${ACCOUNT_ID}`;\nconst TOKEN = \"uuWT9PNsY83ucax7HeqBEUSi\";\n\n// Tomamos el evento entrante\nconst input = $input.first().json;\nconst conversationId = input.body.conversation.id;\nconst replyToId = input.body.content_attributes?.in_reply_to;\n\nasync function getMessage(conversationId, messageId) {\n  const url = `${BASE_URL}/conversations/${conversationId}/messages?before=${messageId + 1}`;\n\n  const response = await this.helpers.httpRequest({\n    method: \"GET\",\n    url,\n    headers: {\n      \"api_access_token\": TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    json: true,\n  });\n\n  const messages = response.payload || [];\n  if (!Array.isArray(messages) || messages.length === 0) {\n    return null;\n  }\n\n  return messages.find(m => m.id === messageId) || null;\n}\n\nlet replyMessage = null;\n\nif (replyToId) {\n  replyMessage = await getMessage(conversationId, replyToId);\n}\n\n// Clonamos el input para no perder el formato original\nconst output = JSON.parse(JSON.stringify(input));\n\n// Si existe un reply, lo agregamos dentro del body\nif (replyMessage) {\n  output.body.reply_message = replyMessage;\n} else {\n  // Si no hay reply, mantenemos la estructura pero con content null\n  output.body.reply_message = { content: null };\n}\n\nreturn [ { json: output } ];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        48,
        1536
      ],
      "id": "a4e1d241-4e96-434e-b4e8-6befd05d61fa",
      "name": "reply_message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5ee0da44-2f91-4b7d-956a-2fdb75239a38",
              "name": "metadata",
              "value": "={\n  \"account_id\": \"3\",\n  \"conversation_id\": \"365\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -192,
        1776
      ],
      "id": "4da6d723-6191-40e4-a78b-e44a14d4da23",
      "name": "initData1"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData1').item.json.metadata.account_id }}/conversations/{{ $('initData1').item.json.metadata.conversation_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "priority",
              "value": "urgent"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        48,
        1776
      ],
      "id": "03e21489-abd7-4ffa-948b-187b04d7cece",
      "name": "change prioridad",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData1').item.json.metadata.account_id }}/conversations/{{ $('initData1').item.json.metadata.conversation_id }}/toggle_status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        48,
        1920
      ],
      "id": "c71528d3-5a15-432c-8ec6-a709432d4d15",
      "name": "change prioridad1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "updatedAt": "2025-09-19T15:01:29.669Z",
      "createdAt": "2025-09-19T15:01:29.669Z",
      "role": "workflow:owner",
      "workflowId": "Hs59yPCl50KuRsFL",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-19T23:55:35.157Z",
  "versionId": "35e19298-537f-4c35-8ebd-1dccc3e2cba9"
}