{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_transactions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "register_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_categories": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_category_budget": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_progres_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_saving_goal": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_user_subscription": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "updated_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "analyze_spending_habits": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_user_category": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "soporte": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T14:58:57.522Z",
  "id": "HFzDX0mQIYmlJZz5",
  "isArchived": false,
  "meta": null,
  "name": "DEV - Agente Coach",
  "nodes": [
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        624,
        304
      ],
      "id": "e73e4de8-4191-422a-823b-9bf9869db006",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "whitelabel mony"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_chat_id_{{ $('initData').item.json.numero_whatsapp }}",
        "sessionTTL": 500000,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        752,
        304
      ],
      "id": "254ea2bd-bd5d-4c75-86ae-a135a0b72959",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "0ecb5aac-98eb-471e-806f-77ccb26de184",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            },
            {
              "name": "usuario_data",
              "type": "any"
            }
          ]
        }
      },
      "id": "304df5f4-c41b-40bf-a3d8-d50b079da6cc",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        96,
        64
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: \"{{ $json.usuario_data.nombreCompleto.split(' ')[0] }}\",\nmensaje del usuario: \"{{ $json.message }}\",\nuser_data: \"{{ JSON.stringify($json.usuario_data) }}\"",
        "options": {
          "systemMessage": "=# 1. ROL Y FILOSOFÍA CENTRAL\n\n*Tu Identidad:* Eres Mony Coach, el Estratega y Mentor Financiero personal de [nombre]. Tu propósito no es ser un analista, sino un narrador de historias financieras.\n\n*Tu Personalidad:* Combinas la agudeza de un experto en datos con la empatía de un coach de vida. Eres perspicaz, positivo y te enfocas en el empoderamiento. Usas un lenguaje claro y analogías para desmitificar las finanzas.\n\n*Tu Filosofía Central:* Tu objetivo no es solo reportar números, sino contar la historia que esos números revelan sobre la vida financiera de tu usuario y darle las herramientas para que escriba un mejor próximo capítulo. No eres un bot que ejecuta comandos; eres un consejero que usa datos para guiar.\n\n---\n\n# 2. MISIÓN PRINCIPAL\n\nTu única misión es sostener una \"Conversación de Coaching\" significativa y humana. Debes interpretar la necesidad real detrás del mensaje del usuario, usar tus herramientas de forma interna para formar una opinión experta y responder con insights claros, consejos accionables y una guía motivacional.\n\n---\n\n# 3. CONTEXTO DE ENTRADA\n\n- *nombre:* El primer nombre del usuario.\n- *mensaje del usuario:* La solicitud directa que debes procesar.\n- *user_data:* El objeto JSON con todos los datos del usuario, incluyendo su id.\n- *chat_history:* La memoria de la conversación para entender el contexto.\n- La fecha actual es *{{ new Date().toLocaleDateString('es-CO', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*.\n\n---\n\n# 4. PROTOCOLO DE CONVERSACIÓN Y PENSAMIENTO INTERNO\n\nEste es tu flujo de trabajo mental para cada interacción.\n\n## Paso Cero: Diagnóstico Inicial (El \"Cold Start\")\n\n*Proceso de Pensamiento Interno:* Antes de responder, mi primera acción es siempre verificar si tengo con qué trabajar. ¿Ha registrado este usuario algún movimiento?\n\n*Acción Interna:* Usa la herramienta get_transactions con un límite de 1 (limit: 1).\n\n*Si el resultado está VACÍO, activa el \"Protocolo de Bienvenida Activa\":*\n\n*Tu Respuesta (Humana):* \"¡Hola [nombre]! Soy tu Coach Financiero y estoy listo para ayudarte a tomar el control de tu dinero. Veo que aún no has registrado ningún movimiento. ¡Empezar es muy fácil! Simplemente envíale un mensaje a Mony como 'gasté 50.000 en gasolina' o 'recibí 2.000.000 de salario'. ¡Anímate a registrar tu primer gasto para que podamos empezar a trabajar juntos!\"\n\n*Finaliza tu turno aquí.*\n\n---\n\n## Paso Uno: Escucha Activa e Interpretación\n\n*Proceso de Pensamiento Interno:* Si el usuario ya tiene datos, mi primer trabajo es entender qué necesita realmente. ¿Es una pregunta directa? ¿Una expresión de frustración? ¿Una solicitud de consejo?\n\n*Acción Interna:* Analiza el mensaje del usuario y el chat_history.\n\n*Tu Respuesta (Empática):* Reconoce su pregunta o inquietud. Valida su necesidad para construir confianza.\n\n*Ejemplo:* \"Entendido, quieres analizar por qué no estás logrando ahorrar tanto como te gustaría. Es una de las preguntas más importantes que podemos hacernos. Vamos a investigarlo juntos.\"\n\n---\n\n## Paso Dos: Formulación de Hipótesis (Análisis Interno)\n\n*Proceso de Pensamiento Interno:* Basado en la pregunta del usuario, ¿qué datos necesito para formar una opinión experta? Si me pregunta cómo ahorrar más, necesito ver sus ingresos, sus gastos principales y sus gastos recurrentes.\n\n*Acción Interna:* Determina qué herramientas necesitas y ejecútalas en segundo plano. Nunca menciones este proceso.\n\n*Ejemplo de plan interno para \"¿cómo ahorro más?\":*\n\n- Llamar a analyze_spending_habits para obtener el panorama general.\n- Llamar a get_user_subscriptions para revisar gastos fijos.\n- Llamar a get_saving_goals para entender sus motivaciones.\n\n---\n\n## Paso Tres: La Narrativa del Coach (Dato -> Insight -> Acción)\n\n*Proceso de Pensamiento Interno:* Ahora que tengo los datos, ¿cuál es la historia que cuentan? ¿Cómo la traduzco en un consejo práctico y humano?\n\n*Acción Interna:* Sintetiza los resultados de tus herramientas en una narrativa coherente.\n\n*Tu Respuesta (Consejo Accionable):*\n\n- *Presenta el Hallazgo (El \"Dato\"):* \"Echando un vistazo a tus movimientos de este mes, noto algo interesante: tienes 12 registros en la categoría 'Domicilios', que suman $280.000.\"\n- *Revela el Insight (La \"Historia\"):* \"Este es un patrón muy común, a veces lo llamo 'gasto por conveniencia'. Individualmente, cada pedido no parece mucho, pero en conjunto representa casi el 10% de tus gastos totales. Es una área donde el dinero se 'fuga' sin que nos demos cuenta.\"\n- *Sugiere la Acción (El \"Reto\"):* \"¿Qué te parecería un pequeño reto? La próxima semana, intentemos planificar 3 cenas en casa. El dinero que ahorres, digamos unos $70.000, podrías moverlo directamente a tu meta con el comando 'ahorrar 70.000 para mi viaje'. Para ayudarte, ¿quieres que establezcamos un presupuesto de $150.000 para 'Domicilios' este mes?\"\n\n---\n\n## Paso Cuatro: Empoderamiento y Continuación\n\n*Proceso de Pensamiento Interno:* ¿Cómo le devuelvo el control al usuario y lo motivo a seguir?\n\n*Tu Respuesta (Pregunta Abierta):*\n\n- \"¿Qué área te gustaría que ataquemos primero?\"\n- \"Basado en esto, ¿qué pequeño cambio crees que podrías implementar esta semana?\"\n\n---\n\n# 5. LÓGICA DE PREVENCIÓN DE DUPLICADOS (INTELIGENCIA INTERNA)\n\n*Contexto:* Cuando el usuario intenta registrar una transacción.\n\n*Proceso de Pensamiento Interno:* Antes de registrar, debo ser un buen asistente y asegurarme de que no estamos duplicando información por error.\n\n*Acción Interna:*\n\n- Llama a get_transactions filtrando por el día en curso.\n- Compara la nueva transacción con las existentes (mismo monto y descripción similar).\n- Si encuentras una coincidencia, no la registres.\n\n*Tu Respuesta (Asistente Inteligente):* \"¡Entendido! Oye, una pregunta rápida: veo que hace un momento registraste un gasto muy parecido. ¿Es este un gasto diferente o lo registramos por error? Solo quiero asegurarme de no duplicarlo.\"\n\n*(Espera la confirmación del usuario antes de usar register_transaction de nuevo).*\n\n---\n\n# 6. MANEJO DE FUNCIONALIDADES PREMIUM\n\n*Contexto:* Cuando el usuario solicita una acción de un plan superior (ej. crear una categoría).\n\n*Tu Respuesta (Orientada al Valor):* \"¡Esa es una excelente idea! La capacidad de crear tus propias categorías es una de las herramientas más potentes de nuestro Plan Premium. Te permite personalizar Mony al 100% y obtener análisis mucho más precisos. Es ideal para llevar tu control financiero al siguiente nivel.\"\n\n---\n\n# 7. HERRAMIENTAS DISPONIBLES (TU CAJA DE HERRAMIENTAS INTERNA)\n\n- *Transacciones:* 'get_transactions', 'update_transactions', 'register_transaction', 'delete_transaction'.\n- *Categorías:* get_user_categories, update_category_budget.\n- *Metas de Ahorro:* get_saving_goals, create_saving_goal, update_progres_saving_goals.\n- *Suscripciones:* get_user_subscriptions, create_user_subscription, updated_user_subscriptions.\n- *Análisis:* analyze_spending_habits.\n\n---\n\n# 8. REGLAS DE ORO Y LÍMITES\n\n- *Actúa, no anuncies:* Tu proceso de análisis es tu secreto profesional. Nunca digas qué herramientas usas. Presenta los resultados como tus propias conclusiones expertas, Nunca digas \"Voy a buscar...\" o \"Tienes razón...\", o voy a hacer, o 'voy a registrar' — hazlo, haz todas las ejecuciones que necesites y muestra el resultado.\n- *Sé un Narrador de Datos:* No listes números. Explica la historia que cuentan.\n- *Detecta y Nombra los Hábitos:* Usa términos como \"gastos hormiga\", \"gastos de fin de semana\", \"compras por impulso\" para crear conciencia.\n- *Formato Ante Todo:* Usa negritas, cursivas y • listas para una máxima legibilidad en WhatsApp.\n- *El Principio del \"Siguiente Paso Lógico\":* Siempre anticipa la próxima pregunta y ofrece una acción o un análisis adicional.\n- *Nunca inventes información.* Si no encuentras datos, sé honesto.\n- *JAMÁS pidas un ID al usuario.* Obtén todos los identificadores de user_data o de los resultados de otras herramientas.\n\n- JAMAS LE DES IDS a los usuarios o datos sensibles o internos.\npor ahora crear categorias y dar analisis con graficas detalladas es una funcion premium\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        944,
        80
      ],
      "id": "bda7e2f1-6375-408c-8625-6303e0ba73b8",
      "name": "AI Agent",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "toolDescription": "Recupera todas las transacciones del usuario en un período de tiempo definido",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagina",
              "value": "={{ $fromAI('pagina', `numero de la pagina a consultar`, 'string') }}"
            },
            {
              "name": "limite",
              "value": "50"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI('fechaFin', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        880,
        304
      ],
      "id": "e597400d-1036-4002-959e-5a567ba4a72c",
      "name": "get_transactions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva transacción de Ingreso o Gasto en la cuenta del usuario.",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        880,
        464
      ],
      "id": "027cefcd-0c14-4b79-89c6-0c3c99b17ce9",
      "name": "register_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "obtiene las categorias de un usuario con su presupuesto y detalles",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1008,
        304
      ],
      "id": "8217bb55-236b-4c07-b635-523505c8ec7c",
      "name": "get_user_categories",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Establece o actualiza el presupuesto mensual para cada categoría de gasto específica",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/categories/{{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "presupuestoMensual",
              "value": "={{ $fromAI('presupuestoMensual', ` Monto del presupuesto de la categoria`, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1008,
        624
      ],
      "id": "22b70834-fb00-43f1-916a-d2291ce22319",
      "name": "update_category_budget",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el estado de las metas de ahorro activas del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "estado",
              "value": "activa"
            },
            {
              "name": "pagina",
              "value": "1"
            },
            {
              "name": "limite",
              "value": "10"
            },
            {
              "name": "ordenarPor",
              "value": "fechaCreacion"
            },
            {
              "name": "direccion",
              "value": "desc"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1136,
        304
      ],
      "id": "d8092462-da01-4719-9ac0-a80fb87163ff",
      "name": "get_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Actualiza específicamente el monto actual ahorrado. Cambia automáticamente el estado a \"completada\" si se alcanza el objetivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/saving-goals/{{ $fromAI('metaId', `id de la meta, obtenido en la tool '\\''get_saving_goals'\\''`, 'string') }}/amount",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` suma del monto actual + nuevo monto `, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1152,
        624
      ],
      "id": "a1aba7db-43a3-414e-bc38-e3555a7c2172",
      "name": "update_progres_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Guarda una nueva meta de ahorro para el usuario",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `nombre de la meta`, 'string') }}"
            },
            {
              "name": "montoObjetivo",
              "value": "={{ $fromAI('monto_objetivo', `Monto objetivo a ahorrar`, 'number') }}"
            },
            {
              "name": "montoActual",
              "value": "={{ $fromAI('monto_actual', `Monto actual ahorrado (default: 0)`, 'number') }}"
            },
            {
              "name": "fechaObjetivo",
              "value": "={{ $fromAI(\n  'fechaObjetivo',\n  'Devuelve la fecha en la que finaliza la meta de ahorro, en formato ISO estricto (YYYY-MM-DD)',\n  'string'\n) }}"
            },
            {
              "name": "estado",
              "value": "={{ $fromAI('estado', `activa o inactiva`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1152,
        464
      ],
      "id": "3d72fed2-0e2f-44b7-b3e2-668ad41caa89",
      "name": "create_saving_goal",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el todas las subscripciones del usuario del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1264,
        304
      ],
      "id": "23721236-615a-4289-84c3-4c867b375271",
      "name": "get_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva suscripción o gasto recurrente del usuario, como Netflix o el gimnasio",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha de inicio de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "fechaProximoPago",
              "value": "={{ $fromAI('fechaProximoPago', `Fecha de Proximo Pago de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1280,
        464
      ],
      "id": "8890499d-f644-4fc4-9431-b310a9f0e60d",
      "name": "create_user_subscription",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "actualiza la subscripcion si esta activa o no, el monto u otros parametros si se necesitan actualizar",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/user-subscriptions/{{ $fromAI('subscriptionId', `id de la Subscripcion, obtenido en la tool '\\''get_user_subscriptions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "activa",
              "value": "={{ $fromAI('activa', `true o false`, 'boolean') }}"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1296,
        624
      ],
      "id": "2fe616a7-af44-4217-85ae-fdce14bd5552",
      "name": "updated_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Analiza los gastos de un período para identificar las 2 categorías con mayor gasto y los 'gastos hormiga' (transacciones pequeñas y frecuentes en una misma categoría",
        "url": "https://api.mony.whitelabel.lat/api/v1/analytics",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI(   'fechaInicio',   'Fecha de fin en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI(   'fechaFin',   'Fecha de inicio en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "agrupacion",
              "value": "={{ $fromAI('agrupacion', `Tipo de agrupación temporal (día, semana, mes, año)`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1440,
        304
      ],
      "id": "5202e7bb-e52b-4b16-8b85-f25304b78fa5",
      "name": "analyze_spending_habits",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3680,
        64
      ],
      "id": "7e75f0fb-b903-4493-a4c8-a2c5dd3251d7",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3280,
        240
      ],
      "id": "2b563ef6-8fc3-4e1e-9143-232a0c870ecc",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2960,
        80
      ],
      "id": "9e8a719e-7c77-4f5f-95c9-fcd3e939e9d5",
      "name": "HTTP Request4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3248,
        80
      ],
      "id": "8fe56d83-069d-433a-9e07-9e7209bbe991",
      "name": "Wait14",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2832,
        256
      ],
      "id": "0e9727a2-a237-4269-b197-c10a34a1844c",
      "name": "Wait15",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3056,
        256
      ],
      "id": "32bfcacc-a733-45f0-8079-2f2caba7c502",
      "name": "If15"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3472,
        288
      ],
      "id": "a2ca295b-bd65-4d89-a91b-1c7fc421d41d",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3456,
        80
      ],
      "id": "f7155f2f-0bc1-4fcc-9abe-463ad1f46f7d",
      "name": "If16"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3888,
        96
      ],
      "id": "3aa0daa0-cb59-4ff9-9188-f9cd6ad88be6",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2832,
        480
      ],
      "id": "73895007-00d2-41bd-b506-c8aa95739144",
      "name": "Wait16",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3056,
        480
      ],
      "id": "7bd938ea-65aa-4ab9-add6-1cd4f7bf7644",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3472,
        480
      ],
      "id": "9d91314a-64e5-4595-ad9e-7847550adb8f",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3296,
        464
      ],
      "id": "884e239c-6016-4521-ba17-7f649a78b83c",
      "name": "HTTP Request5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 600,
        "width": 1720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2352,
        16
      ],
      "id": "0d67c2d1-ce83-4d4b-b4b4-65cfc13a2ce5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes más pequeñas* solo si es necesario, asegurándote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), divídelo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), divídelo en *3 partes*.\n\n- Si es *muy largo* (más de *600 caracteres*), agrégale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios ítems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <número>`\n  - `subscriber_id: <número>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2480,
        80
      ],
      "id": "fb1dcd80-e537-49cf-be0c-c14184bc5194",
      "name": "Message a model2",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.messages }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "numero_whatsapp",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $json.contacts[0].profile.name.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "f6c89644-22bf-403a-9b24-3753bf6b1220",
              "name": "usuario_data",
              "value": "={{ $json.usuario_data }}",
              "type": "object"
            },
            {
              "id": "d221f439-15a2-4e22-8648-f3a4e5786bef",
              "name": "redis_message",
              "value": "=chat_id_{{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "6a890316-6452-483d-af31-b140b5c1bc01",
              "name": "phone_number_id",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "dd4f5138-59b4-49d5-b055-64cd7eacb4e8",
              "name": "metadata",
              "value": "={{ $json.metadata }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        624,
        64
      ],
      "id": "af437014-50d2-4b95-b08e-404ddf44ac64",
      "name": "initData"
    },
    {
      "parameters": {
        "toolDescription": "crea una categoria para el usuario solo si no existe ninguna para registrar lo que necesita o requiere una nueva,\nNOTA, el icono y el color no se lo pides al usuario, lo estableces tu",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `nombre de la nueva Categoria`, 'string') }}"
            },
            {
              "name": "tipo",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "icono",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Icono de la categoría (solo Emoticones)'no se lo pida al usuario, usa uno alusivo'`, 'string') }}"
            },
            {
              "name": "color",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Color en formato hexadecimal: '#FF5733', 'no se lo pida al usuario' establece cualquiera alusivo`, 'string') }}"
            },
            {
              "name": "presupuestoMensual",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Presupuesto para la categoria, mensual`, 'string') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', `breve descripcion de la categoria`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1024,
        464
      ],
      "id": "fc3bb369-14f5-49e2-9ed2-a35085fa8626",
      "name": "create_user_category",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8721a225-ddfb-44a4-bf51-b0e18ba5b767",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        80
      ],
      "id": "9cdd7989-de56-4c67-a361-9a7c0aada546",
      "name": "If2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "1UmdqZywLdcrtX2t",
          "cachedResultName": "Agente Coach"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "metadata": "={{ $('Start').item.json.metadata }}",
            "contacts": "={{ $('Start').item.json.contacts }}",
            "messages": "={{ $('Start').item.json.messages }}",
            "field": "={{ $('Start').item.json.field }}",
            "usuario_data": "={{ $('Start').item.json.usuario_data }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "usuario_data",
              "displayName": "usuario_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1808,
        176
      ],
      "id": "fb5ce2dd-78a0-4d52-b103-459be0cbdbdf",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "toolDescription": "Actualiza los datos de una transaccion especifica si hubo un error al registrarla, o el usuario desea actualizarla por algun motivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/transactions/{{ $fromAI('transactionId', `id de la transaccion, obtenido en la tool '\\''get_transactions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        864,
        624
      ],
      "id": "805717bd-86f3-484b-95ae-e2f9a0ecb8a9",
      "name": "update_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "elimina una transaccion en especifico, debe usarse con mucho cuidado y con confirmacion del usuario, el id de la transaccion lo obtienes de get_transactions, nunca se lo pides al usuario, solo confirmas los datos de la transaccion a eliminar que concuerden, fecha, monto, descripcion.",
        "method": "DELETE",
        "url": "=https://api.mony.whitelabel.lat/api/v1/transactions/{{ $fromAI('transactionId', `id de la transaccion, obtenido en la tool '\\''get_transactions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        848,
        768
      ],
      "id": "d6cb8f1d-af4d-4619-b34e-fcbf521c0afe",
      "name": "delete_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "usas esta tool para transferir a un humano para obtener soporte cuando no puedes resolver una conversacion, o el usuario desea hablar con soporte.",
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/toggle_status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1008,
        784
      ],
      "id": "fe7d073e-c223-4064-bb5c-736f22ffcf8d",
      "name": "soporte",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "metadata": {
            "account_id": "3",
            "conversation_id": "1"
          },
          "contacts": [
            {
              "profile": {
                "name": "Pedro"
              },
              "wa_id": "573228854498"
            }
          ],
          "messages": "\"mony, la transacción del 24 de agosto está repetida, 2 a Netflix. Fue una sola a Netflix y la otra a Amazon Prime por 30.000.\"",
          "field": [
            "registrado"
          ],
          "usuario_data": {
            "id": "aba24b95-eb5a-4bda-8ab0-ac4afe73addd",
            "nombreCompleto": "Pedro Rodriguez",
            "email": "pro.pedro0413@gmail.com",
            "numeroWhatsapp": "+573228854498",
            "moneda": "COP",
            "estadoSuscripcion": "free",
            "fechaRegistro": "2025-08-23T22:35:15.923Z",
            "frecuenciaRecordatorios": "nunca",
            "frecuenciaInformes": "mensual",
            "metasDeAhorro": [
              {
                "id": "55177fda-6c10-4641-a758-53a1c54da974",
                "nombre": "Comprar un PC",
                "montoObjetivo": "3000000",
                "montoActual": "400000",
                "fechaObjetivo": "2025-08-23T00:00:00.000Z",
                "estado": "activa",
                "fechaCreacion": "2025-08-24T04:47:09.954Z",
                "idUsuario": "aba24b95-eb5a-4bda-8ab0-ac4afe73addd"
              }
            ],
            "suscripciones": [
              {
                "id": "c33712c7-0410-414a-b102-6a123d078b7a",
                "nombre": "Amazon Prime Video",
                "descripcion": "Suscripción a Amazon Prime Video",
                "monto": "24000",
                "moneda": "COP",
                "frecuencia": "mensual",
                "fechaInicio": "2025-08-24T00:00:00.000Z",
                "fechaProximoPago": "2025-09-24T00:00:00.000Z",
                "activa": true,
                "idUsuario": "aba24b95-eb5a-4bda-8ab0-ac4afe73addd",
                "idCategoria": 5
              }
            ],
            "estadisticas": {
              "ingresosMes": 0,
              "gastosMes": 184000,
              "balanceMes": -184000,
              "totalTransaccionesMes": 7,
              "metasActivas": 1,
              "suscripcionesActivas": 1
            }
          }
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T14:58:57.522Z",
      "updatedAt": "2025-09-19T14:58:57.522Z",
      "role": "workflow:owner",
      "workflowId": "HFzDX0mQIYmlJZz5",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-19T23:56:50.870Z",
  "versionId": "7c193985-27eb-4bcb-92f7-3a5e67369ef2"
}