{
  "active": true,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "insert user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Programar Recordatorios": {
      "main": [
        [
          {
            "node": "Obtener Usuarios Recordatorios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Usuarios Recordatorios": {
      "main": [
        [
          {
            "node": "Enviar Recordatorio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Call Agente Transaccional",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Onboarding Register",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message3": {
      "main": [
        []
      ]
    },
    "IsFree?": {
      "main": [
        [
          {
            "node": "send Publicidad",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-28T20:07:09.475Z",
  "id": "rmQXDDAdUp8njNEe",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Mony",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        496,
        -304
      ],
      "id": "2594ae8c-9bed-48ad-9d66-cb2dd9828bc0",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- EXTENSIONES ÚTILES\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nCREATE EXTENSION IF NOT EXISTS \"pgcrypto\";\n\n-- ####################################\n-- ##            TABLAS BASE        ##\n-- ####################################\n\n-- TABLA: Usuarios\nCREATE TABLE IF NOT EXISTS usuarios (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    nombre_completo TEXT NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL,\n    numero_whatsapp TEXT UNIQUE NOT NULL,\n    moneda_defecto TEXT DEFAULT 'COP',\n    estado_suscripcion TEXT DEFAULT 'gratuito',\n    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- TABLA: Fuentes de Registro\nCREATE TABLE IF NOT EXISTS fuentes_registro (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT NOT NULL UNIQUE -- Ej: WhatsApp, Web, OCR, Audio, PDF\n);\n\n-- Insertar fuentes iniciales\nINSERT INTO fuentes_registro (nombre) VALUES\n    ('WhatsApp'),\n    ('Web')\nON CONFLICT DO NOTHING;\n\n-- ############################################\n-- ##     MIGRACIÓN Y MEJORA DE CATEGORÍAS   ##\n-- ############################################\n\n-- Renombramos la tabla vieja para preservar las categorías iniciales\nCREATE TABLE IF NOT EXISTS categorias_globales (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT NOT NULL UNIQUE,\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL\n);\n\n-- Insertar categorías globales iniciales\nINSERT INTO categorias_globales (nombre, tipo) VALUES\n    ('Comida', 'Gasto'),\n    ('Transporte', 'Gasto'),\n    ('Entretenimiento', 'Gasto'),\n    ('Salud', 'Gasto'),\n    ('Servicios', 'Gasto'),\n    ('Salario', 'Ingreso'),\n    ('Otros', 'Gasto')\nON CONFLICT DO NOTHING;\n\n-- Nueva tabla de categorías por usuario\nCREATE TABLE IF NOT EXISTS categorias (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL,\n    presupuesto_mensual NUMERIC(12, 2),\n    UNIQUE (id_usuario, nombre)\n);\n\n-- ####################################\n-- ##         TRANSACCIONES         ##\n-- ####################################\n\nCREATE TABLE IF NOT EXISTS transacciones (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    descripcion TEXT,\n    monto NUMERIC(12, 2) NOT NULL,\n    moneda TEXT NOT NULL DEFAULT 'COP',\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL,\n    fecha_transaccion DATE NOT NULL,\n    id_categoria INTEGER REFERENCES categorias(id) ON DELETE SET NULL,\n    id_fuente INTEGER REFERENCES fuentes_registro(id),\n    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ####################################\n-- ##        SUSCRIPCIONES BASE     ##\n-- ####################################\n\n-- Tabla para el plan del usuario (gratuito/premium)\nCREATE TABLE IF NOT EXISTS suscripciones (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    tipo TEXT CHECK (tipo IN ('gratuito', 'premium')) NOT NULL,\n    fecha_inicio TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    fecha_expiracion TIMESTAMP\n);\n\n-- Tabla para suscripciones del usuario (ej. Netflix, Spotify)\nCREATE TABLE IF NOT EXISTS suscripciones_usuario (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    monto NUMERIC(10, 2) NOT NULL,\n    moneda TEXT NOT NULL DEFAULT 'COP',\n    frecuencia TEXT NOT NULL, -- 'mensual', 'anual', 'trimestral'\n    fecha_proximo_pago DATE NOT NULL,\n    id_categoria INTEGER REFERENCES categorias(id),\n    activa BOOLEAN DEFAULT TRUE\n);\n\n-- ####################################\n-- ##        METAS DE AHORRO        ##\n-- ####################################\n\nCREATE TABLE IF NOT EXISTS metas_ahorro (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    monto_objetivo NUMERIC(15, 2) NOT NULL,\n    monto_actual NUMERIC(15, 2) NOT NULL DEFAULT 0.00,\n    fecha_objetivo DATE NOT NULL,\n    estado TEXT NOT NULL DEFAULT 'activa', -- activa, completada, cancelada\n    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ####################################\n-- ##       RECORDATORIOS Y ADS     ##\n-- ####################################\n\n-- Recordatorios de gasto\nCREATE TABLE IF NOT EXISTS recordatorios (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    frecuencia TEXT CHECK (frecuencia IN ('diario', 'semanal', 'nunca')) NOT NULL,\n    hora_envio TIME DEFAULT '08:00:00'\n);\n\n-- Anuncios\nCREATE TABLE IF NOT EXISTS anuncios (\n    id SERIAL PRIMARY KEY,\n    titulo TEXT NOT NULL,\n    imagen_url TEXT,\n    enlace TEXT,\n    texto TEXT,\n    frecuencia TEXT DEFAULT '1_por_sesion',\n    pais_destino TEXT,\n    moneda_destino TEXT,\n    fecha_inicio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    fecha_fin TIMESTAMP\n);\n\n-- Logs de anuncios vistos\nCREATE TABLE IF NOT EXISTS anuncios_usuarios (\n    id SERIAL PRIMARY KEY,\n    id_anuncio INTEGER REFERENCES anuncios(id),\n    id_usuario UUID REFERENCES usuarios(id),\n    fecha_visto TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        784,
        -320
      ],
      "id": "b9aebc97-33bb-4279-b877-c50e46c04cbf",
      "name": "CREATE DATABASE",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mony",
        "options": {}
      },
      "name": "Webhook WhatsApp",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        832,
        -1568
      ],
      "id": "8bfa3d3c-5fef-4718-b93c-87719e70d86f",
      "webhookId": "ab9eb1e5-2b76-439c-9d0e-0a779ae79854"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "name": "Programar Recordatorios",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        832,
        -640
      ],
      "id": "bee4c4e7-1624-4f07-9e22-e6d3030333d4"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "name": "Obtener Usuarios Recordatorios",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1056,
        -640
      ],
      "id": "d88691ba-fc5f-4726-a522-94475db88094",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "url": "https://api.twilio.com/2010-04-01/Accounts/{{your-twilio-account-sid}}/Messages.json",
        "options": {}
      },
      "name": "Enviar Recordatorio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1280,
        -640
      ],
      "id": "0b7e1e6a-05e2-434d-af5b-7bc29d129f81"
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {
          "messageStatusUpdates": [
            "failed"
          ]
        }
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        816,
        -1280
      ],
      "id": "6d355b4a-23db-4855-a14c-8a1d3f2b9b18",
      "name": "WhatsApp Trigger",
      "webhookId": "22e117ba-6848-499c-b9ff-8b6b13b1f278",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "jxY742yXHUpUmkYh",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT numero_whatsapp, id FROM usuarios WHERE numero_whatsapp = '573228854498';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        704,
        64
      ],
      "id": "4054dadf-ed25-4bf5-935b-165b8efc8ede",
      "name": "User test1",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9c38cf88-8498-4e41-b8b6-9c9bf0465b55"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Registrado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d20501b2-6c3d-42b4-9617-995adf90e423",
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sin Registrar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1488,
        -1184
      ],
      "id": "792048ec-8c27-45ce-936e-588334d818ad",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH dummy AS (\n    SELECT NULL::uuid AS id\n)\nSELECT \n    to_jsonb(u) AS user_data,\n    (u.id IS NOT NULL) AS existe\nFROM \n    dummy\nLEFT JOIN \n    usuarios u ON u.numero_whatsapp = $1;",
        "options": {
          "queryReplacement": "='{{ $json.contacts[0].wa_id }}'"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1040,
        -1184
      ],
      "id": "104da7ce-0d67-4b22-8f91-0dce40f79c80",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90dc24fa-85a0-4b98-ad7f-a0f2ab094722",
              "name": "existe",
              "value": "={{ $json.existe }}",
              "type": "string"
            },
            {
              "id": "70bf3769-05a5-4f09-9ead-f39029fc7167",
              "name": "usuario_data",
              "value": "={{ $json.user_data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        -1184
      ],
      "id": "5aa43e16-51e2-4dc0-b7c5-6447c5d425da",
      "name": "data"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "S9SCJIr4UmSrDNAM",
          "mode": "list",
          "cachedResultName": "Onboarding"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "metadata": "={{ $('WhatsApp Trigger').item.json.metadata }}",
            "contacts": "={{ $('WhatsApp Trigger').item.json.contacts }}",
            "messages": "={{ $('WhatsApp Trigger').item.json.messages }}",
            "field": "={{ $('WhatsApp Trigger').item.json.field }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1776,
        -1024
      ],
      "id": "63a60098-0575-441a-b40d-a9cbe12f21e5",
      "name": "Call Onboarding Register"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.contacts[0].wa_id }}",
        "textBody": "⏳...",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1040,
        -1376
      ],
      "id": "85337e28-59db-422d-86b2-625dac126e89",
      "name": "Send message3",
      "webhookId": "9664ca8b-6cdf-474c-a4c2-07f5e237eae8",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1696,
        -160
      ],
      "id": "d187ea81-69ea-4e63-8048-17f09a3c63ff",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.usuario_data.numero_whatsapp }}",
        "messageType": "video",
        "mediaPath": "useMediaId",
        "mediaId": "=1936820460498772",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1712,
        -320
      ],
      "id": "db71aa84-e365-4a39-bc7e-4be381a771f0",
      "name": "send Publicidad",
      "webhookId": "9664ca8b-6cdf-474c-a4c2-07f5e237eae8",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93e015c8-0275-4999-a019-8d4f80b66d07",
              "leftValue": "={{ $json.usuario_data.estado_suscripcion }}",
              "rightValue": "=gratuito",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1504,
        -272
      ],
      "id": "f176e465-c428-4ba5-845f-80b2c4beb0ae",
      "name": "IsFree?"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "mb7JhBisRgsDckO6",
          "mode": "list",
          "cachedResultName": "Agente Transaccional"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "messages": "={{ $('WhatsApp Trigger').item.json.messages }}",
            "contacts": "={{ $('WhatsApp Trigger').item.json.contacts }}",
            "field": "={{ $('WhatsApp Trigger').item.json.field }}",
            "usuario_data": "={{ $('data').item.json.usuario_data }}",
            "metadata": "={{ $('WhatsApp Trigger').item.json.metadata }}"
          },
          "matchingColumns": [
            "messages",
            "contacts",
            "field",
            "usuario_data",
            "metadata_phone_number_id"
          ],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "usuario_data",
              "displayName": "usuario_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1776,
        -1248
      ],
      "name": "Call Agente Transaccional",
      "id": "68a8e3ad-60b7-4ca2-b63f-6c3d8df24910"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO\n$$\nDECLARE\n    tabla RECORD;\nBEGIN\n    -- Eliminar todas las tablas de forma segura y ordenada\n    FOR tabla IN\n        SELECT tablename FROM pg_tables\n        WHERE schemaname = 'public'\n    LOOP\n        EXECUTE 'DROP TABLE IF EXISTS public.' || quote_ident(tabla.tablename) || ' CASCADE';\n    END LOOP;\nEND;\n$$;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        704,
        256
      ],
      "id": "e61a3ce3-9efa-44de-b209-6630f72fd1a7",
      "name": "CLEAN DATABASE",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- 2. Ahora insertar el usuario\nINSERT INTO usuarios (\n    nombre_completo,\n    email,\n    password_hash,\n    numero_whatsapp,\n    moneda_defecto,\n    estado_suscripcion\n) VALUES (\n    'Pedro test 2',\n    'pro.pedro2@gmail.com',\n    crypt('propro93', gen_salt('bf')),  -- Encriptación segura\n    '5732288544100',\n    'COP',\n    'gratuito'\n)\nRETURNING *;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        704,
        -112
      ],
      "id": "3174561b-a579-48d5-a34a-c2a1b0d1c208",
      "name": "insert user",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Programar Recordatorios": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-08-02T00:08:48.476Z",
  "versionId": "8375aa55-f131-4b6e-9b3d-bbfa978f10b4"
}