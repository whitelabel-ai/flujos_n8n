{
  "active": true,
  "connections": {
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Get user_data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Onboarding Register",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IsFree?": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get user_data": {
      "main": [
        [
          {
            "node": "data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meta": {
      "main": [
        [
          {
            "node": "Call Agente Transaccional",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Onboarding Register",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data1": {
      "main": [
        [
          {
            "node": "meta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        []
      ]
    },
    "delet user": {
      "main": [
        [
          {
            "node": "onboarding delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "onboarding delete": {
      "main": [
        [
          {
            "node": "transaction delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transaction delete": {
      "main": [
        [
          {
            "node": "push_message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "onboarding delete1": {
      "main": [
        [
          {
            "node": "transaction delete1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transaction delete1": {
      "main": [
        [
          {
            "node": "push_message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "delete number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete number": {
      "main": [
        [
          {
            "node": "onboarding delete1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Users": {
      "main": [
        [
          {
            "node": "delet user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-28T20:07:09.475Z",
  "id": "rmQXDDAdUp8njNEe",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Mony",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- EXTENSIONES ÚTILES\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nCREATE EXTENSION IF NOT EXISTS \"pgcrypto\";\n\n-- ####################################\n-- ##            TABLAS BASE        ##\n-- ####################################\n\n-- TABLA: Usuarios\nCREATE TABLE IF NOT EXISTS usuarios (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    nombre_completo TEXT NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL,\n    numero_whatsapp TEXT UNIQUE NOT NULL,\n    moneda_defecto TEXT DEFAULT 'COP',\n    estado_suscripcion TEXT DEFAULT 'gratuito',\n    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- TABLA: Fuentes de Registro\nCREATE TABLE IF NOT EXISTS fuentes_registro (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT NOT NULL UNIQUE -- Ej: WhatsApp, Web, OCR, Audio, PDF\n);\n\n-- Insertar fuentes iniciales\nINSERT INTO fuentes_registro (nombre) VALUES\n    ('WhatsApp'),\n    ('Web')\nON CONFLICT DO NOTHING;\n\n-- ############################################\n-- ##     MIGRACIÓN Y MEJORA DE CATEGORÍAS   ##\n-- ############################################\n\n-- Renombramos la tabla vieja para preservar las categorías iniciales\nCREATE TABLE IF NOT EXISTS categorias_globales (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT NOT NULL UNIQUE,\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL\n);\n\n-- Insertar categorías globales iniciales\nINSERT INTO categorias_globales (nombre, tipo) VALUES\n    ('Comida', 'Gasto'),\n    ('Transporte', 'Gasto'),\n    ('Entretenimiento', 'Gasto'),\n    ('Salud', 'Gasto'),\n    ('Servicios', 'Gasto'),\n    ('Salario', 'Ingreso'),\n    ('Otros', 'Gasto')\nON CONFLICT DO NOTHING;\n\n-- Nueva tabla de categorías por usuario\nCREATE TABLE IF NOT EXISTS categorias (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL,\n    presupuesto_mensual NUMERIC(12, 2),\n    UNIQUE (id_usuario, nombre)\n);\n\n-- ####################################\n-- ##         TRANSACCIONES         ##\n-- ####################################\n\nCREATE TABLE IF NOT EXISTS transacciones (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    descripcion TEXT,\n    monto NUMERIC(12, 2) NOT NULL,\n    moneda TEXT NOT NULL DEFAULT 'COP',\n    tipo TEXT CHECK (tipo IN ('Ingreso', 'Gasto')) NOT NULL,\n    fecha_transaccion DATE NOT NULL,\n    id_categoria INTEGER REFERENCES categorias(id) ON DELETE SET NULL,\n    id_fuente INTEGER REFERENCES fuentes_registro(id),\n    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ####################################\n-- ##        SUSCRIPCIONES BASE     ##\n-- ####################################\n\n-- Tabla para el plan del usuario (gratuito/premium)\nCREATE TABLE IF NOT EXISTS suscripciones (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    tipo TEXT CHECK (tipo IN ('gratuito', 'premium')) NOT NULL,\n    fecha_inicio TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    fecha_expiracion TIMESTAMP\n);\n\n-- Tabla para suscripciones del usuario (ej. Netflix, Spotify)\nCREATE TABLE IF NOT EXISTS suscripciones_usuario (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    monto NUMERIC(10, 2) NOT NULL,\n    moneda TEXT NOT NULL DEFAULT 'COP',\n    frecuencia TEXT NOT NULL, -- 'mensual', 'anual', 'trimestral'\n    fecha_proximo_pago DATE NOT NULL,\n    id_categoria INTEGER REFERENCES categorias(id),\n    activa BOOLEAN DEFAULT TRUE\n);\n\n-- ####################################\n-- ##        METAS DE AHORRO        ##\n-- ####################################\n\nCREATE TABLE IF NOT EXISTS metas_ahorro (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    id_usuario UUID NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    nombre TEXT NOT NULL,\n    monto_objetivo NUMERIC(15, 2) NOT NULL,\n    monto_actual NUMERIC(15, 2) NOT NULL DEFAULT 0.00,\n    fecha_objetivo DATE NOT NULL,\n    estado TEXT NOT NULL DEFAULT 'activa', -- activa, completada, cancelada\n    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ####################################\n-- ##       RECORDATORIOS Y ADS     ##\n-- ####################################\n\n-- Recordatorios de gasto\nCREATE TABLE IF NOT EXISTS recordatorios (\n    id SERIAL PRIMARY KEY,\n    id_usuario UUID REFERENCES usuarios(id) ON DELETE CASCADE,\n    frecuencia TEXT CHECK (frecuencia IN ('diario', 'semanal', 'nunca')) NOT NULL,\n    hora_envio TIME DEFAULT '08:00:00'\n);\n\n-- Anuncios\nCREATE TABLE IF NOT EXISTS anuncios (\n    id SERIAL PRIMARY KEY,\n    titulo TEXT NOT NULL,\n    imagen_url TEXT,\n    enlace TEXT,\n    texto TEXT,\n    frecuencia TEXT DEFAULT '1_por_sesion',\n    pais_destino TEXT,\n    moneda_destino TEXT,\n    fecha_inicio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    fecha_fin TIMESTAMP\n);\n\n-- Logs de anuncios vistos\nCREATE TABLE IF NOT EXISTS anuncios_usuarios (\n    id SERIAL PRIMARY KEY,\n    id_anuncio INTEGER REFERENCES anuncios(id),\n    id_usuario UUID REFERENCES usuarios(id),\n    fecha_visto TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE OR REPLACE FUNCTION clonar_categorias_globales()\nRETURNS TRIGGER AS $$\nBEGIN\n  INSERT INTO categorias (id_usuario, nombre, tipo)\n  SELECT NEW.id, nombre, tipo\n  FROM categorias_globales;\n\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n\nCREATE TRIGGER clonar_categorias_al_crear_usuario\nAFTER INSERT ON usuarios\nFOR EACH ROW\nEXECUTE FUNCTION clonar_categorias_globales();\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        400,
        -480
      ],
      "id": "b9aebc97-33bb-4279-b877-c50e46c04cbf",
      "name": "CREATE DATABASE",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {
          "messageStatusUpdates": [
            "failed"
          ]
        }
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        400,
        -1344
      ],
      "id": "6d355b4a-23db-4855-a14c-8a1d3f2b9b18",
      "name": "WhatsApp Trigger",
      "webhookId": "22e117ba-6848-499c-b9ff-8b6b13b1f278",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "jxY742yXHUpUmkYh",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9c38cf88-8498-4e41-b8b6-9c9bf0465b55"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Registrado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d20501b2-6c3d-42b4-9617-995adf90e423",
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sin Registrar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1072,
        -1248
      ],
      "id": "792048ec-8c27-45ce-936e-588334d818ad",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90dc24fa-85a0-4b98-ad7f-a0f2ab094722",
              "name": "existe",
              "value": "={{ $json.existe }}",
              "type": "string"
            },
            {
              "id": "70bf3769-05a5-4f09-9ead-f39029fc7167",
              "name": "usuario_data",
              "value": "={{ $json.user_data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        -1248
      ],
      "id": "5aa43e16-51e2-4dc0-b7c5-6447c5d425da",
      "name": "data"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "S9SCJIr4UmSrDNAM",
          "mode": "list",
          "cachedResultName": "Onboarding"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "metadata": "={{ $('WhatsApp Trigger').item.json.metadata }}",
            "contacts": "={{ $('WhatsApp Trigger').item.json.contacts }}",
            "messages": "={{ $('WhatsApp Trigger').item.json.messages }}",
            "field": "={{ $('WhatsApp Trigger').item.json.field }}",
            "usuario_data": "={{ $json.usuario_data }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "usuario_data",
              "displayName": "usuario_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1968,
        -1152
      ],
      "id": "63a60098-0575-441a-b40d-a9cbe12f21e5",
      "name": "Call Onboarding Register"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        624,
        -32
      ],
      "id": "d187ea81-69ea-4e63-8048-17f09a3c63ff",
      "name": "No Operation, do nothing",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93e015c8-0275-4999-a019-8d4f80b66d07",
              "leftValue": "={{ $json.usuario_data.estado_suscripcion }}",
              "rightValue": "=gratuito",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        400,
        -32
      ],
      "id": "f176e465-c428-4ba5-845f-80b2c4beb0ae",
      "name": "IsFree?",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "mb7JhBisRgsDckO6",
          "mode": "list",
          "cachedResultName": "Agente Transaccional"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "messages": "={{ $('WhatsApp Trigger').item.json.messages }}",
            "contacts": "={{ $('WhatsApp Trigger').item.json.contacts }}",
            "field": "={{ $('WhatsApp Trigger').item.json.field }}",
            "usuario_data": "={{ $('data').item.json.usuario_data }}",
            "metadata": "={{ $('WhatsApp Trigger').item.json.metadata }}"
          },
          "matchingColumns": [
            "messages",
            "contacts",
            "field",
            "usuario_data",
            "metadata_phone_number_id"
          ],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "usuario_data",
              "displayName": "usuario_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1968,
        -1376
      ],
      "name": "Call Agente Transaccional",
      "id": "68a8e3ad-60b7-4ca2-b63f-6c3d8df24910"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO\n$$\nDECLARE\n    tabla RECORD;\nBEGIN\n    -- Eliminar todas las tablas de forma segura y ordenada\n    FOR tabla IN\n        SELECT tablename FROM pg_tables\n        WHERE schemaname = 'public'\n    LOOP\n        EXECUTE 'DROP TABLE IF EXISTS public.' || quote_ident(tabla.tablename) || ' CASCADE';\n    END LOOP;\nEND;\n$$;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        384,
        608
      ],
      "id": "e61a3ce3-9efa-44de-b209-6630f72fd1a7",
      "name": "CLEAN DATABASE",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "metas_ahorro",
          "mode": "list",
          "cachedResultName": "metas_ahorro"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "a0e2a22b-5f50-4d43-9b81-0a6f0d9c4c7c",
            "nombre": "Salir de deudas",
            "monto_objetivo": 35000000,
            "fecha_objetivo": "=2026-02-12T00:00:00.000-05:00",
            "estado": "activa",
            "id_usuario": "5112139f-13f8-4ec9-ba00-9c02ea774c5a",
            "monto_actual": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "monto_objetivo",
              "displayName": "monto_objetivo",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "monto_actual",
              "displayName": "monto_actual",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_objetivo",
              "displayName": "fecha_objetivo",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "cancelada",
                  "value": "cancelada"
                },
                {
                  "name": "completada",
                  "value": "completada"
                },
                {
                  "name": "inactiva",
                  "value": "inactiva"
                },
                {
                  "name": "activa",
                  "value": "activa"
                }
              ]
            },
            {
              "id": "fecha_creacion",
              "displayName": "fecha_creacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_usuario",
              "displayName": "id_usuario",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        400,
        -928
      ],
      "id": "3174561b-a579-48d5-a34a-c2a1b0d1c208",
      "name": "insert user",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH dummy AS (\n    SELECT NULL::uuid AS id\n)\nSELECT \n    to_jsonb(u) AS user_data,\n    (u.id IS NOT NULL) AS existe\nFROM \n    dummy\nLEFT JOIN \n    usuarios u ON u.numero_whatsapp = '+{{ $json.contacts[0].wa_id }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        624,
        -1248
      ],
      "id": "104da7ce-0d67-4b22-8f91-0dce40f79c80",
      "name": "Get user_data",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    EXISTS (\n        SELECT 1 \n        FROM metas_ahorro \n        WHERE id_usuario = $1\n    ) AS tiene_meta;\n",
        "options": {
          "queryReplacement": "={{ $json.usuario_data.id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1296,
        -1328
      ],
      "id": "e111f9d1-a716-4c94-ba43-9670bb6bb36f",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.meta }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9c38cf88-8498-4e41-b8b6-9c9bf0465b55"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "meta registrada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d20501b2-6c3d-42b4-9617-995adf90e423",
                    "leftValue": "={{ $json.meta }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sin Registrar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1744,
        -1328
      ],
      "id": "a862f0d2-d27f-463c-9769-64ccfb057e62",
      "name": "meta"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90dc24fa-85a0-4b98-ad7f-a0f2ab094722",
              "name": "meta",
              "value": "={{ $json.tiene_meta }}",
              "type": "string"
            },
            {
              "id": "70bf3769-05a5-4f09-9ead-f39029fc7167",
              "name": "usuario_data",
              "value": "={{ $('data').item.json.usuario_data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        -1328
      ],
      "id": "2da62d31-1085-4a83-b8d5-0b51f43b4e2b",
      "name": "data1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--- pagar y registrar subscripciones, pendiente\nCREATE OR REPLACE FUNCTION procesar_suscripciones_vencidas()\nRETURNS VOID AS $$\nBEGIN\n  -- Insertar transacciones\n  INSERT INTO transacciones (\n      id_usuario,\n      descripcion,\n      monto,\n      moneda,\n      tipo,\n      fecha_transaccion,\n      id_categoria,\n      id_fuente\n  )\n  SELECT\n      s.id_usuario,\n      CONCAT('Pago de suscripción: ', s.nombre),\n      s.monto,\n      s.moneda,\n      'Gasto',\n      CURRENT_DATE,\n      s.id_categoria,\n      f.id\n  FROM suscripciones_usuario s\n  LEFT JOIN fuentes_registro f ON f.nombre = 'Web'\n  WHERE s.activa = TRUE\n    AND s.fecha_proximo_pago = CURRENT_DATE;\n\n  -- Actualizar fechas\n  UPDATE suscripciones_usuario\n  SET fecha_proximo_pago = \n      CASE\n          WHEN frecuencia = 'mensual' THEN fecha_proximo_pago + INTERVAL '1 month'\n          WHEN frecuencia = 'trimestral' THEN fecha_proximo_pago + INTERVAL '3 months'\n          WHEN frecuencia = 'anual' THEN fecha_proximo_pago + INTERVAL '1 year'\n          ELSE fecha_proximo_pago\n      END\n  WHERE activa = TRUE\n    AND fecha_proximo_pago = CURRENT_DATE;\n\nEND;\n$$ LANGUAGE plpgsql;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        400,
        -704
      ],
      "id": "9f99963f-2615-45b2-b284-c6b42fc92c65",
      "name": "functions",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\nALTER TABLE transacciones \nALTER COLUMN id SET DEFAULT uuid_generate_v4();\n\n-- Suscripciones Usuario\nALTER TABLE suscripciones_usuario\nALTER COLUMN id SET DEFAULT uuid_generate_v4();\n\n-- Metas de Ahorro\nALTER TABLE metas_ahorro\nALTER COLUMN id SET DEFAULT uuid_generate_v4();",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        384,
        -224
      ],
      "id": "182c32c0-5874-435b-ac92-17af6c16ba04",
      "name": "crear UUI postgres",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v22.0/{{ $json.metadata.phone_number_id }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"status\": \"read\",\n  \"message_id\": \"{{ $json.messages[0].id }}\",\n  \"typing_indicator\": {\n    \"type\": \"text\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1136,
        -1552
      ],
      "id": "a0112fb7-9b2a-4827-a898-9f117c0bebfe",
      "name": "HTTP Request",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        624,
        -1440
      ],
      "id": "25affb45-a6dc-4d08-a387-b500f7e839a9",
      "name": "Wait",
      "webhookId": "bbaf7bad-b230-4117-83d9-4073b4f772f7"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH datos_usuario AS (\n  SELECT \n    id,\n    numero_whatsapp\n  FROM usuarios\n  WHERE id = '5d9de924-8858-4908-bf74-016909a8e452'\n),\nborrado AS (\n  -- 1️⃣ Borrar logs de anuncios\n  DELETE FROM anuncios_usuarios \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_recordatorios AS (\n  DELETE FROM recordatorios \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_metas AS (\n  DELETE FROM metas_ahorro \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_suscripciones_usuario AS (\n  DELETE FROM suscripciones_usuario \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_suscripciones_mony AS (\n  DELETE FROM suscripciones_mony \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_transacciones AS (\n  DELETE FROM transacciones \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_categorias AS (\n  DELETE FROM categorias \n  WHERE id_usuario = (SELECT id FROM datos_usuario)\n),\nborrado_usuario AS (\n  DELETE FROM usuarios \n  WHERE id = (SELECT id FROM datos_usuario)\n)\nSELECT \n  true AS success,\n  id,\n  numero_whatsapp\nFROM datos_usuario;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        624,
        192
      ],
      "id": "2140ccc3-58e3-4058-8228-ac1d6daa2545",
      "name": "delet user",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_history_mony_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        848,
        192
      ],
      "id": "86aca0a1-5a8d-4a34-8ca8-875272d2efd6",
      "name": "onboarding delete",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=MONY_chat_id_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1040,
        192
      ],
      "id": "6bd5955d-f989-4310-91c7-918f8db40045",
      "name": "transaction delete",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1232,
        192
      ],
      "id": "2a4d98c6-7d66-49dc-be9f-bd83d0f4a636",
      "name": "push_message",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_history_mony_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        832,
        384
      ],
      "id": "5c1221fb-a389-4cd6-a025-df67cc819174",
      "name": "onboarding delete1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=MONY_chat_id_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1024,
        384
      ],
      "id": "b3047b92-1a58-474f-ae75-3af3f8d141fb",
      "name": "transaction delete1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $json.numero_whatsapp.replace('+','') }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1216,
        384
      ],
      "id": "498c4b07-de4c-443c-9b32-3f53bb1db023",
      "name": "push_message1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        416,
        384
      ],
      "id": "14ff3555-101d-4cc2-ae86-2292fd45b47a",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "43859a53-b296-4aa4-8453-a3eabec83f0a",
              "name": "numero_whatsapp",
              "value": "=573228854498",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        624,
        384
      ],
      "id": "4dfc4a2d-cc1c-47e6-aaee-3329bf4eee5b",
      "name": "delete number"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        400,
        192
      ],
      "id": "4054dadf-ed25-4bf5-935b-165b8efc8ede",
      "name": "Users",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "20b304b2-e565-4c21-9e81-221fcee2576b",
              "leftValue": "={{ $json.messages[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        832,
        -1440
      ],
      "id": "b1b4dac5-d0df-4426-b5d5-936577ebc905",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1120,
        -1408
      ],
      "id": "cfcfd462-76db-4b1b-9275-88e7cb775f3d",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "content": "## DELETE USER\n",
        "height": 384,
        "width": 1104
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        144
      ],
      "id": "f2a28873-5b30-478d-b2fc-2b73f9607b4c",
      "name": "Sticky Note"
    }
  ],
  "pinData": {
    "WhatsApp Trigger": [
      {
        "json": {
          "messaging_product": "whatsapp",
          "metadata": {
            "display_phone_number": "573143400476",
            "phone_number_id": "565888133266017"
          },
          "contacts": [
            {
              "profile": {
                "name": "•OSCAR•"
              },
              "wa_id": "573208397300"
            }
          ],
          "messages": [
            {
              "from": "573208397300",
              "id": "wamid.HBgMNTczMjA4Mzk3MzAwFQIAEhgUM0E4RTk5RERDODI1M0ZCMkNEMjQA",
              "timestamp": "1755038781",
              "text": {
                "body": "Me guste $13 mil en peaje"
              },
              "type": "text"
            }
          ],
          "field": "messages"
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Programar Recordatorios": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-13T20:48:13.908Z",
  "versionId": "87b72b90-438f-47dd-971c-adc7472fd3e5"
}