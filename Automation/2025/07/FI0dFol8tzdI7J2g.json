{
  "active": true,
  "connections": {
    "Receive the File": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get only the text": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "audio": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Get only the text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive the File1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Get only the text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get only the text1": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Telegram send the text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Receive the File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Receive the File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-15T23:31:50.371Z",
  "id": "FI0dFol8tzdI7J2g",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Registro de gastos",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "4b80a880-ece1-4d6f-b03d-c81661cacac6",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -560,
        464
      ],
      "webhookId": "6021108f-f0e8-4d7a-918b-f49baa28ba85",
      "typeVersion": 1.1,
      "credentials": {
        "telegramApi": {
          "id": "LUAfQoJdPcm7EkIS",
          "name": "Registro Gastos"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "=Datos registrados: \n\n{{ $json.toJsonString() }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "id": "af870ab9-e23a-44ab-a061-fc119134be04",
      "name": "Telegram send the text",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1504,
        448
      ],
      "typeVersion": 1.2,
      "webhookId": "c6674bde-cd06-4989-b782-3d639a821545",
      "credentials": {
        "telegramApi": {
          "id": "LUAfQoJdPcm7EkIS",
          "name": "Registro Gastos"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "52a2f0d9-3137-4f6e-a2c1-8285694f6159",
              "name": "Resumen",
              "type": "string",
              "value": "={{ $json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ebbfeeeb-3065-4ae9-9a50-7bebdbc48d7b",
      "name": "Get only the text",
      "type": "n8n-nodes-base.set",
      "position": [
        672,
        208
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}"
      },
      "id": "210a6029-739e-4542-b654-994325901e2c",
      "name": "Receive the File",
      "type": "n8n-nodes-base.telegram",
      "position": [
        32,
        208
      ],
      "typeVersion": 1.2,
      "webhookId": "a80a4cb7-f166-4eea-8f28-c23464c37c78",
      "credentials": {
        "telegramApi": {
          "id": "LUAfQoJdPcm7EkIS",
          "name": "Registro Gastos"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.Resumen }}",
        "attributes": {
          "attributes": [
            {
              "name": "Proveedor",
              "description": "Es a quien se le pagó el monto que describe el texto",
              "required": true
            },
            {
              "name": "Monto",
              "type": "number",
              "description": "es el monto pagado",
              "required": true
            },
            {
              "name": "Fecha de compra",
              "description": "Es la fecha de compra en formato DD/MM/YYYY",
              "required": true
            },
            {
              "name": "Referencia",
              "description": "Es un numero o string referente a la compra"
            },
            {
              "name": "Mes",
              "description": "Es el mes de la compra escrito en letras \"Marzo\"",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=Eres el asistente personal de Andrés y le ayudaras a registrar todos sus gastos. \n\nTen muy en Cuenta la **Fecha y hora actual:** {{ new Date().toLocaleString('es-CO', { timeZone: 'America/Bogota' }) }} para cualquier consulta"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        944,
        448
      ],
      "id": "871da0b2-6f2b-4591-b359-3bd9be79edbf",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        960,
        608
      ],
      "id": "01314a76-5c4c-4e2c-9b0b-1cea2be063d2",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        16,
        640
      ],
      "id": "47aaa89a-4a6d-4a01-9178-6b11fc69ec3c",
      "name": "Telegram2",
      "webhookId": "82e2e760-7d7e-4588-9ab9-5abb13635da7",
      "credentials": {
        "telegramApi": {
          "id": "LUAfQoJdPcm7EkIS",
          "name": "Registro Gastos"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "languaje",
              "value": "es"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        640
      ],
      "id": "092085c0-79cf-4b1d-bafe-21e918394663",
      "name": "HTTP Request",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d3d777d7-9802-4251-822b-e9c4d8bf3424",
              "name": "Resumen",
              "value": "={{$json.message.text}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        448
      ],
      "id": "7ce31924-42ad-4166-b41f-c694ee5d574b",
      "name": "Texto"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d3d777d7-9802-4251-822b-e9c4d8bf3424",
              "name": "Resumen",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        640
      ],
      "id": "cee52241-975f-48e8-84b8-13ef17b3ee0c",
      "name": "audio"
    },
    {
      "parameters": {
        "jsCode": "// Accede al campo de datos\nconst file = items[0].binary?.data; // Asegúrate de que el archivo esté en el campo 'binary.data'\n\nif (file) {\n    // Extraer la extensión del archivo a partir del nombre\n    const fileExtension = file.fileName.split('.').pop().toLowerCase();\n\n    // Verificar y establecer el tipo MIME correcto\n    if (fileExtension === 'jpg' || fileExtension === 'jpeg') {\n        file.mimeType = 'image/jpeg'; // Cambiar MIME a 'image/jpeg'\n    } else if (fileExtension === 'png') {\n        file.mimeType = 'image/png'; // Cambiar MIME a 'image/png'\n    } else {\n        throw new Error(\"El archivo no es una imagen válida.\");\n    }\n\n    // Devuelve los datos corregidos\n    return [{ binary: { data: file } }];\n} else {\n    throw new Error(\"No se encontraron datos binarios en el archivo.\");\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        208
      ],
      "id": "6081f049-0107-406a-86b1-661228757c83",
      "name": "Code4"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Eres un experto en analisis OCR,  mira la imagen y detecta:\n- Fecha: dd-mm-yyyy\n- Monto: En COP $\n- Glosa: Descripción del gasto\n- Proveedor/Empresa: Comercio donde se realizó el gasto\n- NIT: Número de Identificación Tributario en Colombia\n- Método de Pago:  Método o Forma de Pago que puede ser Efectivo, Tarjeta de Crédito ó Tarjeta de Débito\n\nEl output entrégalo en formato JSON\n",
        "inputType": "base64",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        448,
        208
      ],
      "id": "189b5afb-be2d-4826-8313-4bbc663597d0",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "52a2f0d9-3137-4f6e-a2c1-8285694f6159",
              "name": "Resumen",
              "type": "string",
              "value": "={{ $json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "89432cdf-df81-4a28-a74f-3b343aaa3ca4",
      "name": "Get only the text1",
      "type": "n8n-nodes-base.set",
      "position": [
        672,
        48
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo.last().file_id }}"
      },
      "id": "b6fa456d-a295-4d73-8aed-2cd1809f8ed5",
      "name": "Receive the File1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        32,
        48
      ],
      "typeVersion": 1.2,
      "webhookId": "a80a4cb7-f166-4eea-8f28-c23464c37c78",
      "credentials": {
        "telegramApi": {
          "id": "LUAfQoJdPcm7EkIS",
          "name": "Registro Gastos"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Accede al campo de datos\nconst file = items[0].binary?.data; // Asegúrate de que el archivo esté en el campo 'binary.data'\n\nif (file) {\n    // Extraer la extensión del archivo a partir del nombre\n    const fileExtension = file.fileName.split('.').pop().toLowerCase();\n\n    // Verificar y establecer el tipo MIME correcto\n    if (fileExtension === 'jpg' || fileExtension === 'jpeg') {\n        file.mimeType = 'image/jpeg'; // Cambiar MIME a 'image/jpeg'\n    } else if (fileExtension === 'png') {\n        file.mimeType = 'image/png'; // Cambiar MIME a 'image/png'\n    } else {\n        throw new Error(\"El archivo no es una imagen válida.\");\n    }\n\n    // Devuelve los datos corregidos\n    return [{ binary: { data: file } }];\n} else {\n    throw new Error(\"No se encontraron datos binarios en el archivo.\");\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        48
      ],
      "id": "6c32fd64-d149-44cc-ad51-2f24a5c9fe5e",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Eres un experto en analisis OCR,  mira la imagen y detecta:\n- Fecha: dd-mm-yyyy\n- Monto: En COP $\n- Glosa: Descripción del gasto\n- Proveedor/Empresa: Comercio donde se realizó el gasto\n- NIT: Número de Identificación Tributario en Colombia\n- Método de Pago:  Método o Forma de Pago que puede ser Efectivo, Tarjeta de Crédito ó Tarjeta de Débito\n\nEl output entrégalo en formato JSON\n",
        "inputType": "base64",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        448,
        48
      ],
      "id": "9983a321-8cdf-4d74-866a-f581b8ffcddc",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "18Rhqb68Ah8UpvQkz-vQuMTQTwqkEd_SJxc8nqBMwFuQ",
          "mode": "list",
          "cachedResultName": "Presupuesto mensual",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18Rhqb68Ah8UpvQkz-vQuMTQTwqkEd_SJxc8nqBMwFuQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 175709570,
          "mode": "list",
          "cachedResultName": "Gastos Mensuales",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18Rhqb68Ah8UpvQkz-vQuMTQTwqkEd_SJxc8nqBMwFuQ/edit#gid=175709570"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Proveedor": "={{ $json.output.Proveedor }}",
            "Monto": "={{ $json.output.Monto }}",
            "Fecha": "={{ $json.output[\"Fecha de compra\"] }}",
            "Referencia": "={{ $json.output.Referencia }}",
            "Mes": "={{ $json.output.Mes }}"
          },
          "matchingColumns": [
            "Proveedor"
          ],
          "schema": [
            {
              "id": "Proveedor",
              "displayName": "Proveedor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Monto",
              "displayName": "Monto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Mes",
              "displayName": "Mes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Fecha",
              "displayName": "Fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Referencia",
              "displayName": "Referencia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Categoría",
              "displayName": "Categoría",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Observaciones",
              "displayName": "Observaciones",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1280,
        448
      ],
      "id": "a1408260-2a8b-4a45-bf17-72182fb9de3d",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "niKwqEKRHcLndlSv",
          "name": "Andres"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65411751-b3c9-4294-9387-90d3f4310dff",
                    "leftValue": "={{ $json.message.photo[3].file_unique_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fca12b29-d100-4465-86cc-525774a3ce65",
                    "leftValue": "={{ $json.message.document.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "1e01eafc-43d7-4cdb-9189-14031e8d2f92"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5001f27a-a966-4b1b-8c38-cda40143f5f5",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -288,
        432
      ],
      "id": "89a9eac5-64e8-4dee-b4fe-97833090b95c",
      "name": "Switch"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-15T23:31:50.371Z",
      "updatedAt": "2025-07-15T23:31:50.371Z",
      "role": "workflow:owner",
      "workflowId": "FI0dFol8tzdI7J2g",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-23T23:36:29.068Z",
  "versionId": "34156ead-4b4a-42a5-a58b-c993abc6f704"
}