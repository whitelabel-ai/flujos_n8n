{
  "active": true,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Completed Notification": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-06T20:26:01.937Z",
  "id": "SOPhipgvMzeUIBy0",
  "isArchived": false,
  "meta": null,
  "name": "Backup Workflows",
  "nodes": [
    {
      "parameters": {},
      "id": "be7796ec-aa87-4f0c-bf8d-1104016153ad",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        480,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "53b1fcab-2012-48e9-92ec-7afb599beeff",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e891f962-9887-405a-9d19-12b4efdfae8b",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        40,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "d0606387-c664-4708-95b7-89338a469ed5",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        880,
        180
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "MC02laTXYEVPf7ci",
          "name": "n8n automation"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "cc7aa57f-fdc0-4a56-82ca-be3fb4c11bc0",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1940,
        660
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "8a42e98d-e9f5-4297-8a16-b24f44bd9b1c",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        900,
        540
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4211312-56fe-44c9-b90e-5126b4b680a5",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        580,
        560
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "9025eaf2-916d-40a9-88ac-a30875f94ff8",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        660,
        820
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "677dd3ca-72a3-475c-9903-916a14f59fad",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        860,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "f466b319-ddb5-456e-b9b7-ad59edb2e42b",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1260,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "574b21a6-8663-4c39-8942-1acbcb94d5c3",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1480,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3ae74e40-1b47-4fc2-abf1-3336bdee5c61",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1480,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "76ffd504-fcce-46af-a4be-88b15e291e29",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1480,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "whitelabel-ai",
          "mode": "list",
          "cachedResultName": "whitelabel-ai",
          "cachedResultUrl": "https://github.com/whitelabel-ai"
        },
        "repository": {
          "__rl": true,
          "value": "flujos_n8n",
          "mode": "list",
          "cachedResultName": "flujos_n8n",
          "cachedResultUrl": "https://github.com/whitelabel-ai/flujos_n8n"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "ee9194e5-0d89-4f15-bc51-da73eefc19a1",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1700,
        1020
      ],
      "typeVersion": 1,
      "webhookId": "bcb66584-4797-4a71-9eaa-f501094e6b0f",
      "credentials": {
        "githubApi": {
          "id": "Rf12PFHYB0L1Ta7u",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "whitelabel-ai",
          "mode": "list",
          "cachedResultName": "whitelabel-ai",
          "cachedResultUrl": "https://github.com/whitelabel-ai"
        },
        "repository": {
          "__rl": true,
          "value": "flujos_n8n",
          "mode": "list",
          "cachedResultName": "flujos_n8n",
          "cachedResultUrl": "https://github.com/whitelabel-ai/flujos_n8n"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "360d9332-9c68-40ff-9019-63184512d188",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1700,
        820
      ],
      "typeVersion": 1,
      "webhookId": "ccd1b477-92cc-4ae5-8afe-4d611de1df73",
      "credentials": {
        "githubApi": {
          "id": "Rf12PFHYB0L1Ta7u",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4be56809-8916-4dbe-98e3-b0d13396b006",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1080,
        180
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 17,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "16784c76-3706-49c8-aa12-8a3135ba1977",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        280
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "22fb545d-2790-4232-bf4f-806e432feb7b",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        1060,
        820
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "4121fa86-1def-448f-bc7f-f38c965a1b25",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "789fc6d3-62f6-4f48-84c9-ee9409aa7470",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=:information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "3afe5d08-d5ce-4e84-b7b3-7ee1c2a51b66",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        720,
        180
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "1f84b13e-7cc9-4a26-891b-f352d191faf2",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1520,
        200
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "e474641c-d3a1-4246-9bca-93709f0c0c2f",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        1520,
        -20
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "8e8e4b29-e9a0-438e-af4d-da9d1b89d784",
      "name": "Failed Flows",
      "type": "n8n-nodes-base.slack",
      "position": [
        1720,
        220
      ],
      "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=whitelabel-ai"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=flujos_n8n"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=Automation/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "9645d2d7-c502-46ae-a9bf-02d930c6bd49",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "whitelabel-ai",
          "mode": "list",
          "cachedResultName": "whitelabel-ai",
          "cachedResultUrl": "https://github.com/whitelabel-ai"
        },
        "repository": {
          "__rl": true,
          "value": "flujos_n8n",
          "mode": "list",
          "cachedResultName": "flujos_n8n",
          "cachedResultUrl": "https://github.com/whitelabel-ai/flujos_n8n"
        },
        "filePath": "={{ $json.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        360,
        560
      ],
      "id": "d239196b-5f8e-4136-b7b4-543a2b455011",
      "name": "Get file data",
      "webhookId": "527e150b-cefa-44a1-a238-92c581dbfd32",
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "Rf12PFHYB0L1Ta7u",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "delete",
        "owner": {
          "__rl": true,
          "value": "whitelabel-ai",
          "mode": "list",
          "cachedResultName": "whitelabel-ai",
          "cachedResultUrl": "https://github.com/whitelabel-ai"
        },
        "repository": {
          "__rl": true,
          "value": "flujos_n8n",
          "mode": "list",
          "cachedResultName": "flujos_n8n",
          "cachedResultUrl": "https://github.com/whitelabel-ai/flujos_n8n"
        },
        "filePath": "2025/05/ZhC4T6O5OnUwGMky.json",
        "commitMessage": "delete ZhC4T6O5OnUwGMky"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        2000,
        360
      ],
      "id": "eb35a104-fc44-4aa6-b573-deec9f8403ae",
      "name": "GitHub",
      "webhookId": "ca62d19e-cf27-4daa-8d1b-fc034ca6f158",
      "credentials": {
        "githubApi": {
          "id": "Rf12PFHYB0L1Ta7u",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=✅ Backup Automation has completed - {{ $('n8n').all().length }} workflows have been processed.\nsave to: https://github.com/whitelabel-ai/flujos_n8n/tree/main/Automation/",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1740,
        -20
      ],
      "id": "ec21e618-565a-434b-a692-a38e46b08137",
      "name": "Discord",
      "webhookId": "13a6e839-db87-4433-b130-0c500b347783",
      "executeOnce": true,
      "credentials": {
        "discordWebhookApi": {
          "id": "2rNIOJ7dmpcSUhuf",
          "name": "Logs Automation Whitelabel"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "Done"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1300,
        80
      ],
      "id": "e7040ecb-c149-48f1-9b29-1ddd1d48625c",
      "name": "Aggregate"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "createdAt": "2025-06-06T20:26:01.937Z",
      "updatedAt": "2025-06-06T20:26:01.937Z",
      "role": "workflow:owner",
      "workflowId": "SOPhipgvMzeUIBy0",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-24T01:21:28.727Z",
  "versionId": "de8eea9c-8673-472b-9e9a-12b8b093198a"
}