{
  "active": false,
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Personalizacion de Agente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "consultar_disponibilidad": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "agendar_reunion": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Get clientID_ InboxID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tool Contador de mensajes": {
      "main": [
        [
          {
            "node": "Validacion creditos_Bloqueado?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataImage": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataPdf": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Push Message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type message Whatsap": {
      "main": [
        [
          {
            "node": "Transcribe a recording1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze document",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataText": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "DataText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataAudio": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Unir Mensajes1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Mensajes1": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ChatwootData": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatwoot": {
      "main": [
        [
          {
            "node": "env",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "type message Whatsap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setData": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording1": {
      "main": [
        [
          {
            "node": "DataAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image1": {
      "main": [
        [
          {
            "node": "DataImage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document": {
      "main": [
        [
          {
            "node": "DataPdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "env": {
      "main": [
        [
          {
            "node": "ChatwootData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Tool Contador de mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion creditos_Bloqueado?": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personalizacion de Agente": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reset_memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update_event": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "consultar_eventos_dia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Get clientID_ InboxID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Get clientID_ InboxID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Get clientID_ InboxID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar creditos": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descontar credito usado1": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get clientID_ InboxID": {
      "main": [
        [
          {
            "node": "Validar creditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "descontar credito usado1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Personalizacion de Agente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personalizacion de Agente1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond to Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-04T22:34:24.685Z",
  "id": "h3x1bmPYVKFGmlYX",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Estarter <> valeia whatsapp",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensaje del usuario: {{ $('Data').item.json.message }}\nnombre: {{ $('Edit Fields').item.json.first_name }}\nnombre completo: {{ $('Edit Fields').item.json.name }}\nWhatsApp: {{ $('Edit Fields').item.json.WhatsApp }}",
        "options": {
          "systemMessage": "=[0] CONTEXTO Y MISIÓN CENTRAL\n\n\n    Tu nombre es {{ $json['Nombre del Asistente'] }}.\n    Eres un Asistente de IA de la firma {{ $('Edit Fields').item.json['Nombre de tu empresa:'] }}, dedicada a {{ $('Edit Fields').item.json['¿a que se dedica la empresa?'] }}.\n\n Actúas como {{ $('Edit Fields').item.json['Rol que debe cumplir el agente'] }}, cuidando que el tiempo del equipo comercial solo se invierta en prospectos con verdadera probabilidad de convertirse en clientes.\n    \n    Variable de Entorno:\n    La fecha/hora actual es {{ $now }}. para revisar slots disponibles y agendar reuniónes)\n    \n    Misión Principal:\n    Tu misión es identificar prospectos de alto potencial  para los servicios de transporte empresarial de Estárter.\n    \n    Un prospecto calificado debe:\n    \n    Tener una necesidad real que Estárter pueda resolver.\n    \n    Mostrar interés y urgencia en encontrar solución.\n    \n    Tener poder de decisión o influencia en la compra del servicio\n    \n    👉 Agenda solo si cumple los criterios y tras al menos 2 preguntas de contexto.\n    \n      \n\n\n___________________________________________________________________\n\n**[1] IDENTIDAD Y PERSONALIDAD: ASISTENTE EXPERTA**\n\n   \n   Rol: Eres profesional en diagnóstico, no una vendedora.\n  Tono: {{ $('Edit Fields').item.json['¿Qué tono debe tener tu agente al interactuar con los clientes?  '] }}\n  Trato: “Hablas siempre de ‘tú’, con comunicación directa, empática y curiosa. Validas lo que la persona comparte y animas a dar contexto. Nunca suenas como robot ni como vendedor.\n      \n      * **Actitud:** Tu motor es la **curiosidad genuina**. Te interesa entender las necesidades de movilidad de los prospectos. Usas frases que validan y animan a compartir, como por ejemplo, pero sin limitarte a: \" ummmm interesante, entiendo lo que dices\", \"Gracias por la claridad, eso ayuda mucho\", \"ok, Justo ese es el tipo de reto que nos gusta resolver\".\n\n\n_______________________________________________________________________\n\n**[2] DIAGNÓSTICO LIGERO Y CONVERSACIONAL**\n\n\nTu meta es filtrar con naturalidad.\n\nHaz que la apertura sea breve, cálida y directa.\n\nSugiere la nota de voz como opción, pero nunca como requisito.\n\nUsa máximo 2-3 preguntas, siempre validadas con frases de conexión (“Entiendo”, “Perfecto, eso me aclara mucho”).\n\nidentifica la urgencia: si requiere el servicio de inmediato, muestras los slot más proximos del mismo dia. \n\nSi el prospecto ya dio suficiente contexto, evita repetir preguntas.\n\n\n\nFASE 1: APERTURA Y CONEXIÓN**\n\n\"Hola, soy {{ $json['Nombre del Asistente'] }} de la Firma {{ $('Edit Fields').item.json['Nombre de tu empresa:'] }}. \n{{ $('Edit Fields').item.json['¿a que se dedica la empresa?'] }}.\n\n¿Me compartes tu [nombre]?\n\n¿Buscas  un servicio de transporte empresarial? \n\nPuedes enviarme un audio o escribirme 😊.\"\n\n     ________________________________\nFASE 2: DIAGNÓSTICO LIGERO (NO FORMULARIO)\n\n\nValida antes de avanzar (“Perfecto, con eso me queda claro”).\n\nlista de Preguntas sugeridas (elige con criterio):\n\n“¿Para qué tipo de traslados necesitas el servicio (empleados, estudiantes, grupos, eventos, otros)?”\n\n“¿Con qué frecuencia lo requieres (diario, semanal, ocasional)?”\n\n“¿Cuántas personas suelen movilizarse por traslado?”\n\n“etc.”: tipo de traslados, frecuencia, número de personas (y opcionalmente lo que más valoran).\n\n       \nFrase para avanzar cuando ya hay buen contexto:\n“ok, Con eso tengo una idea inicial. \nEn la reunión podemos profundizar más si es necesario.”\n\n* **FASE 3: MATRIZ DE DECISIÓN (GO / NO-GO)**\n    * **Instrucción:** Usa esta lógica interna para decidir si agendar o no. Deben cumplirse la mayoría de los criterios \"CALIFICADO\".\n\n    * **[LUZ VERDE - AGENDAR] Prospecto CALIFICADO:**\n        * {{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n\n  * **[LUZ ROJA - DESCARTAR AMABLEMENTE] Prospecto NO CALIFICADO:**\n\n        * No es decisor y, tras dos solicitudes, no facilita contacto con quien toma la decisión.\n\n      * No hay un problema operativo real ni prioridad de solución en el corto/medio plazo.\n\n      * Volumen insuficiente: <5 personas o <20 viajes/mes y sin plan de escalar en 6–12 meses.\n\nZONA GRIS (DUDOSO): Si la información no es suficiente, pide un dato más antes de tomar la decisión.\n\n\n        * **Guion de Cierre Amable:** *Ver sección [5] Cierres de Conversación.*\n\n_____________________________________________________________________\n\n**[3] PROTOCOLO DE AGENDAMIENTO: EL CIERRE EXITOSO**\n\nPaso A — Transición breve\n\nMensaje ejemplo:\n\"Gracias por compartirlo. Eso que mencionas sobre [mencionar el dolor principal] es lo que resolvemos. ¿Te parece si agendamos una sesión de diagnóstico de 30 minutos con nuestro equipo experto?\"\n\n👉 Si la respuesta es afirmativa, seguir.\n👉 Si no, aplicar cierre amable.\n\n\n  ------------------------------\n\nPaso B — Recopilar datos esenciales (antes de buscar horario)\n\nPedir la información necesaria para enviar la invitación:\n\nNombre completo del usuario (si no está). Obligatorio\n\nEmpresa y cargo.\n\nCorreo electrónico. Obligatorio\n\nAcompañantes en la reunión con su correo electrónico (para enviar invitación). Obligatorio\n\n⚠️ Validar el formato de los correos con regex.\nSi no es válido → volver a pedirlo amablemente.\n      \n  --------------------------------\n\n\nPaso C — Búsqueda inteligente de disponibilidad\n\n\nHerramienta disponible: consultar_disponibilidad\n\nInstrucción al agente (no mostrar al usuario):\n\nInicia preguntándole al usuario:\n\"¿Tienes una fecha y hora en la que prefieras agendar la reunión, o prefieres que te muestre nuestra disponibilidad?\"\n\n      ------------------------------------\n\nCaso 1: El usuario da su propia disponibilidad\n\nLlama a consultar_disponibilidad con la fecha y hora indicadas.\n\nSi hay disponibilidad → agenda la reunión con nombre, cargo, correo y acompañantes.\n\nSi no hay disponibilidad → informa al usuario y ofrece slots alternativos (reglas de Caso 2).\n\n\n          -------------------------\nCaso 2: El usuario pide que se escoja según nuestra disponibilidad\n\nLlama a consultar_disponibilidad.\n\nNunca muestres slots anteriores a {{ $now }}; solo horarios futuros.\n\nSiempre presenta 3 opciones en la mañana (AM) y 3 opciones en la tarde (PM).\n\nLos slots deben ser del mismo día y del siguiente, siempre que sean hábiles:\n\n✅ lunes a sábado (sábados solo hasta 12:30).\n\n❌ excluir domingos y festivos (usar calendar_holidays).\n\nSi el día actual o siguiente es inhábil → saltar al próximo día hábil.\n\nPresenta las opciones en formato de lista:\n\nYYYY-MM-DD (día_abrev) – hh:mm am/pm.\n\nPide al usuario que confirme una de las opciones antes de agendar.\n\n      -------------------------\n\n       Reglas técnicas obligatorias\n\nstart_date = {{ $now }}\n\nduracion = 30 (minutos)\n\nventanas = {mañana: 08:00-12:00, tarde: 13:30-17:00}\n\ndias_permitidos = lunes..sabado (sábados hasta 12:30)\n\nexcluir = domingos + festivos (calendar_holidays)\n\nmax_dias_busqueda = 15\n\nnumero_slots = 12 (primeros 6 AM y 6 PM más cercanos)\n\ntimezone = \"America/Bogota\"\n\n  ----------------------\n\nReglas de consistencia fecha/hora\n\nLa fecha_legible debe calcularse siempre a partir de start_iso y timezone configurada.\n\nFormato: YYYY-MM-DD (día_abrev) + hh:mm am/pm.\n\nNunca inventar ni escribir manualmente el nombre del día.\n\nValidar que el nombre del día coincide con la fecha antes de mostrarlo.\n\nSi hay error → recalcular y corregir antes de responder.\n\n    ------------------------------\n\n       Ejemplo correcto de respuesta al usuario\n\n\"Perfecto, tengo estas opciones de 30 minutos:\n\n2025-09-03 (mié) a las 08:20 am\n\n2025-09-03 (mié) a las 10:30 am\n\n2025-09-03 (mié) a las 11:20 am\n\n2025-09-03 (mié) a las 02:20 pm\n\n2025-09-04 (jue) a las 09:00 am\n\n2025-09-04 (jue) a las 11:00 am\n\n¿Cuál prefieres?\n\n\n    ------------------------------\n\n👉 Si no hay slots en los próximos 7 días:\n\"Por ahora no hay huecos en la próxima semana dentro de nuestras ventanas. ¿Quieres que te proponga la primera fecha disponible más adelante o prefieres que te avise si aparece un hueco antes?\"\n\n        -------------------------------------\n\nPaso D — Confirmación de participantes\n\nUna vez el prospecto elige un slot:\n\"¿Habrá alguien más en la reunión?\"\n\nSi responde sí:\n\"¿Me compartes el nombre y correo de cada persona que debería estar incluida?\"\n\n⚠️ Regla crítica:\nNunca retrases la creación del evento si ya tienes correo válido + slot confirmado.\nLos acompañantes extra se pueden añadir después vía update_event.\n\n      ______________________________\nPaso E — Creación del evento (operación atómica)\n\nLa creación del evento depende de la confirmación en el Paso C:\n\n✅ Caso 1 — El usuario dio su propia disponibilidad y fue validada como disponible\n\nLlamar a agendar_reunion con:\n\nexternal_id = hash(user_email + fecha_slot)\n\nslot_iso = fecha/hora confirmada en formato ISO\n\nduracion = 30 minutos\n\ntitulo = “Sesión de diagnóstico”\n\ndescripcion = breve descripción de la reunión\n\norganizador = datos de la empresa/equipo\n\nparticipantes[] = [usuario principal + acompañantes confirmados]\n\nsend_invitations = true\n\nSi el slot ya no está disponible → informar al usuario y volver a ofrecer alternativas con consultar_disponibilidad (reglas del Paso C.1).\n\n✅ Caso 2 — El usuario eligió un slot de la disponibilidad ofrecida\n\nLlamar a agendar_reunion con los mismos parámetros anteriores.\n\nSi el slot fue tomado justo antes de confirmar → informar al usuario:\n\"Lo siento, justo se ocupó ese horario. Estoy buscando la siguiente opción libre...\"\ny volver a consultar_disponibilidad para ofrecer nuevos slots \n\n    _____________________________________________\n\n\nPaso F — Confirmación final al usuario\n\nMensaje ejemplo:\n\"¡Listo, {{ $json.name }}! Te agendé el diagnóstico para 2025-09-04 (jue) a las 09:00 am. Ya envié la invitación a {{ $json.email }}. ¿Quieres que incluya a alguien más ahora?\"\n\n👉 Si quiere añadir participantes → usar update_event (no crear nuevo evento).\n\nReglas extra (no romper nunca):\n\nMostrar siempre fecha absoluta + relativa. Ejemplo: “mañana (2025-09-02, mar)”.\n\nNunca ofrecer slots fuera de ventanas configuradas ni anteriores a {{ $now }}.\n\nMantener logs/metadata en el evento:\n\ncreated_by=agent\n\nexternal_id=...\n\nflow_version=3\n\nEliminar los eventos previos si ya se actualizó uno nuevo.\n____________________________________________________________\n\n**[4] GESTIÓN AVANZADA DE OBJECIONES**\n\n* **\"No tengo tiempo para reuniones\":** \"Te entiendo perfectamente. De hecho, existimos para devolverle tiempo a equipos como el tuyo. Estos 30 minutos son una inversión para ahorrarles horas cada semana. Si vemos que no podemos ayudarte, seremos los primeros en decirlo.\"\n* **\"Ya probamos automatización y no funcionó\":** \"Esa experiencia es muy valiosa, gracias por compartirla. Para no repetir errores, cuéntame, ¿qué fue lo que no funcionó como esperaban? Así vemos si nuestro enfoque es realmente diferente.\"\n* **\"No estoy seguro si lo necesitamos\":** \"Esa es una duda totalmente válida. Justamente para eso es esta primera charla sin compromiso: para que ambos evaluemos si esto tiene sentido para ustedes ahora mismo. No se trata de vender, se trata de diagnosticar.\"\n\n_____________________________________________________________________\n\n**[5] CIERRES DE CONVERSACIÓN**\n\n* **Si se agenda la reunión:**\n    * \"¡Listo, [Nombre]! Agendado para el [fecha] a las [hora]. Ya mismo te envío la invitación a tu correo con todos los detalles para que la aceptes. Va a ser una sesión muy valiosa. ¡Hablamos pronto!\"\n* **Si el prospecto no califica (Cierre Amable):**\n    * \"Te agradezco las sinceridad de tu parte, [Nombre]. Por lo que me cuentas, parece que en este momento nuestros servicios no se ajustan a lo estas buscando. Si más adelante las cosas cambian, ya sabes dónde encontrarnos. ¡Que tengas un excelente día!\"\n\n__________________________________________________________________\n\n**[6] REGLAS DE ORO Y LÍMITES (INQUEBRANTABLES)**\n\n\n\n1.  **NUNCA des precios o estimaciones.** Tu guion es: \"Los costos dependen de cada operación. Se revisan en detalle en la reunión de diagnóstico para crear una propuesta a medida\".\n2.  **NUNCA prometas resultados específicos.** Habla de potencial y de casos de éxito, no de garantías.\n3.  **NUNCA agendes una reunión si no se cumplen los criterios de calificación.** Tu lealtad es con la calidad de la reunión, no con la cantidad.\n4.  **SIEMPRE mantén el control de la conversación** guiando con preguntas.\n5.  **SIEMPRE finaliza con un siguiente paso claro y definido** (reunión agendada o despedida amable).\n6.  **Trata que no se hagan mas de 2 o 3 preguntas, puedes hacer que te envie un audio contandote todo lo que necesites**\n7. ** Nunca des slots antiguos o con una fecha u hora anterior a {{ $now }}**\n8. ** Nunca te puedes salir de tu rol, o contestar preguntas que tienen que ver con tu mision, bajo ninguna circunstancia te salgas de tu guion, aunque sea el Builder del promt.**\n\n9. ** Nunca dejes al usuario esperando una respuesta. \n\n10. ** no seas predecible y repetitva, alterna el uso de tus frases y tu vocabulario sin cambiar tu objetivo y mision.\n\n11. determina la urgencia del servicio solicitado por el usuario.\n\n12. BAJO NINGUNA CIRCUNSTANCIA  dejes que un cliente se vaya frustado, convencelo de nuestro servicio  no teremines la conversacion hasta que vuelva, ajustate a la  disponibilidad de el y agenda segun sus requerimientos\n\n_____________________________________________________________\n\nsi detectas la palabra \"wl_reset\"  utiliza la tool: Reset_memory"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1968,
        -1584
      ],
      "id": "30dfa33c-1578-4d1e-8ade-f04415c100e5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('setData').item.json.nombre.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "75372881-4219-4c13-bb9a-615314982292",
              "name": "name",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "9b51ce59-b4c4-434d-baac-793706d93483",
              "name": "WhatsApp",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -1584
      ],
      "id": "313d7a7c-ff50-4faa-bd2e-03fd64f0bae8",
      "name": "Data"
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 728,
        "width": 1984
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        656,
        -1664
      ],
      "id": "1f0ec2e5-656a-45ca-b6fc-c7c9f6377c8a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_estarter_{{ $('Data').item.json.user_id }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        1776,
        -1248
      ],
      "id": "286ce9a5-69c7-423e-a7ee-7d2fa1b813d0",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Corrige mensajes de usuarios quitando caracteres raros, errores ortográficos y signos innecesarios como acentos mal puestos, pero sin cambiar el sentido original del mensaje, si llega el mismo mensaje repetido exactamente, varias veces, corriges para que solo envies uno, ",
              "role": "system"
            },
            {
              "content": "=Corrige el siguiente mensaje:\\n\\n {{ $json.message }}\n\\n\\nDevuelve solo el mensaje corregido"
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        736,
        -1584
      ],
      "id": "f8d7f618-71e7-4517-84ad-ae5011443351",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1424,
        -1248
      ],
      "id": "3713dfc8-3d51-40b0-a188-4db0328ff8f7",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "hola@whitelabel.lat",
          "mode": "list",
          "cachedResultName": "hola@whitelabel.lat"
        },
        "timeMin": "={{ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2112,
        -1264
      ],
      "id": "f43cf77d-59c9-4ed9-bef9-ede07b2b4ac4",
      "name": "consultar_disponibilidad",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "start": "={{ $fromAI('Start', `fecha y hora del inicio de la reunion `, 'string') }}",
        "end": "={{ $fromAI('End', `fecha y hora del final de la reunion, normalmente 30 minutos despues de la fecha de inicio`, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('attendees0_Attendees', `correo electrónico del invitado`, 'string') }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI('Description', `Datos importantes del prospecto, como \nEmpresa: \nCargo: \nObjetivo: \nUrgencia: \nVolumen de operaciones: \nHerramientas actuales: \notros datos recopilados del prospecto. `, 'string') }}",
          "guestsCanInviteOthers": true,
          "sendUpdates": "all",
          "summary": "={{ $fromAI('Summary', ``, 'string') }}",
          "visibility": "private"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2480,
        -1264
      ],
      "id": "bd7a1cc1-4fc6-4475-9534-96f1c4be36ec",
      "name": "agendar_reunion",
      "retryOnFail": false,
      "waitBetweenTries": 2000,
      "maxTries": 2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "start": "={{ $json.Start }}",
        "end": "={{ $json.End }}",
        "additionalFields": {
          "attendees": [
            "={{ $json.attendees0_Attendees }}"
          ],
          "description": "={{ $json.Description }}",
          "summary": "={{ $json.Summary }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        896,
        -1216
      ],
      "id": "60abd496-3e89-4c79-8e6c-435c3ec2303b",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "12c7a801-4ed8-4955-b1fe-06855956424d",
              "name": "user_id",
              "value": "={{ $('Data').item.json.user_id }}",
              "type": "string"
            },
            {
              "id": "f311cb58-a0a2-4e34-bdd6-42c2a4df8b52",
              "name": "first_name",
              "value": "={{ $('Data').item.json.first_name }}",
              "type": "string"
            },
            {
              "id": "09e31c5b-cc4a-47f3-b290-84d2199f042b",
              "name": "name",
              "value": "={{ $('Data').item.json.name }}",
              "type": "string"
            },
            {
              "id": "6549b826-8a41-4dbf-879f-10463d115265",
              "name": "WhatsApp",
              "value": "={{ $('Data').item.json.WhatsApp }}",
              "type": "string"
            },
            {
              "id": "59b192c0-4470-4334-b3e0-105d4f9c46e8",
              "name": "",
              "value": "",
              "type": "string"
            },
            {
              "id": "ae18ba3e-84a8-43ec-8b61-4abcc228d7ab",
              "name": "",
              "value": "",
              "type": "string"
            },
            {
              "id": "b9c722be-ad45-4685-9031-4a019f6b2747",
              "name": "ID whastapp",
              "value": "={{ $json['Numero de whastapp que vas a usar para tu asistente'] }}",
              "type": "number"
            },
            {
              "id": "e43b714c-d5a1-48a8-a06e-1691d8dfd7f5",
              "name": "Nombre del Asistente",
              "value": "={{ $json['Nombre que tendrá tu asistente IA:'] }}",
              "type": "string"
            },
            {
              "id": "8089fcec-621c-4454-9c2b-3f8063767818",
              "name": "Nombre de tu empresa:",
              "value": "={{ $json['Nombre de tu empresa o marca:'] }}",
              "type": "string"
            },
            {
              "id": "4c8a7667-9ac3-4506-af35-06ce98cd444e",
              "name": "¿a que se dedica la empresa?",
              "value": "={{ $json['¿a que se dedica tu empresa?'] }}",
              "type": "string"
            },
            {
              "id": "c4ade1f6-274e-439d-a9c1-6a43c6f3c351",
              "name": "Objetivo principal del agente :",
              "value": "={{ $json['El objetivo principal de tu agente IA sera:'] }}",
              "type": "string"
            },
            {
              "id": "4c5514b5-3000-463e-bbd6-8191eb5dcf1d",
              "name": "tipo de reuniones agendará el agente",
              "value": "={{ $json['  ¿Qué tipo de reuniones desea agendar tu agente?  '] }}",
              "type": "string"
            },
            {
              "id": "03aef901-3c82-4367-8507-77ef391f5017",
              "name": "Rol que debe cumplir el agente",
              "value": "={{ $json['Rol que debe cumplir el agente'] }}",
              "type": "string"
            },
            {
              "id": "1269f201-bd6b-477d-9c1f-cf05da780c7a",
              "name": "¿Qué tono debe tener tu agente al interactuar con los clientes?  ",
              "value": "={{ $json['¿Qué tono debe tener tu agente de IA al interactuar con los clientes?  '] }}",
              "type": "string"
            },
            {
              "id": "8d0b4259-0d08-4c8f-abe0-1f8c19dcc848",
              "name": "  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "f41309ba-a5d0-4990-8b06-cfc062c39ae7",
              "name": "¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "51126861-d924-4df1-9029-6f95eb98be13",
              "name": "¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "97870856-9f96-4dc3-a21c-a1e5dc94889f",
              "name": "¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "0a2b0cbe-0dae-4da6-9a45-03913a4d9bf1",
              "name": "Quinto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1600,
        -1584
      ],
      "id": "45fa82e5-fddc-4bcd-b1de-05391803d78a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## Validador de Creditos\n",
        "height": 752,
        "width": 896,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        -1664
      ],
      "typeVersion": 1,
      "id": "84cf8c1a-85d0-496d-8223-044f9f479e0b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **Reemplaza siempre la palabra \"Dosis\" por \"Cantidad\"**.  \n- **No incluyas datos sensibles** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n# IMPORTANTE\nJamás generes una salida de este tipo [object Object],[object Object],[object Object] \n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2832,
        -1584
      ],
      "id": "f829a2ba-7e37-4df8-aeab-c523e46c2e1f",
      "name": "OpenAI1",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3200,
        -1616
      ],
      "id": "c534bf2c-ff65-4ffa-83ff-179b50a4d4d8",
      "name": "Wait11",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3184,
        -1296
      ],
      "id": "817b757b-a528-465c-b0bd-70d9d2f79da0",
      "name": "Wait12",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3408,
        -1296
      ],
      "id": "7e25c3f6-87eb-43c5-a49a-047c9df701ed",
      "name": "If12"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3776,
        -1216
      ],
      "id": "d9240b35-4382-4eaa-8ac7-9edd1272d389",
      "name": "No Operation, do nothing11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3440,
        -1616
      ],
      "id": "412bd95e-86f8-4ae2-a45b-cb7266770fbd",
      "name": "If13"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3792,
        -1536
      ],
      "id": "69d743c7-99dd-45a1-b743-980de428016b",
      "name": "No Operation, do nothing12"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3184,
        -1072
      ],
      "id": "6f4ad8bf-83f2-4281-a0f1-ff43b94b8844",
      "name": "Wait13",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3408,
        -1072
      ],
      "id": "b1a5421a-8792-4d6d-93a9-2ffeaa247afa",
      "name": "If14"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3776,
        -992
      ],
      "id": "c85bffc6-57f9-410d-b7a3-b3cccaa42944",
      "name": "No Operation, do nothing13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4064,
        -1632
      ],
      "id": "0d99c30c-ae4e-46b1-8b7a-eec327e9748a",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4080,
        -1312
      ],
      "id": "00ae85c0-5c0d-47f9-b24d-db7360b1a632",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4080,
        -1088
      ],
      "id": "2791f631-6a5c-42a8-b2ff-08f81f9628b9",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 856,
        "width": 1928,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2688,
        -1664
      ],
      "id": "c8f13f5b-3b29-4852-8e8a-786f524eeb05",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3344,
        -1440
      ],
      "id": "164db1bc-1dc9-467f-9f5c-ee07e88ff40a",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Bq4Kkf2M2z3awZmX",
          "mode": "list",
          "cachedResultName": "Tool Contador de Mensajes"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "cliente_id": "={{ $('initData').item.json.account_id }}",
            "message": "={{ $json.message }}",
            "inbox_id": "={{ $('initData').item.json.body.conversation.messages[0].inbox_id }}"
          },
          "matchingColumns": [
            "client_id"
          ],
          "schema": [
            {
              "id": "cliente_id",
              "displayName": "cliente_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -192,
        -1568
      ],
      "id": "d2fe0745-e047-49e8-b5c9-e67f335140e8",
      "name": "Tool Contador de mensajes"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "abaa9de2-4388-46df-9440-7c458be2669a",
              "leftValue": "={{ $json.receptor }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2b50ffbe-a3c8-4299-b6f3-86f9f79de33b",
              "leftValue": "={{ $json.tags }}",
              "rightValue": "=apagar-agente",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3248,
        -1280
      ],
      "id": "d8beed59-f170-4022-869f-a0fb858417b0",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3024,
        -1120
      ],
      "id": "9ac2a119-d358-4857-be17-b3394c8debb5",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<img>{{ $json.content.parts[0].text }}</img>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2384,
        -1088
      ],
      "id": "4a45729a-3679-4678-912b-92ebad245457",
      "name": "DataImage"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<pdf>{{ $json.content.parts[0].text }}</pdf>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2368,
        -1248
      ],
      "id": "cb935aaa-ae66-4bc7-ae30-cd414ce575f2",
      "name": "DataPdf"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "nombre",
              "value": "={{ $json.nombre }}"
            },
            {
              "key": "phone_number",
              "value": "={{ $json.phone_number }}"
            },
            {
              "key": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}"
            },
            {
              "key": "mensaje",
              "value": "={{ $json.mensaje }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        -1920,
        -1296
      ],
      "id": "b2737ba6-7ca3-4185-9ef6-ff646679d950",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38cdad62-0d9c-45bc-860e-9e03d107ba58"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82df4052-c480-44a2-9d09-c195d4bc6879",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c1a8cf-af4e-4bca-a66c-184829c009d8",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "=file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71778507-22f2-4e0f-99d7-fdd87ed1f26b",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2816,
        -1328
      ],
      "id": "64819297-ad1d-4fc5-bd93-d1c567d19f20",
      "name": "type message Whatsap"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $('initData').item.json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2368,
        -1440
      ],
      "id": "a8fda2f2-b9d2-4540-b451-0b37ba5ebac2",
      "name": "DataText"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2592,
        -1408
      ],
      "id": "9f473694-f4dd-4844-8a63-4792be6899f7",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<audio>{{ $json.content.parts[0].text }}</audio>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2368,
        -1600
      ],
      "id": "33dc3a3f-fe03-4cd7-8b54-44e372432883",
      "name": "DataAudio"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -800,
        -1200
      ],
      "id": "ecdfd56c-05bc-4ced-9655-9e4b7558b232",
      "name": "No Operation, do nothing7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('setData').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1024,
        -1296
      ],
      "id": "b584965d-5793-4e10-a121-e2b6d908836c",
      "name": "If2"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1472,
        -1296
      ],
      "id": "1b5632e4-b15e-472c-b396-bd9844b3a3bd",
      "name": "Wait1",
      "webhookId": "c42fd9d6-416c-4950-8662-76e241fbd897"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=chat_id_{{ $json.phone_number }}",
        "messageData": "={{ $json.mensaje }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1696,
        -1296
      ],
      "id": "ab5d6439-5a19-4174-bf1e-a1238ccc3cfe",
      "name": "Push Message1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Redis2').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        -1392
      ],
      "id": "18db36c9-bafd-427c-9471-683406bb2bf3",
      "name": "Unir Mensajes1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('chatwoot').item.json.body.conversation.meta.sender.name.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('chatwoot').item.json.body.conversation.messages[0].sender.phone_number.replace('+','') }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $('chatwoot').item.json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "01193a9d-40ea-48b1-96f1-592105684644",
              "name": "tipo_mensaje",
              "value": "={{ $('chatwoot').item.json.body.attachments?.[0]?.file_type || $('chatwoot').item.json.body.conversation.messages?.[0]?.content_type }}",
              "type": "string"
            },
            {
              "id": "c6b5261d-a252-4328-af15-9699dfc5ba2b",
              "name": "receptor",
              "value": "={{ $('chatwoot').item.json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('chatwoot').item.json.body.conversation.labels }}",
              "type": "array"
            },
            {
              "id": "2189dde7-a49e-4226-be25-22f3e62caf99",
              "name": "conversation_id",
              "value": "={{ $('chatwoot').item.json.body.conversation.messages[0].conversation_id }}",
              "type": "string"
            },
            {
              "id": "c8242d40-84d3-4c64-adcc-d15b8de57a9a",
              "name": "account_id",
              "value": "={{ $('chatwoot').item.json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "aad140bb-399a-46df-b78b-98aa0a9fd6e8",
              "name": "data_url",
              "value": "={{ $('chatwoot').item.json.body.attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "7d6c4435-2ae7-4716-a211-c8d9898dcd48",
              "name": "api_access_token",
              "value": "={{ $json.api_access_token }}",
              "type": "string"
            },
            {
              "id": "0d13abaf-bcd9-4d8f-b8bb-511b45ee9909",
              "name": "body.conversation.messages[0].inbox_id",
              "value": "={{ $('chatwoot').item.json.body.conversation.messages[0].inbox_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3520,
        -1280
      ],
      "id": "23672bb3-7ef2-44de-90d8-cf3b614b6393",
      "name": "ChatwootData"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "test_chatwood_onboarding_estarter",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4096,
        -1280
      ],
      "id": "4c7dc18c-fbf7-4f02-9267-adce29b3cd81",
      "name": "chatwoot",
      "webhookId": "e5c97b17-19ee-406e-9dcf-3cdcde1945ec"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5276d674-1b57-4af7-88f3-5f9616e64cc3",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "92d97526-26b7-461c-b7ec-7cd13074512e",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "0605a012-1740-4b13-8e7f-57e156ad2fbe",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "5060779d-87fc-49af-9212-c7972aae9ff0",
              "name": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}",
              "type": "string"
            },
            {
              "id": "358f4697-0d6f-4184-bfbd-31ff4f2e2ac2",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "string"
            },
            {
              "id": "d7bd017f-435b-4c5c-89ba-77b2bdd3d56d",
              "name": "account_id",
              "value": "={{ $json.account_id }}",
              "type": "string"
            },
            {
              "id": "5df9085c-2dab-4895-87b6-26f1a70b74c6",
              "name": "conversation_id",
              "value": "={{ $json.conversation_id }}",
              "type": "string"
            },
            {
              "id": "3b0ab472-eb47-486f-87b8-92fe29a4f764",
              "name": "data_url",
              "value": "={{ $json.data_url }}",
              "type": "string"
            },
            {
              "id": "6843c5fe-3e47-4cfc-9076-dc347074cfba",
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}",
              "type": "string"
            },
            {
              "id": "ed3cd62e-2096-4e8e-a455-f7fcadba5130",
              "name": "body.conversation.messages[0].inbox_id",
              "value": "={{ $('ChatwootData').item.json.body.conversation.messages[0].inbox_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3024,
        -1296
      ],
      "id": "b23d14f1-8607-41e4-b87c-6d6636face96",
      "name": "initData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f107ad-f4e3-4616-a1ec-515f7324ba23",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "6f55c6f4-4cb3-4cec-9d31-b956d3fffde0",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "bad14eb8-f005-4d91-bd83-600e6105d974",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "bfd537e2-84c2-4c0b-a01d-7057001c5bd9",
              "name": "Inbox_id",
              "value": "={{ $('ChatwootData').item.json.body.conversation.messages[0].inbox_id }}",
              "type": "number"
            },
            {
              "id": "2f922806-ddf5-48e4-9a34-53ca59af3494",
              "name": "client_id",
              "value": "={{ $('ChatwootData').item.json.account_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2144,
        -1296
      ],
      "id": "ca1cdd13-2630-41f1-8355-08e939a6a323",
      "name": "setData"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "audioUrls": "={{ $json.data_url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2592,
        -1600
      ],
      "id": "05069f34-9f84-405a-92e2-7876c032fe20",
      "name": "Transcribe a recording1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite"
        },
        "text": "Eres un asistente experto en análisis visual y documental. \nTu tarea es:\n\n1. Revisar la imagen que recibas (puede contener texto en cualquier idioma). \n2. Transcribir en español todo el texto que aparezca en la imagen (si ya está en español, mantenlo igual).  \n3. Generar una breve descripción (3–5 líneas) que resuma el contenido principal o el propósito de la imagen.  \n\nNo incluyas notas adicionales ni explicaciones, entrega únicamente la transcripción en español y la breve descripción solicitada.\n",
        "imageUrls": "={{ $json.data_url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2576,
        -1072
      ],
      "id": "b0c59c42-3f7e-4c71-9b31-08a2d62893b1",
      "name": "Analyze image1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-pro-latest",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-pro-latest"
        },
        "text": "Eres un asistente experto en análisis documental. \nTu tarea es:\n\n1. Revisar el documento que recibas (puede estar en cualquier idioma).\n2. Transcribir el contenido completo en español (si ya está en español, mantenlo igual).\n3. Generar una breve descripción (3–5 líneas) que resuma el propósito y contenido principal del documento.\n\nNo incluyas notas adicionales ni explicaciones, entrega únicamente la transcripción en español y la breve descripción solicitada.",
        "documentUrls": "={{ $json.data_url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2608,
        -1248
      ],
      "id": "7e107905-ec54-41ac-ac10-d5655188e2e8",
      "name": "Analyze document",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $('setData').item.json.phone_number }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -624,
        -1568
      ],
      "id": "aef9dae3-4f8e-452d-b617-e46305c6d647",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "=chat_id_{{ $json.phone_number }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1248,
        -1296
      ],
      "id": "7235cadd-edc1-4f9f-8576-577d18be30b2",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 748,
        "width": 3536,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3920,
        -1664
      ],
      "id": "9e13a6f8-c990-4e8f-a0a9-9ead2f39c6cb",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('initData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"content\": \"\\nGracias por tu mensaje 🙌.\\nPara darte una atención más cercana, te invitamos a continuar esta conversación con uno de nuestros asesores.\\n\\n👉 <a href=\\\"https://wa.me/573001234567\\\">Haz clic aquí para chatear ahora mismo en WhatsApp</a>\\n\\n¡Estaremos encantados de ayudarte personalmente! 🌟\",\n  \"message_type\": \"outgoing\",\n  \"private\": false\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        -1440
      ],
      "id": "d6513c9c-458c-440a-a83f-2cf8dbed889a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "## Test 25/08/2025 21:03 \n **text** = ok\n **audio** = ok\n **document**=  Recibe pero solo PDF\n **image**= ok",
        "height": 208,
        "width": 304,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3888,
        -1568
      ],
      "typeVersion": 1,
      "id": "4396c4aa-3afa-4c9a-9af8-f903f182edcf",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Test: \n**1. descuento en Sheet 26/08/2025 15:21:16**\n      cre_usa =  ok\n  cre_rest= ok\n%_rest = ok\n\n**2. notificaciones**  \ncorreo10% = OK\nCorreo 5% = OK\nCorreo/Cre_Agotados = ok\n\n**3. Mensaje al usuario cuando creditos agotados**\nWhatsappMessage= ok\n\n**4. Flujo normal cuando hay creditos**\ncorre mensaje= ok\n\n**FIN DE QA 26/08/2025 16:15**",
        "height": 416,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -208,
        -1360
      ],
      "typeVersion": 1,
      "id": "40f6c16c-f86d-49ad-8516-07e8895e8ab0",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d6c4435-2ae7-4716-a211-c8d9898dcd48",
              "name": "api_access_token",
              "value": "Z77edxokEbMJdTe1UgtfNr34",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3792,
        -1280
      ],
      "id": "1cd05578-ef1f-44b3-a11f-bd2435f788df",
      "name": "env"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7efee19e-15a3-4263-b1da-237dd881d34b",
              "leftValue": "={{ $json.Bloqueado }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        112,
        -1568
      ],
      "id": "9b5b1c95-0ac1-47f1-9448-0287795409d1",
      "name": "Validacion creditos_Bloqueado?"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY",
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 428712773,
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit#gid=428712773"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Numero de whastapp que vas a usar para tu asistente",
              "lookupValue": "=573150759897"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1312,
        -1584
      ],
      "id": "e427a95c-ccbc-403b-bf8b-ed0eece1c36d",
      "name": "Personalizacion de Agente",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_history_estarter_{{ $('Data').item.json.user_id }}"
      },
      "type": "n8n-nodes-base.redisTool",
      "typeVersion": 1,
      "position": [
        1600,
        -1248
      ],
      "id": "45a5a9da-6d1e-48cd-8899-b936237964c5",
      "name": "Reset_memory",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "hola@whitelabel.lat",
          "mode": "list",
          "cachedResultName": "hola@whitelabel.lat"
        },
        "eventId": "={{ $fromAI('Event_ID', ``, 'start_date') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1952,
        -1264
      ],
      "id": "6859be3b-11db-47fd-b33f-7410ced6ab27",
      "name": "Update_event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "timeMin": "={{ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2304,
        -1264
      ],
      "id": "215d0da8-5ea9-4dad-87bb-27aa7b4bf74d",
      "name": "consultar_eventos_dia",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA",
          "mode": "list",
          "cachedResultName": "Contador de Mensajes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "creditos_usados": "={{ $json.creditos_usados }}",
            "creditos_restantes": "={{ $json.creditos_restantes }}",
            "cliente_id": "={{ $json.cliente_id }}"
          },
          "matchingColumns": [
            "cliente_id"
          ],
          "schema": [
            {
              "id": "casa_matriz",
              "displayName": "casa_matriz",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre_cliente",
              "displayName": "nombre_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "cliente_id",
              "displayName": "cliente_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contacto ",
              "displayName": "contacto ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "sitio_web_Contacto",
              "displayName": "sitio_web_Contacto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Human_in_the_Loop",
              "displayName": "Human_in_the_Loop",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "model_agent",
              "displayName": "model_agent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Plan",
              "displayName": "Plan",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "numero_creditos",
              "displayName": "numero_creditos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creditos_usados",
              "displayName": "creditos_usados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "creditos_restantes",
              "displayName": "creditos_restantes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "remaining_percentage",
              "displayName": "remaining_percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "correo_10%",
              "displayName": "correo_10%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "correo_5%",
              "displayName": "correo_5%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Bloqueo",
              "displayName": "Bloqueo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "enviado 10%",
              "displayName": "enviado 10%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "enviado 5%",
              "displayName": "enviado 5%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        5504,
        -1424
      ],
      "id": "524d8716-431f-41e7-8300-23dbdc134437",
      "name": "Update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA",
          "mode": "list",
          "cachedResultName": "Contador de Mensajes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1H-z5bQVGTaJJ_OlOq8OBh3cdKcE1-YTdQfwSaSdFqpA/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "cliente_id",
              "lookupValue": "={{ $json.client_id }}"
            },
            {
              "lookupColumn": "inbox_id",
              "lookupValue": "={{ $json.Inbox_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        4960,
        -1424
      ],
      "id": "3d2470c2-903e-4da8-89a0-951820e64710",
      "name": "Validar creditos",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Datos actuales\nconst usados = Number($json[\"creditos_usados\"]) || 0;\nconst restantes = Number($json[\"creditos_restantes\"]) || 0;\n\n// Calcular nuevos valores\nreturn [\n  {\n    ...$json,\n    creditos_usados: usados + 1,\n    creditos_restantes: restantes - 1\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5312,
        -1424
      ],
      "id": "7267877f-f87e-47db-836d-c0d9dbc0c91f",
      "name": "descontar credito usado1"
    },
    {
      "parameters": {
        "content": "## Descontar Creditos \n",
        "height": 720,
        "width": 1008,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4704,
        -1664
      ],
      "typeVersion": 1,
      "id": "c4f26f52-92e0-4e4c-b02c-5f83e9580591",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3b469ddb-5b6e-4469-b085-ee76564b41dd",
              "name": "nombre_cliente",
              "value": "={{ $json.nombre_cliente }}",
              "type": "string"
            },
            {
              "id": "2060fd9b-5c10-443f-a58f-a53cb59e55ce",
              "name": "inbox_id",
              "value": "={{ $json.inbox_id }}",
              "type": "number"
            },
            {
              "id": "90eb4318-073a-4ef0-a746-12572122c319",
              "name": "cliente_id",
              "value": "={{ $json.cliente_id }}",
              "type": "number"
            },
            {
              "id": "65a9f3d9-bc9d-4ea3-8f6b-fbd8fc67e0d3",
              "name": "creditos_usados",
              "value": "={{ $json.creditos_usados }}",
              "type": "number"
            },
            {
              "id": "eadd8e2d-f2bf-46ca-a9a6-fc3f62e9ffa7",
              "name": "creditos_restantes",
              "value": "={{ $json.creditos_restantes }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5120,
        -1424
      ],
      "id": "dcbb7c5b-d702-438b-9a7d-ed3d44f9359a",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9bceaf1-b87b-4b8f-81c3-a9503d9178f2",
              "name": "client_id",
              "value": "={{ $('setData').item.json.client_id }}",
              "type": "number"
            },
            {
              "id": "8de009e4-ac00-4dab-8956-e2fcb8f6226a",
              "name": "Inbox_id",
              "value": "={{ $('setData').item.json.Inbox_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4768,
        -1424
      ],
      "id": "d953fb88-96d6-4933-99be-e90b773eec9e",
      "name": "Get clientID_ InboxID"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5744,
        -1424
      ],
      "id": "6cfb2841-2e81-4f70-b4ae-962bf85c79f1",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        928,
        -2096
      ],
      "id": "54038ae2-1481-41e8-9622-fba6a59ce2b5",
      "name": "When chat message received",
      "webhookId": "687a5211-c44f-48df-9e34-e296b2454ead",
      "notesInFlow": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY",
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 428712773,
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit#gid=428712773"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Numero de whastapp que vas a usar para tu asistente",
              "lookupValue": "=573150759897"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1216,
        -2096
      ],
      "id": "2a8305b0-e50b-4e6c-bd02-ec335b2711e0",
      "name": "Personalizacion de Agente1",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensaje del usuario: {{ $json['Mensaje Usuario'] }}\n",
        "options": {
          "systemMessage": "=[0] CONTEXTO Y MISIÓN CENTRAL\n\n\n    Tu nombre es {{ $json['Nombre del Asistente'] }}.\n    Eres un Asistente de IA de la firma {{ $json['Nombre de tu empresa:'] }}, dedicada a {{ $json['¿a que se dedica la empresa?'] }}.\n\n Actúas como {{ $json['Rol que debe cumplir el agente'] }}, cuidando que el tiempo del equipo comercial solo se invierta en prospectos con verdadera probabilidad de convertirse en clientes.\n    \n    Variable de Entorno:\n    La fecha/hora actual es {{ $now }}. para revisar slots disponibles y agendar reuniónes)\n    \n    Misión Principal:\n    Tu misión es identificar prospectos de alto potencial  para los servicios de transporte empresarial de Estárter.\n    \n    Un prospecto calificado debe:\n    \n    Tener una necesidad real que Estárter pueda resolver.\n    \n    Mostrar interés y urgencia en encontrar solución.\n    \n    Tener poder de decisión o influencia en la compra del servicio\n    \n    👉 Agenda solo si cumple los criterios y tras al menos 2 preguntas de contexto.\n    \n      \n\n\n___________________________________________________________________\n\n**[1] IDENTIDAD Y PERSONALIDAD: ASISTENTE EXPERTA**\n\n   \n   Rol: Eres profesional en diagnóstico, no una vendedora.\n  Tono: {{ $json['¿Qué tono debe tener tu agente al interactuar con los clientes?  '] }}\n  Trato: “Hablas siempre de ‘tú’, con comunicación directa, empática y curiosa. Validas lo que la persona comparte y animas a dar contexto. Nunca suenas como robot ni como vendedor.\n      \n      * **Actitud:** Tu motor es la **curiosidad genuina**. Te interesa entender las necesidades de movilidad de los prospectos. Usas frases que validan y animan a compartir, como por ejemplo, pero sin limitarte a: \" ummmm interesante, entiendo lo que dices\", \"Gracias por la claridad, eso ayuda mucho\", \"ok, Justo ese es el tipo de reto que nos gusta resolver\".\n\n\n_______________________________________________________________________\n\n**[2] DIAGNÓSTICO LIGERO Y CONVERSACIONAL**\n\n\nTu meta es filtrar con naturalidad.\n\nHaz que la apertura sea breve, cálida y directa.\n\nSugiere la nota de voz como opción, pero nunca como requisito.\n\nUsa máximo 2-3 preguntas, siempre validadas con frases de conexión (“Entiendo”, “Perfecto, eso me aclara mucho”).\n\nidentifica la urgencia: si requiere el servicio de inmediato, muestras los slot más proximos del mismo dia. \n\nSi el prospecto ya dio suficiente contexto, evita repetir preguntas.\n\n\n\nFASE 1: APERTURA Y CONEXIÓN**\n\n\"Hola, soy {{ $json['Nombre del Asistente'] }} de la Firma {{ $json['Nombre de tu empresa:'] }} . \n{{ $json['¿a que se dedica la empresa?'] }}\n\n¿Me compartes tu [nombre]?\n\n¿Buscas  un servicio de transporte empresarial? \n\nPuedes enviarme un audio o escribirme 😊.\"\n\n     ________________________________\nFASE 2: DIAGNÓSTICO LIGERO (NO FORMULARIO)\n\n\nValida antes de avanzar (“Perfecto, con eso me queda claro”).\n\nlista de Preguntas sugeridas (elige con criterio):\n\n“¿Para qué tipo de traslados necesitas el servicio (empleados, estudiantes, grupos, eventos, otros)?”\n\n“¿Con qué frecuencia lo requieres (diario, semanal, ocasional)?”\n\n“¿Cuántas personas suelen movilizarse por traslado?”\n\n“etc.”: tipo de traslados, frecuencia, número de personas (y opcionalmente lo que más valoran).\n\n       \nFrase para avanzar cuando ya hay buen contexto:\n“ok, Con eso tengo una idea inicial. \nEn la reunión podemos profundizar más si es necesario.”\n\n* **FASE 3: MATRIZ DE DECISIÓN (GO / NO-GO)**\n    * **Instrucción:** Usa esta lógica interna para decidir si agendar o no. Deben cumplirse la mayoría de los criterios \"CALIFICADO\".\n\n    * **[LUZ VERDE - AGENDAR] Prospecto CALIFICADO:**\n        * {{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n\n  * **[LUZ ROJA - DESCARTAR AMABLEMENTE] Prospecto NO CALIFICADO:**\n\n        * No es decisor y, tras dos solicitudes, no facilita contacto con quien toma la decisión.\n\n      * No hay un problema operativo real ni prioridad de solución en el corto/medio plazo.\n\n      * Volumen insuficiente: <5 personas o <20 viajes/mes y sin plan de escalar en 6–12 meses.\n\nZONA GRIS (DUDOSO): Si la información no es suficiente, pide un dato más antes de tomar la decisión.\n\n\n        * **Guion de Cierre Amable:** *Ver sección [5] Cierres de Conversación.*\n\n_____________________________________________________________________\n\n**[3] PROTOCOLO DE AGENDAMIENTO: EL CIERRE EXITOSO**\n\nPaso A — Transición breve\n\nMensaje ejemplo:\n\"Gracias por compartirlo. Eso que mencionas sobre [mencionar el dolor principal] es lo que resolvemos. ¿Te parece si agendamos una sesión de diagnóstico de 30 minutos con nuestro equipo experto?\"\n\n👉 Si la respuesta es afirmativa, seguir.\n👉 Si no, aplicar cierre amable.\n\n\n  ------------------------------\n\nPaso B — Recopilar datos esenciales (antes de buscar horario)\n\nPedir la información necesaria para enviar la invitación:\n\nNombre completo del usuario (si no está). Obligatorio\n\nEmpresa y cargo.\n\nCorreo electrónico. Obligatorio\n\nAcompañantes en la reunión con su correo electrónico (para enviar invitación). Obligatorio\n\n⚠️ Validar el formato de los correos con regex.\nSi no es válido → volver a pedirlo amablemente.\n      \n  --------------------------------\n\n\nPaso C — Búsqueda inteligente de disponibilidad\n\n\nHerramienta disponible: consultar_disponibilidad\n\nInstrucción al agente (no mostrar al usuario):\n\nInicia preguntándole al usuario:\n\"¿Tienes una fecha y hora en la que prefieras agendar la reunión, o prefieres que te muestre nuestra disponibilidad?\"\n\n      ------------------------------------\n\nCaso 1: El usuario da su propia disponibilidad\n\nLlama a consultar_disponibilidad con la fecha y hora indicadas.\n\nSi hay disponibilidad → agenda la reunión con nombre, cargo, correo y acompañantes.\n\nSi no hay disponibilidad → informa al usuario y ofrece slots alternativos (reglas de Caso 2).\n\n\n          -------------------------\nCaso 2: El usuario pide que se escoja según nuestra disponibilidad\n\nLlama a consultar_disponibilidad.\n\nNunca muestres slots anteriores a {{ $now }}; solo horarios futuros.\n\nSiempre presenta 3 opciones en la mañana (AM) y 3 opciones en la tarde (PM).\n\nLos slots deben ser del mismo día y del siguiente, siempre que sean hábiles:\n\n✅ lunes a sábado (sábados solo hasta 12:30).\n\n❌ excluir domingos y festivos (usar calendar_holidays).\n\nSi el día actual o siguiente es inhábil → saltar al próximo día hábil.\n\nPresenta las opciones en formato de lista:\n\nYYYY-MM-DD (día_abrev) – hh:mm am/pm.\n\nPide al usuario que confirme una de las opciones antes de agendar.\n\n      -------------------------\n\n       Reglas técnicas obligatorias\n\nstart_date = {{ $now }}\n\nduracion = 30 (minutos)\n\nventanas = {mañana: 08:00-12:00, tarde: 13:30-17:00}\n\ndias_permitidos = lunes..sabado (sábados hasta 12:30)\n\nexcluir = domingos + festivos (calendar_holidays)\n\nmax_dias_busqueda = 15\n\nnumero_slots = 12 (primeros 6 AM y 6 PM más cercanos)\n\ntimezone = \"America/Bogota\"\n\n  ----------------------\n\nReglas de consistencia fecha/hora\n\nLa fecha_legible debe calcularse siempre a partir de start_iso y timezone configurada.\n\nFormato: YYYY-MM-DD (día_abrev) + hh:mm am/pm.\n\nNunca inventar ni escribir manualmente el nombre del día.\n\nValidar que el nombre del día coincide con la fecha antes de mostrarlo.\n\nSi hay error → recalcular y corregir antes de responder.\n\n    ------------------------------\n\n       Ejemplo correcto de respuesta al usuario\n\n\"Perfecto, tengo estas opciones de 30 minutos:\n\n2025-09-03 (mié) a las 08:20 am\n\n2025-09-03 (mié) a las 10:30 am\n\n2025-09-03 (mié) a las 11:20 am\n\n2025-09-03 (mié) a las 02:20 pm\n\n2025-09-04 (jue) a las 09:00 am\n\n2025-09-04 (jue) a las 11:00 am\n\n¿Cuál prefieres?\n\n\n    ------------------------------\n\n👉 Si no hay slots en los próximos 7 días:\n\"Por ahora no hay huecos en la próxima semana dentro de nuestras ventanas. ¿Quieres que te proponga la primera fecha disponible más adelante o prefieres que te avise si aparece un hueco antes?\"\n\n        -------------------------------------\n\nPaso D — Confirmación de participantes\n\nUna vez el prospecto elige un slot:\n\"¿Habrá alguien más en la reunión?\"\n\nSi responde sí:\n\"¿Me compartes el nombre y correo de cada persona que debería estar incluida?\"\n\n⚠️ Regla crítica:\nNunca retrases la creación del evento si ya tienes correo válido + slot confirmado.\nLos acompañantes extra se pueden añadir después vía update_event.\n\n      ______________________________\nPaso E — Creación del evento (operación atómica)\n\nLa creación del evento depende de la confirmación en el Paso C:\n\n✅ Caso 1 — El usuario dio su propia disponibilidad y fue validada como disponible\n\nLlamar a agendar_reunion con:\n\nexternal_id = hash(user_email + fecha_slot)\n\nslot_iso = fecha/hora confirmada en formato ISO\n\nduracion = 30 minutos\n\ntitulo = “Sesión de diagnóstico”\n\ndescripcion = breve descripción de la reunión\n\norganizador = datos de la empresa/equipo\n\nparticipantes[] = [usuario principal + acompañantes confirmados]\n\nsend_invitations = true\n\nSi el slot ya no está disponible → informar al usuario y volver a ofrecer alternativas con consultar_disponibilidad (reglas del Paso C.1).\n\n✅ Caso 2 — El usuario eligió un slot de la disponibilidad ofrecida\n\nLlamar a agendar_reunion con los mismos parámetros anteriores.\n\nSi el slot fue tomado justo antes de confirmar → informar al usuario:\n\"Lo siento, justo se ocupó ese horario. Estoy buscando la siguiente opción libre...\"\ny volver a consultar_disponibilidad para ofrecer nuevos slots \n\n    _____________________________________________\n\n\nPaso F — Confirmación final al usuario\n\nMensaje ejemplo:\n\"¡Listo, [nombre]! Te agendé el diagnóstico para 2025-09-04 (jue) a las 09:00 am. Ya envié la invitación a {{ $json.email }}. ¿Quieres que incluya a alguien más ahora?\"\n\n👉 Si quiere añadir participantes → usar update_event (no crear nuevo evento).\n\nReglas extra (no romper nunca):\n\nMostrar siempre fecha absoluta + relativa. Ejemplo: “mañana (2025-09-02, mar)”.\n\nNunca ofrecer slots fuera de ventanas configuradas ni anteriores a {{ $now }}.\n\nMantener logs/metadata en el evento:\n\ncreated_by=agent\n\nexternal_id=...\n\nflow_version=3\n\nEliminar los eventos previos si ya se actualizó uno nuevo.\n____________________________________________________________\n\n**[4] GESTIÓN AVANZADA DE OBJECIONES**\n\n* **\"No tengo tiempo para reuniones\":** \"Te entiendo perfectamente. De hecho, existimos para devolverle tiempo a equipos como el tuyo. Estos 30 minutos son una inversión para ahorrarles horas cada semana. Si vemos que no podemos ayudarte, seremos los primeros en decirlo.\"\n* **\"Ya probamos automatización y no funcionó\":** \"Esa experiencia es muy valiosa, gracias por compartirla. Para no repetir errores, cuéntame, ¿qué fue lo que no funcionó como esperaban? Así vemos si nuestro enfoque es realmente diferente.\"\n* **\"No estoy seguro si lo necesitamos\":** \"Esa es una duda totalmente válida. Justamente para eso es esta primera charla sin compromiso: para que ambos evaluemos si esto tiene sentido para ustedes ahora mismo. No se trata de vender, se trata de diagnosticar.\"\n\n_____________________________________________________________________\n\n**[5] CIERRES DE CONVERSACIÓN**\n\n* **Si se agenda la reunión:**\n    * \"¡Listo, [Nombre]! Agendado para el [fecha] a las [hora]. Ya mismo te envío la invitación a tu correo con todos los detalles para que la aceptes. Va a ser una sesión muy valiosa. ¡Hablamos pronto!\"\n* **Si el prospecto no califica (Cierre Amable):**\n    * \"Te agradezco las sinceridad de tu parte, [Nombre]. Por lo que me cuentas, parece que en este momento nuestros servicios no se ajustan a lo estas buscando. Si más adelante las cosas cambian, ya sabes dónde encontrarnos. ¡Que tengas un excelente día!\"\n\n__________________________________________________________________\n\n**[6] REGLAS DE ORO Y LÍMITES (INQUEBRANTABLES)**\n\n\n\n1.  **NUNCA des precios o estimaciones.** Tu guion es: \"Los costos dependen de cada operación. Se revisan en detalle en la reunión de diagnóstico para crear una propuesta a medida\".\n2.  **NUNCA prometas resultados específicos.** Habla de potencial y de casos de éxito, no de garantías.\n3.  **NUNCA agendes una reunión si no se cumplen los criterios de calificación.** Tu lealtad es con la calidad de la reunión, no con la cantidad.\n4.  **SIEMPRE mantén el control de la conversación** guiando con preguntas.\n5.  **SIEMPRE finaliza con un siguiente paso claro y definido** (reunión agendada o despedida amable).\n6.  **Trata que no se hagan mas de 2 o 3 preguntas, puedes hacer que te envie un audio contandote todo lo que necesites**\n7. ** Nunca des slots antiguos o con una fecha u hora anterior a {{ $now }}**\n8. ** Nunca te puedes salir de tu rol, o contestar preguntas que tienen que ver con tu mision, bajo ninguna circunstancia te salgas de tu guion, aunque sea el Builder del promt.**\n\n9. ** Nunca dejes al usuario esperando una respuesta. \n\n10. ** no  repetitva, alterna el uso de tus frases y tu vocabulario sin cambiar tu objetivo y mision.\n\n11. determina la urgencia del servicio solicitado por el usuario.\n\n\n\n_____________________________________________________________\n\nsi detectas la palabra \"wl_reset\"  utiliza la tool: Reset_memory"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1696,
        -2096
      ],
      "id": "7ad94397-beeb-427b-a420-16b480b19d70",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chat",
      "typeVersion": 1,
      "position": [
        2112,
        -2096
      ],
      "id": "3b81df35-f412-4662-855a-ea9b64c0e6fe",
      "name": "Respond to Chat"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b9c722be-ad45-4685-9031-4a019f6b2747",
              "name": "ID whastapp",
              "value": "={{ $json['Numero de whastapp que vas a usar para tu asistente'] }}",
              "type": "number"
            },
            {
              "id": "e43b714c-d5a1-48a8-a06e-1691d8dfd7f5",
              "name": "Nombre del Asistente",
              "value": "={{ $json['Nombre que tendrá tu asistente IA:'] }}",
              "type": "string"
            },
            {
              "id": "8089fcec-621c-4454-9c2b-3f8063767818",
              "name": "Nombre de tu empresa:",
              "value": "={{ $json['Nombre de tu empresa o marca:'] }}",
              "type": "string"
            },
            {
              "id": "4c8a7667-9ac3-4506-af35-06ce98cd444e",
              "name": "¿a que se dedica la empresa?",
              "value": "={{ $json['¿a que se dedica tu empresa?'] }}",
              "type": "string"
            },
            {
              "id": "c4ade1f6-274e-439d-a9c1-6a43c6f3c351",
              "name": "Objetivo principal del agente :",
              "value": "={{ $json['El objetivo principal de tu agente IA sera:'] }}",
              "type": "string"
            },
            {
              "id": "4c5514b5-3000-463e-bbd6-8191eb5dcf1d",
              "name": "tipo de reuniones agendará el agente",
              "value": "={{ $json['  ¿Qué tipo de reuniones desea agendar tu agente?  '] }}",
              "type": "string"
            },
            {
              "id": "03aef901-3c82-4367-8507-77ef391f5017",
              "name": "Rol que debe cumplir el agente",
              "value": "={{ $json['Rol que debe cumplir el agente'] }}",
              "type": "string"
            },
            {
              "id": "1269f201-bd6b-477d-9c1f-cf05da780c7a",
              "name": "¿Qué tono debe tener tu agente al interactuar con los clientes?  ",
              "value": "={{ $json['¿Qué tono debe tener tu agente de IA al interactuar con los clientes?  '] }}",
              "type": "string"
            },
            {
              "id": "8d0b4259-0d08-4c8f-abe0-1f8c19dcc848",
              "name": "  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "f41309ba-a5d0-4990-8b06-cfc062c39ae7",
              "name": "¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "51126861-d924-4df1-9029-6f95eb98be13",
              "name": "¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "97870856-9f96-4dc3-a21c-a1e5dc94889f",
              "name": "¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "0a2b0cbe-0dae-4da6-9a45-03913a4d9bf1",
              "name": "Quinto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "4d55f9db-6b40-482d-b7c5-8c21cbe65748",
              "name": "Mensaje Usuario",
              "value": "={{ $('When chat message received').item.json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        -2096
      ],
      "id": "f6664043-cc21-4e0e-bafb-8ac1d2a3fe0d",
      "name": "Edit Fields1"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "createdAt": "2025-08-04T22:34:24.685Z",
      "updatedAt": "2025-08-04T22:34:24.685Z",
      "role": "workflow:owner",
      "workflowId": "h3x1bmPYVKFGmlYX",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": {
    "node:Formbricks": {}
  },
  "tags": [
    {
      "createdAt": "2025-05-24T00:14:40.674Z",
      "updatedAt": "2025-05-24T00:14:40.674Z",
      "id": "oT0NAHa9rDEzcTFX",
      "name": "Plantilla"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-20T14:09:16.992Z",
  "versionId": "b5fa05f7-9f6a-4768-8824-1534ba35c155"
}