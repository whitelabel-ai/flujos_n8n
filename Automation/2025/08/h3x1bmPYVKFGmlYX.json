{
  "active": false,
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "consultar_disponibilidad": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "consultar_eventos_dia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "agendar_reunion": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "ChatwootData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion creditos": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download media2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "DataImage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataImage": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download media3": {
      "main": [
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "DataPdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataPdf": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Push Message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type message Whatsap": {
      "main": [
        [
          {
            "node": "Download media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download media3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download media2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataText": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "DataText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download media": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataAudio": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "DataAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataText1": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing6": {
      "main": [
        [
          {
            "node": "DataText1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Unir Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing8": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ChatwootData": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "type message Whatsap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setData": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        []
      ]
    },
    "Unir Mensajes": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Tool Contador de mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tool Contador de mensajes": {
      "main": [
        [
          {
            "node": "Validacion creditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-04T22:34:24.685Z",
  "id": "h3x1bmPYVKFGmlYX",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Estarter <> valeia whatsapp",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensaje del usuario: {{ $('Data').item.json.message }}\nnombre: {{ $json.first_name }}\nnombre completo: {{ $json.name }}\nWhatsApp: {{ $json.WhatsApp  }}",
        "options": {
          "systemMessage": "=**[0] CONTEXTO Y MISIÓN CENTRAL**\n\n* **Plataforma:** tu nombre es {{ $json['Nombre del Asistente'] }} eres un Asistente de IA para la empresa {{ $json['Nombre de tu empresa:'] }} que se dedica a {{ $json['¿a que se dedica la empresa?'] }}\n\n* **Variable de Entorno:** La fecha y hora actual es `{{ $now }}`. Úsala para coordinar agendamientos.\n* **Misión Principal:** Tu objetivo es {{ $json['Objetivo principal del agente :'] }}  agendando **reuniones {{ $json['tipo de reuniones agendará el agente'] }}**. Actúas como un {{ $json['Rol que debe cumplir el agente'] }} para asegurar que el tiempo del equipo comercial se invierta únicamente en prospectos con alta probabilidad de ser un clientes efectivos, y tienen un problema real que podamos solucionar y que tengan la capacidad de actuar o tomar desiciones.\n\n**[1] IDENTIDAD Y PERSONALIDAD: LA ALIADA EXPERTA**\n\nEsta es tu esencia. Es innegociable.\n\n* **Rol:** Eres profesional  en diagnóstico, no una alguien que vende.\n* **Tono:** {{ $json['¿Qué tono debe tener tu agente al interactuar con los clientes?  '] }}\n* **Trato:** **Hablas siempre \"de tú\"**. Olvida el \"usted\". La comunicación es directa, empática y de igual a igual.\n* **Actitud:** Tu motor es la **curiosidad genuina**. Te interesa entender los retos operativos de las empresas. Usas frases que validan y animan a compartir, como \"Entiendo perfecto lo que dices\", \"Gracias por la claridad, eso ayuda mucho\", \"Justo ese es el tipo de reto que nos encanta resolver\".\n\n**[2] FASE 2: DIAGNÓSTICO LIGERO Y CONVERSACIONAL**\n\nEste es tu flujo lógico. Úsalo como una guía, adaptándote a la conversación, Evita lanzar muchas preguntas. Invita a compartir con contexto y suavidad trata que te envie todo el contexto en una sola nota de voz, asi evitaremos preguntar.\n\n* **FASE 1: APERTURA Y CONEXIÓN**\n    * **Acción:** Preséntate de forma concisa y establece el marco de la conversacion.\n    * “Hola [Nombre], ¿qué tal? Soy {{ $json['Nombre del Asistente'] }} de la firma {{ $json['Nombre de tu empresa:'] }}\nAyudamos a empresas a escalar sin necesidad de contratar más gente.\nPara respetar tu tiempo, ¿te parece si me cuentas un poco sobre cómo están funcionando hoy en día?\nCon eso ya veo si hace sentido tener una charla más a fondo.\n\nSi prefieres enviar una nota de voz, estaria perfecto 😊”\n\n* **FASE 2: DIAGNÓSTICO LIGERO (NO UN FORMULARIO)**\n    * **Instrucción:** No dispares preguntas como robot. Usa máximo 2 o 3 según fluya la conversación. Si la persona ya ofrece contexto, valida y avanza.\n\n- Preguntas sugeridas (elige con criterio):\n        * \"¿Sientes que el equipo está trabajando al límite de su capacidad?\"\n        * “¿Qué tareas repetitivas o procesos sientes que más desgastan al equipo?”\n        “¿Usan alguna herramienta como CRM, WhatsApp o similar para gestionar operación?”\n        * \"¿La idea sería optimizar la operación sin tener que cambiar esas herramientas que ya usan?\"\n        * “¿En qué parte del proceso sientes que se pierde más tiempo?”\n        * \"Para tomar una decisión sobre una optimización así, ¿quién más, además de ti, participa en el proceso?\"\n\nFrase para avanzar cuando ya hay buen contexto:\n“Con eso tengo una muy buena idea inicial. \nEn la reunión podemos profundizar más si hace sentido.”\n\n* **FASE 3: MATRIZ DE DECISIÓN (GO / NO-GO)**\n    * **Instrucción:** Usa esta lógica interna para decidir si agendar o no. Deben cumplirse la mayoría de los criterios \"CALIFICADO\".\n\n    * **[LUZ VERDE - AGENDAR] Prospecto CALIFICADO:**\n        * {{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n        * {{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}\n\n    * **[LUZ ROJA - DESCARTAR AMABLEMENTE] Prospecto NO CALIFICADO:**\n        * Menos de 5 empleados sin planes de escalar.\n        * Sin urgencia o dolor aparente (\"estamos bien así\").\n        * No es la persona adecuada y no tiene acceso a quien decide.\n\n\n        * **Guion de Cierre Amable:** *Ver sección [5] Cierres de Conversación.*\n\n**[3] PROTOCOLO DE AGENDAMIENTO: EL CIERRE EXITOSO**\n\n*Activa este protocolo SÓLO después de una decisión \"LUZ VERDE\". Es un flujo de diálogo, no una lista de tareas.*\n\n* **Paso 1. Transición de Confianza:**\n    * \"Gracias por compartir esto. Justo lo que mencionas sobre [mencionar el dolor principal, ej: 'el tiempo que pierden en tareas manuales'] es el tipo de reto que nos encanta resolver. Estoy segura de que podemos ayudar.\"\n\n* **Paso 2. Propuesta de Valor (La Reunión):**\n    * \"El siguiente paso lógico es agendar una sesión de diagnóstico de 30 minutos con un especialista. Ahí podrán analizar tu operación a fondo y mostrarte, sin ningún compromiso, cómo se vería una solución. ¿Qué te parece?\"\n\n* **Paso 3. Logística Amigable (Recopilación de Datos):**\n    * *(Una vez que el prospecto dice \"sí\" o muestra interés)*  \n      \"¡Genial! Para que la reunión sea súper productiva y nuestro especialista llegue con ideas claras para ti, necesito confirmar un par de datos.  \n      Primero, para enviarte la invitación, ¿me confirmas tu nombre completo (solo si detectas que el nombre que llega en userPrompt no es el del usuario), el nombre de tu empresa, tu cargo y tu email?\"\n\n* **Paso 4. Coordinación Sencilla (proceso interno y respuesta al usuario):**\n    * Usa la herramienta `consultar_disponibilidad` para obtener los horarios disponibles lo más pronto posible desde `{{ $now }}`.\n    * Encuentra:\n        * Una opción **en la mañana** (entre 9:00 a.m. y 11:00 a.m.).\n        * Una opción **en la tarde** (entre 2:00 p.m. y 5:00 p.m.).\n    * Ambos horarios deben ser para el **día más cercano disponible** (mañana, pasado mañana o el día hábil más próximo).\n    * Evita sábados, domingos o festivos.\n    * Una vez tengas los dos horarios, respóndele al usuario con un mensaje amigable, por ejemplo:  \n      \"¡Perfecto! Tengo estas dos opciones cercanas: mañana a las 10:00 a.m. o pasado mañana a las 3:00 p.m. ¿Cuál prefieres?\"\n\n* **Paso 5. Participantes Clave (confirmación final):**\n    * Después de enviar las opciones de reunión, consulta si hay alguien más que deba participar:  \n      \"Y para asegurarnos de que la conversación sea lo más ágil posible, ¿hay alguien más de tu equipo que consideres clave que participe en esta primera charla?\"  \n    * Solicita también el **nombre** y el **correo electrónico** de la persona tomadora de decisión o que se deba incluir en la reunión.\n\nsiempre envia la confirmacion de la reunion, con el enlace de la misma. \n\n**[4] GESTIÓN AVANZADA DE OBJECIONES**\n\n* **\"No tengo tiempo para reuniones\":** \"Te entiendo perfectamente. De hecho, existimos para devolverle tiempo a equipos como el tuyo. Estos 30 minutos son una inversión para ahorrarles horas cada semana. Si vemos que no podemos ayudarte, seremos los primeros en decirlo.\"\n* **\"Ya probamos automatización y no funcionó\":** \"Esa experiencia es muy valiosa, gracias por compartirla. Para no repetir errores, cuéntame, ¿qué fue lo que no funcionó como esperaban? Así vemos si nuestro enfoque es realmente diferente.\"\n* **\"No estoy seguro si lo necesitamos\":** \"Esa es una duda totalmente válida. Justamente para eso es esta primera charla sin compromiso: para que ambos evaluemos si esto tiene sentido para ustedes ahora mismo. No se trata de vender, se trata de diagnosticar.\"\n\n**[5] CIERRES DE CONVERSACIÓN**\n\n* **Si se agenda la reunión:**\n    * \"¡Listo, [Nombre]! Agendado para el [fecha] a las [hora]. Ya mismo te envío la invitación a tu correo con todos los detalles para que la aceptes. Va a ser una sesión muy valiosa. ¡Hablamos pronto!\"\n* **Si el prospecto no califica (Cierre Amable):**\n    * \"Te agradezco un montón la transparencia, [Nombre]. Por lo que me cuentas, parece que de momento tienen todo bajo control y no es una prioridad urgente. Respeto mucho eso. Si más adelante las cosas cambian y  escalar se vuelve un objetivo clave, ya sabes dónde encontrarnos. ¡Que tengas un excelente día!\"\n\n**[6] REGLAS DE ORO Y LÍMITES (INQUEBRANTABLES)**\n\n1.  **NUNCA des precios o estimaciones.** Tu guion es: \"Los costos dependen de cada operación. Se revisan en detalle en la reunión de diagnóstico para crear una propuesta a medida\".\n2.  **NUNCA prometas resultados específicos.** Habla de potencial y de casos de éxito, no de garantías.\n3.  **NUNCA agendes una reunión si no se cumplen los criterios de calificación.** Tu lealtad es con la calidad de la reunión, no con la cantidad.\n4.  **SIEMPRE mantén el control de la conversación** guiando con preguntas.\n5.  **SIEMPRE finaliza con un siguiente paso claro y definido** (reunión agendada o despedida amable).\n6.  **Trata que no se hagan mas de 2 o 3 preguntas, puedes hacer que te envie un audio contandote todo lo que necesites**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1984,
        -1456
      ],
      "id": "30dfa33c-1578-4d1e-8ade-f04415c100e5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('setData').item.json.nombre.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "75372881-4219-4c13-bb9a-615314982292",
              "name": "name",
              "value": "={{ $('Webhook').item.json.body.conversation.messages[0].sender.name }}",
              "type": "string"
            },
            {
              "id": "9b51ce59-b4c4-434d-baac-793706d93483",
              "name": "WhatsApp",
              "value": "={{ $('Webhook').item.json.body.conversation.messages[0].sender.phone_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1328,
        -1456
      ],
      "id": "313d7a7c-ff50-4faa-bd2e-03fd64f0bae8",
      "name": "Data"
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 1920
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        672,
        -1536
      ],
      "id": "1f0ec2e5-656a-45ca-b6fc-c7c9f6377c8a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_estarter_{{ $('Data').item.json.user_id }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        1920,
        -1168
      ],
      "id": "286ce9a5-69c7-423e-a7ee-7d2fa1b813d0",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Corrige mensajes de usuarios quitando caracteres raros, errores ortográficos y signos innecesarios como acentos mal puestos, pero sin cambiar el sentido original del mensaje, si llega el mismo mensaje repetido exactamente, varias veces, corriges para que solo envies uno, ",
              "role": "system"
            },
            {
              "content": "=Corrige el siguiente mensaje:\\n\\n {{ $('Unir Mensajes').item.json.message }} \n\\n\\nDevuelve solo el mensaje corregido"
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        720,
        -1456
      ],
      "id": "f8d7f618-71e7-4517-84ad-ae5011443351",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1696,
        -1168
      ],
      "id": "3713dfc8-3d51-40b0-a188-4db0328ff8f7",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "hola@whitelabel.lat",
          "mode": "list",
          "cachedResultName": "hola@whitelabel.lat"
        },
        "timeMin": "={{ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2096,
        -1168
      ],
      "id": "f43cf77d-59c9-4ed9-bef9-ede07b2b4ac4",
      "name": "consultar_disponibilidad",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "timeMin": "={{ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2304,
        -1168
      ],
      "id": "215d0da8-5ea9-4dad-87bb-27aa7b4bf74d",
      "name": "consultar_eventos_dia",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "start": "={{ $fromAI('Start', `fecha y hora del inicio de la reunion `, 'string') }}",
        "end": "={{ $fromAI('End', `fecha y hora del final de la reunion, normalmente 30 minutos despues de la fecha de inicio`, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('attendees0_Attendees', `correo electrónico del invitado`, 'string') }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI('Description', `Datos importantes del prospecto, como \nEmpresa: \nCargo: \nObjetivo: \nUrgencia: \nVolumen de operaciones: \nHerramientas actuales: \notros datos recopilados del prospecto. `, 'string') }}",
          "guestsCanInviteOthers": true,
          "sendUpdates": "all",
          "summary": "={{ $fromAI('Summary', ``, 'string') }}",
          "visibility": "private"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2480,
        -1184
      ],
      "id": "bd7a1cc1-4fc6-4475-9534-96f1c4be36ec",
      "name": "agendar_reunion",
      "retryOnFail": false,
      "waitBetweenTries": 2000,
      "maxTries": 2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_c6586519956e46090f3bb622f584fc361b4b6e3d57970bf898ebd0167cc7d90b@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Prueba de Agendamiento ValeIA"
        },
        "start": "={{ $json.Start }}",
        "end": "={{ $json.End }}",
        "additionalFields": {
          "attendees": [
            "={{ $json.attendees0_Attendees }}"
          ],
          "description": "={{ $json.Description }}",
          "summary": "={{ $json.Summary }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1088,
        -1200
      ],
      "id": "60abd496-3e89-4c79-8e6c-435c3ec2303b",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RMuQyYsn6eGZTZPX",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "keys",
        "keyPattern": "chat_history_valeia_573228854498"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        80,
        -2368
      ],
      "id": "2fe70012-b017-4f46-8b94-f2e8b1245e81",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -96,
        -2368
      ],
      "id": "24f2d53b-3e3b-419e-8829-45781e60c41f",
      "name": "When clicking ‘Execute workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "12c7a801-4ed8-4955-b1fe-06855956424d",
              "name": "user_id",
              "value": "={{ $('Data').item.json.user_id }}",
              "type": "string"
            },
            {
              "id": "f311cb58-a0a2-4e34-bdd6-42c2a4df8b52",
              "name": "first_name",
              "value": "={{ $('Data').item.json.first_name }}",
              "type": "string"
            },
            {
              "id": "09e31c5b-cc4a-47f3-b290-84d2199f042b",
              "name": "name",
              "value": "={{ $('Data').item.json.name }}",
              "type": "string"
            },
            {
              "id": "6549b826-8a41-4dbf-879f-10463d115265",
              "name": "WhatsApp",
              "value": "={{ $('Data').item.json.WhatsApp }}",
              "type": "string"
            },
            {
              "id": "59b192c0-4470-4334-b3e0-105d4f9c46e8",
              "name": "",
              "value": "",
              "type": "string"
            },
            {
              "id": "ae18ba3e-84a8-43ec-8b61-4abcc228d7ab",
              "name": "",
              "value": "",
              "type": "string"
            },
            {
              "id": "b9c722be-ad45-4685-9031-4a019f6b2747",
              "name": "ID whastapp",
              "value": "={{ $json['Numero de whastapp que vas a usar para tu asistente'] }}",
              "type": "number"
            },
            {
              "id": "e43b714c-d5a1-48a8-a06e-1691d8dfd7f5",
              "name": "Nombre del Asistente",
              "value": "={{ $json['Nombre que tendrá tu asistente IA:'] }}",
              "type": "string"
            },
            {
              "id": "8089fcec-621c-4454-9c2b-3f8063767818",
              "name": "Nombre de tu empresa:",
              "value": "={{ $json['Nombre de tu empresa o marca:'] }}",
              "type": "string"
            },
            {
              "id": "4c8a7667-9ac3-4506-af35-06ce98cd444e",
              "name": "¿a que se dedica la empresa?",
              "value": "={{ $json['¿a que se dedica tu empresa?'] }}",
              "type": "string"
            },
            {
              "id": "c4ade1f6-274e-439d-a9c1-6a43c6f3c351",
              "name": "Objetivo principal del agente :",
              "value": "={{ $json['El objetivo principal de tu agente IA sera:'] }}",
              "type": "string"
            },
            {
              "id": "4c5514b5-3000-463e-bbd6-8191eb5dcf1d",
              "name": "tipo de reuniones agendará el agente",
              "value": "={{ $json['  ¿Qué tipo de reuniones desea agendar tu agente?  '] }}",
              "type": "string"
            },
            {
              "id": "03aef901-3c82-4367-8507-77ef391f5017",
              "name": "Rol que debe cumplir el agente",
              "value": "={{ $json['Rol que debe cumplir el agente'] }}",
              "type": "string"
            },
            {
              "id": "1269f201-bd6b-477d-9c1f-cf05da780c7a",
              "name": "¿Qué tono debe tener tu agente al interactuar con los clientes?  ",
              "value": "={{ $json['¿Qué tono debe tener tu agente de IA al interactuar con los clientes?  '] }}",
              "type": "string"
            },
            {
              "id": "8d0b4259-0d08-4c8f-abe0-1f8c19dcc848",
              "name": "  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['  ¿Cuál es el primer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "f41309ba-a5d0-4990-8b06-cfc062c39ae7",
              "name": "¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el segundo criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "51126861-d924-4df1-9029-6f95eb98be13",
              "name": "¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el Tercer criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "97870856-9f96-4dc3-a21c-a1e5dc94889f",
              "name": "¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['¿Cuál es el cuarto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            },
            {
              "id": "0a2b0cbe-0dae-4da6-9a45-03913a4d9bf1",
              "name": "Quinto criterio que tienes en cuenta  para aceptar un prospecto?  ",
              "value": "={{ $json['Quinto criterio que tienes en cuenta  para aceptar un prospecto?  '] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1744,
        -1456
      ],
      "id": "45fa82e5-fddc-4bcd-b1de-05391803d78a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY",
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 428712773,
          "mode": "list",
          "cachedResultName": "PERSONALIZACION DE ASISTENTE IA (Respuestas)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObgWNW-K89NU7WPWoOnPxBaQ_Aj2CBaio7iigAELKyY/edit#gid=428712773"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Numero de whastapp que vas a usar para tu asistente",
              "lookupValue": "=573150759897"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1520,
        -1456
      ],
      "id": "e427a95c-ccbc-403b-bf8b-ed0eece1c36d",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CM7JsKen8ouMDNPD",
          "name": "hola@whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_history_valeia_573008564836"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        384,
        -2368
      ],
      "id": "ebd9f813-f7b0-4fb7-bc3c-1e3151bf863e",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatwood_onboarding_estarter",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -3824,
        -1536
      ],
      "id": "df6acedd-bd2a-4a93-868f-f0f37c07eb7e",
      "name": "Webhook",
      "webhookId": "3f4bb931-0b29-4f22-b253-9316b2ab9923"
    },
    {
      "parameters": {
        "content": "## Validador de Creditos\n",
        "height": 656,
        "width": 608,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        -1152
      ],
      "typeVersion": 1,
      "id": "84cf8c1a-85d0-496d-8223-044f9f479e0b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7efee19e-15a3-4263-b1da-237dd881d34b",
              "leftValue": "={{ $json.Bloqueado }}",
              "rightValue": "False",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        272,
        -832
      ],
      "id": "9b5b1c95-0ac1-47f1-9448-0287795409d1",
      "name": "Validacion creditos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "abaa9de2-4388-46df-9440-7c458be2669a",
              "leftValue": "={{ $json.receptor }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2b50ffbe-a3c8-4299-b6f3-86f9f79de33b",
              "leftValue": "={{ $json.tags }}",
              "rightValue": "=apagar-agente",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3424,
        -1520
      ],
      "id": "b8ef8629-c80e-4631-88a5-6f0ff7ed60f3",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3248,
        -1376
      ],
      "id": "7c74bbf1-b797-4fa8-8af5-e8883369bfe5",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('Start').item.json.messages[0].image.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2560,
        -1168
      ],
      "id": "cda4459c-639e-4c5c-8071-16be14fced0e",
      "name": "Download media2",
      "webhookId": "9559feee-21a8-4e7f-b6d4-a947041fdc5f",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Actúa como un contador público certificado experto en Colombia, con amplios conocimientos tributarios y financieros en América Latina. También eres un ingeniero experto en prompts y análisis OCR. Tu tarea es analizar de forma precisa y estructurada la imagen proporcionada (comprobante, recibo, factura, voucher, etc.) y extraer la siguiente información en formato JSON, validando cada campo cuidadosamente:\n\n1. **Tipo de Documento**: (Ej: Factura POS, Factura Electrónica, Recibo de Caja, Voucher, Cuenta de Cobro, etc.)\n2. **Fecha del Comprobante**: en formato `dd-mm-yyyy`. (Validar que no esté incompleta o ausente).\n3. **Monto Total**: En pesos colombianos (COP). Usar solo valores totales (ignorar subtotales).\n4. **Glosa / Descripción**: Breve texto explicando de qué trata el gasto o ingreso (Ej: \"Compra de víveres\", \"Pago de arriendo\", etc.)\n5. **Proveedor o Comercio**: Nombre del establecimiento donde se hizo la transacción.\n6. **NIT o Documento Tributario**: Detecta y extrae el NIT del proveedor. Si no existe NIT, intenta identificar cédula o algún documento oficial. Si no se encuentra, informar que no hay documento tributario.\n7. **Método de Pago**: Detectar si fue con Efectivo, Tarjeta de Crédito, Tarjeta de Débito, Transferencia, Nequi, Daviplata, etc. (En caso de duda, indicar \"No especificado\").\n8. **Categoría sugerida** (opcional): Propón una categoría financiera general (Ej: Alimentación, Transporte, Servicios, Arriendo, etc.).\n9. **Ingreso o Gasto**: Detectar si el documento corresponde a un **Ingreso** o un **Gasto**, basado en contexto, glosa y encabezados.\n\nAdemás, incluye al final una breve descripción en lenguaje natural del tipo de imagen analizada. Por ejemplo: “Se trata de un recibo POS con fecha clara y valor total, pero no se detecta NIT.” o “Factura electrónica válida con todos los campos presentes”.\n\n🔎 Si falta alguno de los datos obligatorios (como fecha, monto), indícalo explícitamente con el mensaje `\"error\": \"Campo faltante: ...\"` o `\"advertencia\": \"No se detectó la fecha del documento \"`.\n\nTu respuesta debe estar en formato JSON estructurado y fácil de procesar por un sistema automatizado.\n",
        "inputType": "base64",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2112,
        -1168
      ],
      "id": "6fbea710-1465-4c88-aea4-c66d06f07322",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<img>{{ $json.choices[0].message.content }}</img>",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('Start').item.json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1888,
        -1168
      ],
      "id": "cf60a10e-aa51-4a4a-8031-03d043e41ecf",
      "name": "DataImage"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('Start').item.json.messages[0].document.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2560,
        -1360
      ],
      "id": "3ee8cbff-8579-4185-b717-49d52abfae91",
      "name": "Download media3",
      "webhookId": "9559feee-21a8-4e7f-b6d4-a947041fdc5f",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2112,
        -1360
      ],
      "id": "621405d5-2a38-4ef7-8cc4-867f88f86591",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<pdf>{{ $json.text }}</pdf>",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('Start').item.json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1888,
        -1360
      ],
      "id": "85c4e7dd-8a4e-4856-9edb-ffe0be5c1a33",
      "name": "DataPdf"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "nombre",
              "value": "={{ $json.nombre }}"
            },
            {
              "key": "phone_number",
              "value": "={{ $json.phone_number }}"
            },
            {
              "key": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}"
            },
            {
              "key": "mensaje",
              "value": "={{ $json.mensaje }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        -1440,
        -1552
      ],
      "id": "7941a754-cdf7-4d64-bfd6-8d4e6093d261",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38cdad62-0d9c-45bc-860e-9e03d107ba58"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82df4052-c480-44a2-9d09-c195d4bc6879",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8713f778-dafe-4a52-916e-0289f4e7faad",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "reaction",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reaction"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c1a8cf-af4e-4bca-a66c-184829c009d8",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71778507-22f2-4e0f-99d7-fdd87ed1f26b",
                    "leftValue": "={{ $json.tipo_mensaje }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2896,
        -1600
      ],
      "id": "ec9fa318-d167-4583-a957-483603d967b6",
      "name": "type message Whatsap"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('initData').item.json.nombre }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('initData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $('initData').item.json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1888,
        -1744
      ],
      "id": "0780eb3f-2b09-41e3-8b6c-f1897713058e",
      "name": "DataText"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2560,
        -1744
      ],
      "id": "4208624f-3619-414c-946f-e2910f4590d9",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2336,
        -1744
      ],
      "id": "32206ce9-0b0d-4513-80c2-48c6dd5028a5",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2112,
        -1744
      ],
      "id": "47e56d7b-4843-4b9b-b9bc-98318e9968e1",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('Start').item.json.messages[0].audio.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2528,
        -1936
      ],
      "id": "0e99f9fd-ff99-4895-9db4-c2be0fa6f31a",
      "name": "Download media",
      "webhookId": "9559feee-21a8-4e7f-b6d4-a947041fdc5f",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<audio>{{ $json.content.parts[0].text }}</audio>",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('Start').item.json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1888,
        -1936
      ],
      "id": "b384a456-012a-4cff-9740-9c0c9ab37084",
      "name": "DataAudio"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2112,
        -1936
      ],
      "id": "aecac3cf-dd07-4513-9378-fa82cb2fd8b4",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $json.messages[0].reaction.emoji }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1888,
        -1552
      ],
      "id": "afcb4993-8f01-4cea-8dea-cd68caf716ea",
      "name": "DataText1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2336,
        -1552
      ],
      "id": "02e3fd18-6c04-4422-8c7c-7dbaff27277f",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2112,
        -1552
      ],
      "id": "62679fca-001c-44a9-8bc9-9632755b59e8",
      "name": "No Operation, do nothing6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -320,
        -1456
      ],
      "id": "ea700854-c403-4ab8-a99d-65acf35cde03",
      "name": "No Operation, do nothing7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('setData').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -544,
        -1552
      ],
      "id": "e793f640-f160-4ea1-8eab-bfe87eeb5691",
      "name": "If2"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -992,
        -1552
      ],
      "id": "e69261b0-570c-411a-aeba-249f48f86d55",
      "name": "Wait1",
      "webhookId": "c42fd9d6-416c-4950-8662-76e241fbd897"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=chat_id_{{ $json.phone_number }}",
        "messageData": "={{ $json.mensaje }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1216,
        -1552
      ],
      "id": "1daca01a-4c70-4365-ba17-6348dee7ef51",
      "name": "Push Message1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2560,
        -1552
      ],
      "id": "8fc2c9bf-5a64-42e5-809b-d94de40dbd57",
      "name": "No Operation, do nothing8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $json.body.conversation.meta.sender.name.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $json.body.conversation.meta.sender.phone_number.replace('+','') }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "01193a9d-40ea-48b1-96f1-592105684644",
              "name": "tipo_mensaje",
              "value": "={{ $json.body.conversation.messages[0].content_type }}",
              "type": "string"
            },
            {
              "id": "c6b5261d-a252-4328-af15-9699dfc5ba2b",
              "name": "receptor",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $json.body.conversation.labels[0] }}",
              "type": "string"
            },
            {
              "id": "2189dde7-a49e-4226-be25-22f3e62caf99",
              "name": "conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "string"
            },
            {
              "id": "c8242d40-84d3-4c64-adcc-d15b8de57a9a",
              "name": "account_id",
              "value": "={{ $json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "7d6c4435-2ae7-4716-a211-c8d9898dcd48",
              "name": "api_access_token",
              "value": "DrGpYbBHEo6jJnmG8vxSMH3U",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3616,
        -1520
      ],
      "id": "984bc905-aa1a-48c1-8ec3-a3af52a0e2e1",
      "name": "ChatwootData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cb120617-0a0f-4b8d-8979-909001725c0d",
              "name": "phone_number_id",
              "value": "={{ $json.phone_number_id }}",
              "type": "string"
            },
            {
              "id": "5276d674-1b57-4af7-88f3-5f9616e64cc3",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "92d97526-26b7-461c-b7ec-7cd13074512e",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "0605a012-1740-4b13-8e7f-57e156ad2fbe",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "5060779d-87fc-49af-9212-c7972aae9ff0",
              "name": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}",
              "type": "string"
            },
            {
              "id": "358f4697-0d6f-4184-bfbd-31ff4f2e2ac2",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "string"
            },
            {
              "id": "d7bd017f-435b-4c5c-89ba-77b2bdd3d56d",
              "name": "account_id",
              "value": "={{ $json.account_id }}",
              "type": "string"
            },
            {
              "id": "5df9085c-2dab-4895-87b6-26f1a70b74c6",
              "name": "conversation_id",
              "value": "={{ $json.conversation_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3104,
        -1536
      ],
      "id": "c49e6ccd-25ec-444c-badd-ae7e43b6e26d",
      "name": "initData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f107ad-f4e3-4616-a1ec-515f7324ba23",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "6f55c6f4-4cb3-4cec-9d31-b956d3fffde0",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "bad14eb8-f005-4d91-bd83-600e6105d974",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1664,
        -1552
      ],
      "id": "bcb6122d-48f5-4e45-94b5-b42e3feb7ac2",
      "name": "setData"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $('setData').item.json.phone_number }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -176,
        -1760
      ],
      "id": "81d45a9c-4625-407e-971a-4e14e10bdfeb",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2336,
        -1168
      ],
      "id": "fa4a7c2d-7b31-43c7-9567-a9365a6e86c4",
      "name": "HTTP Request",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2336,
        -1360
      ],
      "id": "a017f041-3423-42c1-94fd-fdff21700c3b",
      "name": "HTTP Request7",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "=chat_id_{{ $json.phone_number }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -768,
        -1552
      ],
      "id": "7cee3230-c811-4f30-8928-f18e113f6855",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2336,
        -1936
      ],
      "id": "a88f8103-6165-45a1-acf5-d5b17132254a",
      "name": "HTTP Request8",
      "credentials": {
        "whatsAppApi": {
          "id": "IzfsUgwJnA4EF09z",
          "name": "whatsap Valeia"
        }
      }
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 956,
        "width": 2912,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2960,
        -1968
      ],
      "id": "12872d11-8b65-4c05-a8d8-f8906cb09bdf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **Reemplaza siempre la palabra \"Dosis\" por \"Cantidad\"**.  \n- **No incluyas datos sensibles** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2976,
        -1472
      ],
      "id": "f829a2ba-7e37-4df8-aeab-c523e46c2e1f",
      "name": "OpenAI1",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3744,
        -1472
      ],
      "id": "c534bf2c-ff65-4ffa-83ff-179b50a4d4d8",
      "name": "Wait11",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3328,
        -1296
      ],
      "id": "817b757b-a528-465c-b0bd-70d9d2f79da0",
      "name": "Wait12",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3552,
        -1296
      ],
      "id": "7e25c3f6-87eb-43c5-a49a-047c9df701ed",
      "name": "If12"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3968,
        -1264
      ],
      "id": "d9240b35-4382-4eaa-8ac7-9edd1272d389",
      "name": "No Operation, do nothing11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3952,
        -1472
      ],
      "id": "412bd95e-86f8-4ae2-a45b-cb7266770fbd",
      "name": "If13"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4384,
        -1456
      ],
      "id": "69d743c7-99dd-45a1-b743-980de428016b",
      "name": "No Operation, do nothing12"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3328,
        -1072
      ],
      "id": "6f4ad8bf-83f2-4281-a0f1-ff43b94b8844",
      "name": "Wait13",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3552,
        -1072
      ],
      "id": "b1a5421a-8792-4d6d-93a9-2ffeaa247afa",
      "name": "If14"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3968,
        -1072
      ],
      "id": "c85bffc6-57f9-410d-b7a3-b3cccaa42944",
      "name": "No Operation, do nothing13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4176,
        -1488
      ],
      "id": "0d99c30c-ae4e-46b1-8b7a-eec327e9748a",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3776,
        -1312
      ],
      "id": "00ae85c0-5c0d-47f9-b24d-db7360b1a632",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3792,
        -1088
      ],
      "id": "2791f631-6a5c-42a8-b2ff-08f81f9628b9",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 600,
        "width": 1720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2896,
        -1536
      ],
      "id": "c8f13f5b-3b29-4852-8e8a-786f524eeb05",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3328,
        -1472
      ],
      "id": "164db1bc-1dc9-467f-9f5c-ee07e88ff40a",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Redis2').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -320,
        -1648
      ],
      "id": "b4fef48c-5f03-4c9a-9950-11a36b19fdf3",
      "name": "Unir Mensajes"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Bq4Kkf2M2z3awZmX",
          "mode": "list",
          "cachedResultName": "Tool Contador de Mensajes"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "cliente_id": "={{ $('initData').item.json.account_id }}"
          },
          "matchingColumns": [
            "client_id"
          ],
          "schema": [
            {
              "id": "cliente_id",
              "displayName": "cliente_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        80,
        -832
      ],
      "id": "d2fe0745-e047-49e8-b5c9-e67f335140e8",
      "name": "Tool Contador de mensajes"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.account_id }}/conversations/{{ $('initData').item.json.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('ChatwootData').item.json.api_access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        -624
      ],
      "id": "a5265b2f-7613-4eaf-9575-24236e11bf07",
      "name": "HTTP Request5"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "staticData": {
    "node:Formbricks": {}
  },
  "tags": [
    {
      "createdAt": "2025-05-24T00:14:40.674Z",
      "updatedAt": "2025-05-24T00:14:40.674Z",
      "id": "oT0NAHa9rDEzcTFX",
      "name": "Plantilla"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-16T23:43:41.402Z",
  "versionId": "f6d40f31-5397-4240-9483-c33170703856"
}