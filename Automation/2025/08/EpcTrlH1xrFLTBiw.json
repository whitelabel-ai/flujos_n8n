{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Reminder",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Send message6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Send message5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Send message7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Reminder",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send message3": {
      "main": [
        []
      ]
    },
    "Message a model3": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_user_category": {
      "ai_tool": [
        []
      ]
    },
    "get_transactions": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "register_transaction": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_categories": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_category_budget": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_progres_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_saving_goal": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model3",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "get_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_user_subscription": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "updated_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "analyze_spending_habits": {
      "ai_tool": [
        [
          {
            "node": "Reminder",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio diario": {
      "main": [
        [
          {
            "node": "informe dayli",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reminder": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reminder dayli1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reminder dayli2": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio semanal": {
      "main": [
        [
          {
            "node": "reminder dayli1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recordatorio mensual": {
      "main": [
        [
          {
            "node": "reminder dayli2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "informe dayli": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Code2": {
      "main": [
        []
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T15:42:43.639Z",
  "id": "EpcTrlH1xrFLTBiw",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente send informe coach",
  "nodes": [
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5792,
        3552
      ],
      "id": "529e92ae-41aa-43af-b781-8b3cdf4ec0b3",
      "name": "Wait16",
      "webhookId": "e4e2c5a2-aba0-4efb-a35b-cb100fafbf48"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6016,
        3552
      ],
      "id": "b688e7d3-3899-4f3f-929f-06a067ba69b9",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6432,
        3552
      ],
      "id": "5b4295d6-4c38-4d7e-bcd2-c0bb4a287a75",
      "name": "No Operation, do nothing16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte4 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        6224,
        3520
      ],
      "id": "341c7273-55c3-463d-8079-bb97fe542314",
      "name": "Send message7",
      "webhookId": "23e56bc9-d20f-4978-b8d9-3be232382d63",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6432,
        3360
      ],
      "id": "81711761-1981-459e-8168-d46cda41d4a4",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5792,
        3328
      ],
      "id": "65bfda6c-6bd7-4c65-bebf-e40eb5be83b4",
      "name": "Wait15",
      "webhookId": "2f840419-d9ab-4332-9462-1f8e540a5c28"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6016,
        3328
      ],
      "id": "2d6dcec4-0fd7-4947-bdf5-4e6eec489bfa",
      "name": "If15"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte3 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        6224,
        3328
      ],
      "id": "4e238ead-9941-4b79-a83e-a77cfb355452",
      "name": "Send message6",
      "webhookId": "620c41d5-d6a2-4ccf-94bc-eeb189881185",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6592,
        3152
      ],
      "id": "62c03ea1-b870-49aa-a793-2bcef9f82d5c",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6000,
        3152
      ],
      "id": "9e3e702e-db01-4c93-b555-3105e1e9f7e7",
      "name": "Wait14",
      "webhookId": "a87a9596-2fc0-4ef6-a3e2-f25dc9ae572f"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6192,
        3152
      ],
      "id": "ceed04b8-6ee0-49e0-adac-814e91c7d155",
      "name": "If16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte1 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5776,
        3152
      ],
      "id": "2a1591cd-eca4-48e3-89ea-579dba1a1c11",
      "name": "Send message3",
      "webhookId": "b100c63a-694a-4cf3-83f5-b9d083afdd46",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes más pequeñas* solo si es necesario, asegurándote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), divídelo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), divídelo en *3 partes*.\n\n- Si es *muy largo* (más de *600 caracteres*), agrégale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios ítems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <número>`\n  - `subscriber_id: <número>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        5024,
        3152
      ],
      "id": "cab61828-eb31-4d91-bef6-86aec33e97e4",
      "name": "Message a model3",
      "credentials": {
        "openAiApi": {
          "id": "pwlG2h4GySrxyfFD",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte2 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        6400,
        3136
      ],
      "id": "39a3c876-9895-46ea-9b75-426b9fe3bf80",
      "name": "Send message5",
      "webhookId": "27282187-89f8-45c9-8a08-789edd2805b7",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 760,
        "width": 2264,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4320,
        3024
      ],
      "id": "558aa725-0fa5-425c-9c7c-c0c77f83c0c4",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3184,
        3408
      ],
      "id": "c271a327-1cdb-425a-a725-e587f11c7c27",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "mony"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_chat_id_reminder_{{ $('Data').item.json.numero_whatsapp }}",
        "sessionTTL": 500000,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        3312,
        3408
      ],
      "id": "a33baf75-24ba-4d3b-8904-6ee3d5e5e5c6",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1936,
        3104
      ],
      "id": "7c5590e7-8503-4f4f-9478-498201ecf3c2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## trigger Messages\n",
        "height": 700,
        "width": 1280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        608,
        3088
      ],
      "id": "d6021189-767b-456c-9018-4bdc99613c0f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "categorias",
          "mode": "list",
          "cachedResultName": "categorias"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', `nombre de la categoria`, 'string') }}",
            "tipo": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}",
            "id_usuario": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id_usuario', ``, 'string') }}",
            "presupuesto_mensual": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('presupuesto_mensual', ``, 'number') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "Gasto",
                  "value": "Gasto"
                },
                {
                  "name": "Ingreso",
                  "value": "Ingreso"
                }
              ]
            },
            {
              "id": "presupuesto_mensual",
              "displayName": "presupuesto_mensual",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_usuario",
              "displayName": "id_usuario",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        2944,
        3552
      ],
      "id": "2955725b-1dc2-4981-b490-4f48f7abface",
      "name": "create_user_category",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Recupera todas las transacciones del usuario en un período de tiempo definido",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagina",
              "value": "={{ $fromAI('pagina', `numero de la pagina a consultar`, 'string') }}"
            },
            {
              "name": "limite",
              "value": "50"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI('fechaFin', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3440,
        3408
      ],
      "id": "ca7230e2-d9ec-4c81-a591-86bccca93c3d",
      "name": "get_transactions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva transacción de Ingreso o Gasto en la cuenta del usuario.",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3440,
        3568
      ],
      "id": "f9474067-3ca8-4b8f-a261-75587f2fad4c",
      "name": "register_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "obtiene las categorias de un usuario con su presupuesto y detalles",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3568,
        3408
      ],
      "id": "cde2aa40-df4b-4ab2-bb66-c2f50e0a984a",
      "name": "get_user_categories",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Establece o actualiza el presupuesto mensual para cada categoría de gasto específica",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/categories/{{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "presupuestoMensual",
              "value": "={{ $fromAI('presupuestoMensual', ` Monto del presupuesto de la categoria`, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3568,
        3728
      ],
      "id": "4d8b362b-e7fc-4862-b422-1e2de11ca620",
      "name": "update_category_budget",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el estado de las metas de ahorro activas del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "estado",
              "value": "activa"
            },
            {
              "name": "pagina",
              "value": "1"
            },
            {
              "name": "limite",
              "value": "10"
            },
            {
              "name": "ordenarPor",
              "value": "fechaCreacion"
            },
            {
              "name": "direccion",
              "value": "desc"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3696,
        3408
      ],
      "id": "ae639b78-38c7-43c1-8612-f16a1823aca6",
      "name": "get_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Actualiza específicamente el monto actual ahorrado. Cambia automáticamente el estado a \"completada\" si se alcanza el objetivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/saving-goals/{{ $fromAI('metaId', `id de la meta, obtenido en la tool '\\''get_saving_goals'\\''`, 'string') }}/amount",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` suma del monto actual + nuevo monto `, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3712,
        3728
      ],
      "id": "7ecd524e-47dd-4ce4-ae5b-b0498bc9fd8c",
      "name": "update_progres_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Guarda una nueva meta de ahorro para el usuario",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `nombre de la meta`, 'string') }}"
            },
            {
              "name": "montoObjetivo",
              "value": "={{ $fromAI('monto_objetivo', `Monto objetivo a ahorrar`, 'number') }}"
            },
            {
              "name": "montoActual",
              "value": "={{ $fromAI('monto_actual', `Monto actual ahorrado (default: 0)`, 'number') }}"
            },
            {
              "name": "fechaObjetivo",
              "value": "={{ $fromAI(\n  'fechaObjetivo',\n  'Devuelve la fecha en la que finaliza la meta de ahorro, en formato ISO estricto (YYYY-MM-DD)',\n  'string'\n) }}"
            },
            {
              "name": "estado",
              "value": "={{ $fromAI('estado', `activa o inactiva`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3712,
        3568
      ],
      "id": "07ba592f-21e1-4eff-89d9-156b9b3cea76",
      "name": "create_saving_goal",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8721a225-ddfb-44a4-bf51-b0e18ba5b767",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        3184
      ],
      "id": "eb50f1b5-b27e-456b-8257-bc29efd6ec64",
      "name": "If2"
    },
    {
      "parameters": {
        "toolDescription": "Consulta el todas las subscripciones del usuario del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3824,
        3408
      ],
      "id": "9bb14e7c-443e-4fb1-a36b-c18eb05b37b9",
      "name": "get_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva suscripción o gasto recurrente del usuario, como Netflix o el gimnasio",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha de inicio de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "fechaProximoPago",
              "value": "={{ $fromAI('fechaProximoPago', `Fecha de Proximo Pago de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3840,
        3568
      ],
      "id": "7c06cdfd-a920-41df-b819-5370a94c18aa",
      "name": "create_user_subscription",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "actualiza la subscripcion si esta activa o no, el monto u otros parametros si se necesitan actualizar",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/user-subscriptions/{{ $fromAI('subscriptionId', `id de la Subscripcion, obtenido en la tool '\\''get_user_subscriptions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "activa",
              "value": "={{ $fromAI('activa', `true o false`, 'boolean') }}"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3856,
        3728
      ],
      "id": "5c4279ca-c589-4d89-a56d-41f1d6aa7d09",
      "name": "updated_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Analiza los gastos de un período para identificar las 2 categorías con mayor gasto y los 'gastos hormiga' (transacciones pequeñas y frecuentes en una misma categoría",
        "url": "https://api.mony.whitelabel.lat/api/v1/analytics",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI(   'fechaInicio',   'Fecha de fin en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI(   'fechaFin',   'Fecha de inicio en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "agrupacion",
              "value": "={{ $fromAI('agrupacion', `Tipo de agrupación temporal (día, semana, mes, año)`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        4000,
        3408
      ],
      "id": "10f3f9b8-00f3-45ad-a397-c659a6da17e6",
      "name": "analyze_spending_habits",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "chartOptions": {},
        "datasetOptions": {}
      },
      "type": "n8n-nodes-base.quickChart",
      "typeVersion": 1,
      "position": [
        3440,
        2880
      ],
      "id": "d8054a15-5836-4568-b28c-b7fb06f434c9",
      "name": "QuickChart"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        3184
      ],
      "id": "e281b133-8de1-438a-a21e-3e52c4e6276e",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1440,
        3184
      ],
      "id": "c658af1a-1d7e-4fa9-8054-465fbea20b5b",
      "name": "Split Out"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1024,
        3184
      ],
      "id": "9d594245-743d-42ca-a67d-f68a6d8ea6b4",
      "name": "recordatorio diario"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1878dfd8-93d8-424e-adad-eb001b303f7b",
              "name": "trigger_type",
              "value": "={{ $json.trigger_type }}",
              "type": "string"
            },
            {
              "id": "ee72c582-17c1-4ca0-84ba-dde0d82420d7",
              "name": "numero_whatsapp",
              "value": "={{ $json.user_data.numeroWhatsapp }}",
              "type": "string"
            },
            {
              "id": "424bdb40-efa1-49dc-9473-792a53521435",
              "name": "user_data",
              "value": "={{ $json.user_data }}",
              "type": "object"
            },
            {
              "id": "9dca5b25-b6a7-411c-b0dd-c1bad8e70181",
              "name": "informe_data",
              "value": "={{ $json.informe_data }}",
              "type": "object"
            },
            {
              "id": "5ee0da44-2f91-4b7d-956a-2fdb75239a38",
              "name": "phone_number_id",
              "value": "735679592965149",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2928,
        3248
      ],
      "id": "c6723bd3-c88d-485b-8994-0ef59de556c3",
      "name": "Data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: \"{{ $json.user_data.nombreCompleto.split(' ')[0] }}\",\ntrigger_type: \"{{ $json.trigger_type }}\"\nuser_data: \"{{ JSON.stringify($json.user_data) }}\",\ninforme_data: {{  JSON.stringify($json.informe_data) }}\n",
        "options": {
          "systemMessage": "=# 1. ROL Y FILOSOFÍA CENTRAL\n\n*Tu Identidad:* Eres Mony Insights, el Analista Financiero Proactivo del usuario. No eres un coach conversacional; eres un curador de información financiera.\n\n*Tu Personalidad:* Eres conciso, claro y elegante. Tu comunicación es como un resumen ejecutivo: va directo al punto, pero está presentada de una forma profesional y visualmente agradable. Eres informativo y motivacional, pero no buscas iniciar un diálogo.\n\n*Tu Filosofía Central:* Tu objetivo es transformar los datos financieros complejos que recibes en píldoras de conocimiento fáciles de digerir en menos de 30 segundos, empoderando al usuario a lo largo de su día o semana.\n\n---\n\n# 2. MISIÓN PRINCIPAL\n\nTu única misión es analizar la información proporcionada en el *User Message* (`trigger_type`, `user_data`, `informe_data`) para construir y generar un único mensaje de WhatsApp, autocontenido y de alto valor.\n\nNo usas herramientas ni buscas datos; toda la información que necesitas te es proporcionada.\n\n---\n\n# 3. ANÁLISIS DEL CONTEXTO DE ENTRADA\n\nEn el *User Message* recibirás tres piezas de información clave que debes interpretar:\n\n- *trigger_type:* Esta cadena de texto define tu tarea. Identifica si es un recordatorio o un informe y su frecuencia.\n- *user_data:* Un objeto con los datos del usuario. Extrae su primer nombre para personalizar el saludo.\n- *informe_data:* Un objeto JSON rico en datos, disponible solo cuando el `trigger_type` es de tipo informe. Este es tu material de trabajo principal para construir los reportes.\n\n---\n\n## 4. LÓGICA DE PROCESAMIENTO Y CONSTRUCCIÓN DE MENSAJES\n\nTu única tarea es identificar el **trigger_type** y usar las siguientes directrices para construir una respuesta inteligente y dinámica.\n\n\n### 🔔 Caso: `trigger_type = recordatorio`\n\n**Directriz Clave:**  \nPara evitar la monotonía, debes variar estos mensajes. Elige una de las opciones de la lista correspondiente a la frecuencia cada vez que envíes un recordatorio.  \nNo envíes el mismo mensaje dos veces seguidas.\n\n\n#### 📆 Frecuencia: Diario\n(Elige **una opción** cada vez)\n\n1. **Enfocado en Metas**  \n   > ¡Hola, [nombre]! ☀️ Un pequeño paso hoy es un gran salto para tus metas mañana.  \n   > ¡No olvides registrar tus gastos de hoy! 💪  \n\n2. **Enfocado en Hábitos**  \n   > ¡Hola, [nombre]! ☕️ La claridad financiera es un hábito.  \n   > Dedica 30 segundos a registrar tus movimientos de hoy. ¡Tú tienes el control!  \n\n3. **Rápido y Directo**  \n   > ¡Hola, [nombre]! 📝 Un recordatorio rápido para mantener tus finanzas al día.  \n   > ¿Hubo algún gasto hoy? ¡Regístralo ahora!  \n\n\n#### 📆 Frecuencia: Semanal\n(Elige **una opción** cada vez)\n\n1. **Reflexivo**  \n   > ¡Hola, [nombre]! ✨ Fin de la semana, momento de claridad.  \n   > Tómate 5 minutos para revisar y registrar los gastos pendientes.  \n   > ¡Un pequeño resumen hoy te dará una gran ventaja mañana!  \n\n2. **Enfocado en Progreso**  \n   > ¡Hola, [nombre]! 🚀 ¿Listo para cerrar la semana con fuerza?  \n   > Asegurémonos de que cada gasto esté en su lugar para que tus reportes sean precisos.  \n   > ¡Vamos a ello!  \n\n3. **Simple y Amable**  \n   > ¡Hola, [nombre]! ☕️ Un café y 5 minutos es todo lo que necesitas para poner en orden tus finanzas de la semana.  \n   > ¡Tu futuro yo te lo agradecerá!  \n\n---\n\n## Si el `trigger_type` es de tipo *informe*:\n\nEstos son tus *\"Reportes de Valor\"*. Debes analizar el contenido de `informe_data` y construir el mensaje dinámicamente.\n\n👉 *Si una sección no tiene datos relevantes (ej. no hay ingresos, no hay metas), omítela* para mantener el mensaje conciso y valioso.\n\n### Directrices para *informe-diario*:\n\n* Crea un encabezado claro con la fecha actual.\n* Muestra el total de gastos del día.\n* Si hay transacciones en `informe_data.detalle_transacciones.gastos`, lista las dos más significativas. Si solo hay una, muestra solo esa.\n* Termina con un tip genérico y motivador.\n\n*Ejemplo de Salida:*\n\nResumen del Día ☀️ - 25 de Agosto  \n\n¡Hola, [nombre]! Así se movió tu dinero hoy:  \n• Gastos Totales: $[total_gastos]  \n• Transacciones Clave:  \n[descripcion_gasto_1] ($[monto_gasto_1])  \n\n💡 Tip del Día: Revisa si el gasto de hoy podría convertirse en un hábito. ¡Ser consciente es el primer paso!\n\n---\n\n### Directrices para *informe-semanal, informe-mensual, informe-trimestral*:\n\n- *Encabezado:* Menciona la frecuencia del informe.\n- *PANORAMA GENERAL:* Muestra ingresos, gastos y balance. Si los ingresos son cero, omite ingresos y balance para enfocarte solo en gastos.\n- *ANÁLISIS DE GASTOS:* Analiza `top_categorias_gasto`. Muestra hasta las 3 principales. Si solo hay 1 o 2, muestra esas.\n- *INSIGHT DEL COACH:*\n\n  * Si ingresos > gastos → insight positivo.\n  * Si gastos > ingresos → insight constructivo destacando la categoría principal.\n- *PROGRESO DE METAS:* Analiza `detalle_metas_ahorro_activas`. Si no está vacío, muestra el progreso de la meta principal. Si está vacío, omite toda la sección.\n- *Cierre:* Frase motivacional.\n\n*Ejemplo de Salida:*\n\n\nTu Informe Financiero Semanal 📊  \n\n¡Hola, [nombre]! Aquí tienes la historia que contaron tus números durante la última semana:  \n\nPANORAMA GENERAL  \n🟢 Ingresos: $[total_ingresos]  \n🔴 Gastos: $[total_gastos]  \n💰 Balance: $[saldo_actual]  \n\nANÁLISIS DE GASTOS 🔍  \nTu dinero se concentró principalmente en:  \n🥇 [categoria_1]: $[monto_1]  \n🥈 [categoria_2]: $[monto_2]  \n\n💡 INSIGHT DEL COACH  \n¡Excelente trabajo! Tus ingresos superaron tus gastos, lo que te permitió ahorrar $[saldo_actual]. Este es el camino para alcanzar tus metas más rápido.  \n\nPROGRESO DE METAS 🎯  \n¡No perdamos de vista tus sueños!  \n• [nombre_meta_1]: Has avanzado un [porcentaje]% del total. ¡Sigue así!  \n\nQue tengas una semana financieramente consciente. ✨\n\n\n---\n\n# 5. REGLAS DE ORO DE LA COMUNICACIÓN PROACTIVA\n\n- *CERO CONVERSACIÓN:* Tus mensajes son informativos y finales. Nunca termines con una pregunta que invite a una respuesta.\n- *LA BELLEZA ESTÁ EN EL FORMATO:* Usa negritas, cursivas, emojis y separadores (`---`) para una jerarquía visual clara y mensajes escaneables.\n- *SIEMPRE BASADO EN DATOS:* Construye tu mensaje exclusivamente con la información que recibes en el `User Message`. No inventes ni supongas nada.\n- *PERSONALIZACIÓN ES CLAVE:* Usa siempre el nombre del usuario para que el mensaje se sienta personal y directo.\n- *INTELIGENCIA DINÁMICA:* No rellenes plantillas ciegamente. Analiza los datos de `informe_data` y omite secciones irrelevantes para entregar un reporte más limpio y valioso."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        3504,
        3184
      ],
      "id": "a389d76c-3060-4a2f-8f8e-4a967db5b658",
      "name": "Reminder",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "semanal"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        3376
      ],
      "id": "3a0953cc-4ee3-428f-aa7d-65a23935d259",
      "name": "reminder dayli1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        3376
      ],
      "id": "a1aec492-de85-4e70-8b36-39b689c2dd21",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1440,
        3376
      ],
      "id": "ca875938-ccee-4304-8fc4-39f9cb31031c",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "mensual"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        3584
      ],
      "id": "d98121b9-5329-462e-840b-41095d631f70",
      "name": "reminder dayli2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26d69594-17aa-4180-80c9-5273d91dfd42",
              "name": "trigger_type",
              "value": "={{ $json.tipo }} - {{ $json.frecuencia }}",
              "type": "string"
            },
            {
              "id": "83c0cfb1-c7c8-4626-bbcb-77f10068a1a5",
              "name": "user_data",
              "value": "={{ $json.usuarios.usuario }}",
              "type": "object"
            },
            {
              "id": "298b3066-04ee-4a3a-b2a3-72d8ded98bf5",
              "name": "informe_data",
              "value": "={{ $json.usuarios.informe }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        3584
      ],
      "id": "cddc9751-cc1d-412b-a9b5-4faae65b8626",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usuarios",
        "include": "selectedOtherFields",
        "fieldsToInclude": "tipo, frecuencia",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1440,
        3584
      ],
      "id": "32f94423-b4a9-46e4-928a-a617b0401d5d",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1024,
        3376
      ],
      "id": "71e437ff-5e79-4c29-b19c-2460f0e8bbe1",
      "name": "recordatorio semanal"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1024,
        3584
      ],
      "id": "a7ef066a-cfe6-48ff-8f75-dfe1796bd0e2",
      "name": "recordatorio mensual"
    },
    {
      "parameters": {
        "url": "https://api.mony.whitelabel.lat/api/v1/notifications/users-by-preferences",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "frecuencia",
              "value": "diario"
            },
            {
              "name": "tipo",
              "value": "informe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        3184
      ],
      "id": "1ce7d7df-3ee3-46bf-a3ba-601576c78fde",
      "name": "informe dayli",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Accedemos a los datos del nodo anterior. Usamos [0] porque los datos vienen en un array.\nconst informe = $input.first().json.informe_data;\n\n// Extraemos los totales de gastos del período actual y anterior\nconst gastosHoy = informe.resumen.actual.totalGastos;\nconst gastosAyer = informe.resumen.anterior.totalGastos;\n\n// Creamos la configuración para un gráfico de barras\nconst chartConfig = {\n  type: 'bar',\n  data: {\n    labels: ['Gastos de Ayer', 'Gastos de Hoy'],\n    datasets: [{\n      label: 'Total Gastado',\n      data: [gastosAyer, gastosHoy],\n      backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)'],\n      borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\n      borderWidth: 1\n    }]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'Comparación de Gastos Diarios'\n    }\n  }\n};\n\n// Devolvemos la configuración para el siguiente nodo\nreturn { chartConfig };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        3136
      ],
      "id": "eef8ed1d-03e7-4fe0-9867-1e0221f4ef36",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const informe = $input.first().json.informe_data;\n\n// Extraemos las categorías de gastos de hoy\nconst categoriasHoy = informe.categorias.actual;\n\n// Preparamos los datos para el gráfico\nconst labels = categoriasHoy.map(cat => cat.nombre);\nconst dataPoints = categoriasHoy.map(cat => cat.total);\n\n// Creamos la configuración para un gráfico de dona (doughnut)\nconst chartConfig = {\n  type: 'doughnut',\n  data: {\n    labels: labels,\n    datasets: [{\n      data: dataPoints,\n      // Puedes agregar más colores si tienes más categorías\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'], \n    }]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'Distribución de Gastos de Hoy'\n    }\n  }\n};\n\nreturn { chartConfig };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1888,
        3328
      ],
      "id": "b48f95a2-85e3-4d68-a0e4-cf05d503538b",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "const informe = $input.first().json.informe_data;\nconst categoriasHoy = informe.categorias.actual;\n\n// Transformamos los datos al formato que necesita el treemap\nconst treeData = [];\ncategoriasHoy.forEach(cat => {\n  cat.desglose.forEach(item => {\n    treeData.push({\n      categoria: cat.nombre, // Nivel 1 de agrupación\n      descripcion: item.descripcion, // Nivel 2 de agrupación\n      monto: item.montoTotal // El valor que define el tamaño del área\n    });\n  });\n});\n\n// Creamos la configuración para el treemap\nconst chartConfig = {\n  type: 'treemap',\n  data: {\n    datasets: [{\n      label: 'Desglose de Gastos',\n      tree: treeData,\n      key: 'monto', // La propiedad que contiene el valor numérico\n      groups: ['categoria', 'descripcion'], // Las propiedades para agrupar\n      backgroundColor: (ctx) => { // Lógica para colorear por categoría\n        if (ctx.type !== 'node') return;\n        if (ctx.raw.g === 'Alimentación') return '#FF6384';\n        if (ctx.raw.g === 'Transporte') return '#36A2EB';\n        return '#FFCE56';\n      }\n    }]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'Desglose Detallado de Gastos de Hoy'\n    }\n  }\n};\n\nreturn { chartConfig };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1936,
        3456
      ],
      "id": "120837d7-458a-42a6-bb01-9960315db2df",
      "name": "Code2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://quickchart.io/chart",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n  {\n    \"chartconfig\": {\n      \"type\": \"{{ $json.chartConfig.type }}\",\n      \"data\": {{ JSON.stringify($json.chartConfig.data) }},\n      \"options\": {{ JSON.stringify($json.chartConfig.options) }}\n}\n}\n]",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2128,
        3136
      ],
      "id": "4e018438-08a3-4db7-9e7e-627564a2cbdb",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T15:42:43.639Z",
      "updatedAt": "2025-08-25T15:42:43.639Z",
      "role": "workflow:owner",
      "workflowId": "EpcTrlH1xrFLTBiw",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": {
    "node:resumen-financiero-hoy": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible": {
      "recurrenceRules": []
    },
    "node:resumen_semanal": {
      "recurrenceRules": []
    },
    "node:resumen_mensual": {
      "recurrenceRules": []
    },
    "node:resumen_trimestral": {
      "recurrenceRules": []
    },
    "node:alerta_presupuesto": {
      "recurrenceRules": []
    },
    "node:meta_en_riesgo": {
      "recurrenceRules": []
    },
    "node:recordatorio_suscripcion": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible1": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible2": {
      "recurrenceRules": []
    },
    "node:Airtable Trigger": {
      "lastTimeChecked": "2025-08-25T15:38:52Z"
    },
    "node:recordatorio diario": {
      "recurrenceRules": []
    },
    "node:recordatorio semanal": {
      "recurrenceRules": []
    },
    "node:recordatorio mensual": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-09-19T14:30:12.225Z",
  "versionId": "2fe5f322-cee5-4f29-9a4f-3a5465c4dc9b"
}