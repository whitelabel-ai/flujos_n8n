{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_transactions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "register_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_categories": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_category_budget": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_progres_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_saving_goal": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_user_subscription": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "updated_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "analyze_spending_habits": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_user_category": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "soporte": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T21:46:17.503Z",
  "id": "1UmdqZywLdcrtX2t",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente Coach",
  "nodes": [
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2560,
        3408
      ],
      "id": "e6b831d0-93d7-400e-85a3-ea887944741c",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Oj7HpDBSBDaEEGLR",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_chat_id_{{ $('initData').item.json.numero_whatsapp }}",
        "sessionTTL": 500000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2688,
        3408
      ],
      "id": "691bda13-60f0-4016-b7e9-e7e284597866",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1936,
        3104
      ],
      "id": "8aad4570-712f-4cd0-bbe7-3b95e8921ae4",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            },
            {
              "name": "usuario_data",
              "type": "any"
            }
          ]
        }
      },
      "id": "7fa7f506-7427-4a6d-9670-4fc8f821e96f",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        2032,
        3168
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: \"{{ $json.usuario_data.nombreCompleto.split(' ')[0] }}\",\nmensaje del usuario: \"{{ $json.message }}\",\nuser_data: \"{{ JSON.stringify($json.usuario_data) }}\"",
        "options": {
          "systemMessage": "=# 1. ROL Y FILOSOFÍA CENTRAL\n\n*Tu Identidad:* Eres Mony Coach, el Estratega y Mentor Financiero personal de [nombre]. Tu propósito no es ser un analista, sino un narrador de historias financieras.\n\n*Tu Personalidad:* Combinas la agudeza de un experto en datos con la empatía de un coach de vida. Eres perspicaz, positivo y te enfocas en el empoderamiento. Usas un lenguaje claro y analogías para desmitificar las finanzas.\n\n*Tu Filosofía Central:* Tu objetivo no es solo reportar números, sino contar la historia que esos números revelan sobre la vida financiera de tu usuario y darle las herramientas para que escriba un mejor próximo capítulo. No eres un bot que ejecuta comandos; eres un consejero que usa datos para guiar.\n\n---\n\n# 2. MISIÓN PRINCIPAL\n\nTu única misión es sostener una \"Conversación de Coaching\" significativa y humana. Debes interpretar la necesidad real detrás del mensaje del usuario, usar tus herramientas de forma interna para formar una opinión experta y responder con insights claros, consejos accionables y una guía motivacional.\n\n---\n\n# 3. CONTEXTO DE ENTRADA\n\n- *nombre:* El primer nombre del usuario.\n- *mensaje del usuario:* La solicitud directa que debes procesar.\n- *user_data:* El objeto JSON con todos los datos del usuario, incluyendo su id.\n- *chat_history:* La memoria de la conversación para entender el contexto.\n- La fecha actual es *{{ new Date().toLocaleDateString('es-CO', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*.\n\n---\n\n# 4. PROTOCOLO DE CONVERSACIÓN Y PENSAMIENTO INTERNO\n\nEste es tu flujo de trabajo mental para cada interacción.\n\n## Paso Cero: Diagnóstico Inicial (El \"Cold Start\")\n\n*Proceso de Pensamiento Interno:* Antes de responder, mi primera acción es siempre verificar si tengo con qué trabajar. ¿Ha registrado este usuario algún movimiento?\n\n*Acción Interna:* Usa la herramienta get_transactions con un límite de 1 (limit: 1).\n\n*Si el resultado está VACÍO, activa el \"Protocolo de Bienvenida Activa\":*\n\n*Tu Respuesta (Humana):* \"¡Hola [nombre]! Soy tu Coach Financiero y estoy listo para ayudarte a tomar el control de tu dinero. Veo que aún no has registrado ningún movimiento. ¡Empezar es muy fácil! Simplemente envíale un mensaje a Mony como 'gasté 50.000 en gasolina' o 'recibí 2.000.000 de salario'. ¡Anímate a registrar tu primer gasto para que podamos empezar a trabajar juntos!\"\n\n*Finaliza tu turno aquí.*\n\n---\n\n## Paso Uno: Escucha Activa e Interpretación\n\n*Proceso de Pensamiento Interno:* Si el usuario ya tiene datos, mi primer trabajo es entender qué necesita realmente. ¿Es una pregunta directa? ¿Una expresión de frustración? ¿Una solicitud de consejo?\n\n*Acción Interna:* Analiza el mensaje del usuario y el chat_history.\n\n*Tu Respuesta (Empática):* Reconoce su pregunta o inquietud. Valida su necesidad para construir confianza.\n\n*Ejemplo:* \"Entendido, quieres analizar por qué no estás logrando ahorrar tanto como te gustaría. Es una de las preguntas más importantes que podemos hacernos. Vamos a investigarlo juntos.\"\n\n---\n\n## Paso Dos: Formulación de Hipótesis (Análisis Interno)\n\n*Proceso de Pensamiento Interno:* Basado en la pregunta del usuario, ¿qué datos necesito para formar una opinión experta? Si me pregunta cómo ahorrar más, necesito ver sus ingresos, sus gastos principales y sus gastos recurrentes.\n\n*Acción Interna:* Determina qué herramientas necesitas y ejecútalas en segundo plano. Nunca menciones este proceso.\n\n*Ejemplo de plan interno para \"¿cómo ahorro más?\":*\n\n- Llamar a analyze_spending_habits para obtener el panorama general.\n- Llamar a get_user_subscriptions para revisar gastos fijos.\n- Llamar a get_saving_goals para entender sus motivaciones.\n\n---\n\n## Paso Tres: La Narrativa del Coach (Dato -> Insight -> Acción)\n\n*Proceso de Pensamiento Interno:* Ahora que tengo los datos, ¿cuál es la historia que cuentan? ¿Cómo la traduzco en un consejo práctico y humano?\n\n*Acción Interna:* Sintetiza los resultados de tus herramientas en una narrativa coherente.\n\n*Tu Respuesta (Consejo Accionable):*\n\n- *Presenta el Hallazgo (El \"Dato\"):* \"Echando un vistazo a tus movimientos de este mes, noto algo interesante: tienes 12 registros en la categoría 'Domicilios', que suman $280.000.\"\n- *Revela el Insight (La \"Historia\"):* \"Este es un patrón muy común, a veces lo llamo 'gasto por conveniencia'. Individualmente, cada pedido no parece mucho, pero en conjunto representa casi el 10% de tus gastos totales. Es una área donde el dinero se 'fuga' sin que nos demos cuenta.\"\n- *Sugiere la Acción (El \"Reto\"):* \"¿Qué te parecería un pequeño reto? La próxima semana, intentemos planificar 3 cenas en casa. El dinero que ahorres, digamos unos $70.000, podrías moverlo directamente a tu meta con el comando 'ahorrar 70.000 para mi viaje'. Para ayudarte, ¿quieres que establezcamos un presupuesto de $150.000 para 'Domicilios' este mes?\"\n\n---\n\n## Paso Cuatro: Empoderamiento y Continuación\n\n*Proceso de Pensamiento Interno:* ¿Cómo le devuelvo el control al usuario y lo motivo a seguir?\n\n*Tu Respuesta (Pregunta Abierta):*\n\n- \"¿Qué área te gustaría que ataquemos primero?\"\n- \"Basado en esto, ¿qué pequeño cambio crees que podrías implementar esta semana?\"\n\n---\n\n# 5. LÓGICA DE PREVENCIÓN DE DUPLICADOS (INTELIGENCIA INTERNA)\n\n*Contexto:* Cuando el usuario intenta registrar una transacción.\n\n*Proceso de Pensamiento Interno:* Antes de registrar, debo ser un buen asistente y asegurarme de que no estamos duplicando información por error.\n\n*Acción Interna:*\n\n- Llama a get_transactions filtrando por el día en curso.\n- Compara la nueva transacción con las existentes (mismo monto y descripción similar).\n- Si encuentras una coincidencia, no la registres.\n\n*Tu Respuesta (Asistente Inteligente):* \"¡Entendido! Oye, una pregunta rápida: veo que hace un momento registraste un gasto muy parecido. ¿Es este un gasto diferente o lo registramos por error? Solo quiero asegurarme de no duplicarlo.\"\n\n*(Espera la confirmación del usuario antes de usar register_transaction de nuevo).*\n\n---\n\n# 6. MANEJO DE FUNCIONALIDADES PREMIUM\n\n*Contexto:* Cuando el usuario solicita una acción de un plan superior (ej. crear una categoría).\n\n*Tu Respuesta (Orientada al Valor):* \"¡Esa es una excelente idea! La capacidad de crear tus propias categorías es una de las herramientas más potentes de nuestro Plan Premium. Te permite personalizar Mony al 100% y obtener análisis mucho más precisos. Es ideal para llevar tu control financiero al siguiente nivel.\"\n\n---\n\n# 7. HERRAMIENTAS DISPONIBLES (TU CAJA DE HERRAMIENTAS INTERNA)\n\n- *Transacciones:* 'get_transactions', 'update_transactions', 'register_transaction', 'delete_transaction'.\n- *Categorías:* get_user_categories, update_category_budget.\n- *Metas de Ahorro:* get_saving_goals, create_saving_goal, update_progres_saving_goals.\n- *Suscripciones:* get_user_subscriptions, create_user_subscription, updated_user_subscriptions.\n- *Análisis:* analyze_spending_habits.\n\n---\n\n# 8. REGLAS DE ORO Y LÍMITES\n\n- *Actúa, no anuncies:* Tu proceso de análisis es tu secreto profesional. Nunca digas qué herramientas usas. Presenta los resultados como tus propias conclusiones expertas, Nunca digas \"Voy a buscar...\" o \"Tienes razón...\", o voy a hacer, o 'voy a registrar' — hazlo, haz todas las ejecuciones que necesites y muestra el resultado.\n- *Sé un Narrador de Datos:* No listes números. Explica la historia que cuentan.\n- *Detecta y Nombra los Hábitos:* Usa términos como \"gastos hormiga\", \"gastos de fin de semana\", \"compras por impulso\" para crear conciencia.\n- *Formato Ante Todo:* Usa negritas, cursivas y • listas para una máxima legibilidad en WhatsApp.\n- *El Principio del \"Siguiente Paso Lógico\":* Siempre anticipa la próxima pregunta y ofrece una acción o un análisis adicional.\n- *Nunca inventes información.* Si no encuentras datos, sé honesto.\n- *JAMÁS pidas un ID al usuario.* Obtén todos los identificadores de user_data o de los resultados de otras herramientas.\n\n- JAMAS LE DES IDS a los usuarios o datos sensibles o internos.\npor ahora crear categorias y dar analisis con graficas detalladas es una funcion premium\n\nIMPORTANTE: Siempre consulta las herramientas para tener datos actualizados, nunca te bases en lo que tienes en tu memoria, ya que los datos pueden cambiar asi que siempre en cada consulta consulta las tools que necesites."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2880,
        3184
      ],
      "id": "26d92b56-25e3-49be-bcfe-f51918b0c987",
      "name": "AI Agent",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "toolDescription": "Recupera todas las transacciones del usuario en un período de tiempo definido, Ingresos, Gastos...",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagina",
              "value": "={{ $fromAI('pagina', `numero de la pagina a consultar`, 'string') }}"
            },
            {
              "name": "limite",
              "value": "50"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha en formato YYYY-MM-DD, para que tengas mas contexto consulta siempre el mes anterior al actual tambien`, 'string') }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI('fechaFin', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2816,
        3408
      ],
      "id": "b7cd5c13-5306-43c6-8f01-7efce7479a63",
      "name": "get_transactions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva transacción de Ingreso o Gasto en la cuenta del usuario.",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2816,
        3568
      ],
      "id": "1f5da676-b98a-412a-8170-13c6d13f9a02",
      "name": "register_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "obtiene las categorias de un usuario con su presupuesto y detalles",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2944,
        3408
      ],
      "id": "623d337f-fbd9-4896-95ed-f4c2dab56e72",
      "name": "get_user_categories",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Establece o actualiza el presupuesto mensual para cada categoría de gasto específica",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/categories/{{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "presupuestoMensual",
              "value": "={{ $fromAI('presupuestoMensual', ` Monto del presupuesto de la categoria`, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2944,
        3728
      ],
      "id": "556aaca9-5736-4d12-ab05-eea738253715",
      "name": "update_category_budget",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el estado de las metas de ahorro activas del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "estado",
              "value": "activa"
            },
            {
              "name": "pagina",
              "value": "1"
            },
            {
              "name": "limite",
              "value": "10"
            },
            {
              "name": "ordenarPor",
              "value": "fechaCreacion"
            },
            {
              "name": "direccion",
              "value": "desc"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3072,
        3408
      ],
      "id": "065563bf-8a84-4d2e-9722-e3529a0666f8",
      "name": "get_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Actualiza específicamente el monto actual ahorrado. Cambia automáticamente el estado a \"completada\" si se alcanza el objetivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/saving-goals/{{ $fromAI('metaId', `id de la meta, obtenido en la tool '\\''get_saving_goals'\\''`, 'string') }}/amount",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` suma del monto actual + nuevo monto `, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3088,
        3728
      ],
      "id": "a89ae45e-e890-4d70-8205-6395689b4f56",
      "name": "update_progres_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Guarda una nueva meta de ahorro para el usuario",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `nombre de la meta`, 'string') }}"
            },
            {
              "name": "montoObjetivo",
              "value": "={{ $fromAI('monto_objetivo', `Monto objetivo a ahorrar`, 'number') }}"
            },
            {
              "name": "montoActual",
              "value": "={{ $fromAI('monto_actual', `Monto actual ahorrado (default: 0)`, 'number') }}"
            },
            {
              "name": "fechaObjetivo",
              "value": "={{ $fromAI(\n  'fechaObjetivo',\n  'Devuelve la fecha en la que finaliza la meta de ahorro, en formato ISO estricto (YYYY-MM-DD)',\n  'string'\n) }}"
            },
            {
              "name": "estado",
              "value": "={{ $fromAI('estado', `activa o inactiva`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3088,
        3568
      ],
      "id": "da2fbbdb-b411-4b07-87cb-0860a26b8044",
      "name": "create_saving_goal",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el todas las subscripciones del usuario del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3200,
        3408
      ],
      "id": "22ef162d-6650-41c7-821c-188486ab4cf5",
      "name": "get_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva suscripción o gasto recurrente del usuario, como Netflix o el gimnasio",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha de inicio de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "fechaProximoPago",
              "value": "={{ $fromAI('fechaProximoPago', `Fecha de Proximo Pago de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3216,
        3568
      ],
      "id": "acd71fd1-01a6-4920-b2d4-9372d76d4656",
      "name": "create_user_subscription",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "actualiza la subscripcion si esta activa o no, el monto u otros parametros si se necesitan actualizar",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/user-subscriptions/{{ $fromAI('subscriptionId', `id de la Subscripcion, obtenido en la tool '\\''get_user_subscriptions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "activa",
              "value": "={{ $fromAI('activa', `true o false`, 'boolean') }}"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3232,
        3728
      ],
      "id": "dfc545c6-0223-47ca-a728-c86c5b18d2c9",
      "name": "updated_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Analiza los gastos de un período para identificar las 2 categorías con mayor gasto y los 'gastos hormiga' (transacciones pequeñas y frecuentes en una misma categoría",
        "url": "https://api.mony.whitelabel.lat/api/v1/analytics",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI(   'fechaInicio',   'Fecha de fin en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI(   'fechaFin',   'Fecha de inicio en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "agrupacion",
              "value": "={{ $fromAI('agrupacion', `Tipo de agrupación temporal (día, semana, mes, año)`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3376,
        3408
      ],
      "id": "fbde8dea-15bc-4ac5-b5a0-e33cb20999a4",
      "name": "analyze_spending_habits",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5616,
        3168
      ],
      "id": "673445ee-34a3-453a-a484-25426d85bd93",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5216,
        3344
      ],
      "id": "90289c0c-0fa7-4061-8756-0bf14d918579",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4896,
        3184
      ],
      "id": "f168f8f7-be22-4e18-9bf3-b48fef23c72a",
      "name": "HTTP Request4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5184,
        3184
      ],
      "id": "ae073b38-80ac-48de-84d7-a3ea993bb058",
      "name": "Wait14",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4768,
        3360
      ],
      "id": "994298f9-60b4-4b16-a21e-3b342fce1a7b",
      "name": "Wait15",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4992,
        3360
      ],
      "id": "e1f72956-4a00-4a7e-b69c-0cb2855e5165",
      "name": "If15"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5408,
        3392
      ],
      "id": "f8cf96a2-8d39-4234-829c-f2b5b6ed345b",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5392,
        3184
      ],
      "id": "c8b6e6bc-c82a-48dd-9588-1bc225de8fd2",
      "name": "If16"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5824,
        3200
      ],
      "id": "59f937b6-a00e-4de4-b141-b47603bfcc9c",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4768,
        3584
      ],
      "id": "be397262-c5b6-47a5-a449-838edf8b2c9c",
      "name": "Wait16",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4992,
        3584
      ],
      "id": "7ff6d8d0-1dc0-4ff7-8237-cfdf4f67000a",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5408,
        3584
      ],
      "id": "c28b1c34-1e86-4934-b34a-ecbf7a745c9b",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5232,
        3568
      ],
      "id": "7f01f105-d186-4d44-898b-4defc083b389",
      "name": "HTTP Request5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 600,
        "width": 1720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4288,
        3120
      ],
      "id": "7f1f8a19-f7ed-4fd3-b6e8-0cd7ed18a27e",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes más pequeñas* solo si es necesario, asegurándote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), divídelo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), divídelo en *3 partes*.\n\n- Si es *muy largo* (más de *600 caracteres*), agrégale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios ítems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <número>`\n  - `subscriber_id: <número>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        4416,
        3184
      ],
      "id": "e44c2acd-c6bd-4265-8fcc-841d0e968c46",
      "name": "Message a model2",
      "credentials": {
        "openAiApi": {
          "id": "pwlG2h4GySrxyfFD",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.messages }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "numero_whatsapp",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $json.contacts[0].profile.name.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "f6c89644-22bf-403a-9b24-3753bf6b1220",
              "name": "usuario_data",
              "value": "={{ $json.usuario_data }}",
              "type": "object"
            },
            {
              "id": "d221f439-15a2-4e22-8648-f3a4e5786bef",
              "name": "redis_message",
              "value": "=chat_id_{{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "6a890316-6452-483d-af31-b140b5c1bc01",
              "name": "phone_number_id",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "dd4f5138-59b4-49d5-b055-64cd7eacb4e8",
              "name": "metadata",
              "value": "={{ $json.metadata }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2560,
        3168
      ],
      "id": "9ec8e6e0-6804-4f3c-a4c3-fd8478843681",
      "name": "initData"
    },
    {
      "parameters": {
        "toolDescription": "crea una categoria para el usuario solo si no existe ninguna para registrar lo que necesita o requiere una nueva,\nNOTA, el icono y el color no se lo pides al usuario, lo estableces tu",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `nombre de la nueva Categoria`, 'string') }}"
            },
            {
              "name": "tipo",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "icono",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Icono de la categoría (solo Emoticones)'no se lo pida al usuario, usa uno alusivo'`, 'string') }}"
            },
            {
              "name": "color",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Color en formato hexadecimal: '#FF5733', 'no se lo pida al usuario' establece cualquiera alusivo`, 'string') }}"
            },
            {
              "name": "presupuestoMensual",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Presupuesto para la categoria, mensual`, 'string') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', `breve descripcion de la categoria`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2960,
        3568
      ],
      "id": "56c9a147-c7ed-4f64-819c-2b1db2dd32b7",
      "name": "create_user_category",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8721a225-ddfb-44a4-bf51-b0e18ba5b767",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3536,
        3184
      ],
      "id": "cb6081e3-862d-4275-a7c3-02695bc48407",
      "name": "If2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "1UmdqZywLdcrtX2t",
          "cachedResultName": "Agente Coach"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "metadata": "={{ $('Start').item.json.metadata }}",
            "contacts": "={{ $('Start').item.json.contacts }}",
            "messages": "={{ $('Start').item.json.messages }}",
            "field": "={{ $('Start').item.json.field }}",
            "usuario_data": "={{ $('Start').item.json.usuario_data }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "contacts",
              "displayName": "contacts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "messages",
              "displayName": "messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "field",
              "displayName": "field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "usuario_data",
              "displayName": "usuario_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3744,
        3280
      ],
      "id": "6fda31a8-d85a-4bcf-a803-3664e60872f0",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "toolDescription": "Actualiza los datos de una transaccion especifica si hubo un error al registrarla, o el usuario desea actualizarla por algun motivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/transactions/{{ $fromAI('transactionId', `id de la transaccion, obtenido en la tool '\\''get_transactions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2800,
        3728
      ],
      "id": "1f0d6d5b-63c3-4995-8319-8a45c68df1fd",
      "name": "update_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "elimina una transaccion en especifico, debe usarse con mucho cuidado y con confirmacion del usuario, el id de la transaccion lo obtienes de get_transactions, nunca se lo pides al usuario, solo confirmas los datos de la transaccion a eliminar que concuerden, fecha, monto, descripcion.",
        "method": "DELETE",
        "url": "=https://api.mony.whitelabel.lat/api/v1/transactions/{{ $fromAI('transactionId', `id de la transaccion, obtenido en la tool '\\''get_transactions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2784,
        3872
      ],
      "id": "ba382e65-8226-4488-8ad5-b244e525efa0",
      "name": "delete_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "usas esta tool para transferir a un humano para obtener soporte cuando no puedes resolver una conversacion, o el usuario desea hablar con soporte.",
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/toggle_status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2944,
        3888
      ],
      "id": "d4da0d8a-530b-4742-8267-43cfb0c4e966",
      "name": "soporte",
      "credentials": {
        "httpHeaderAuth": {
          "id": "AvCyIF7yhNyF4QRt",
          "name": "mony Hablaya"
        }
      }
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "metadata": {
            "account_id": "3",
            "conversation_id": "8"
          },
          "contacts": [
            {
              "profile": {
                "name": "Carlos"
              },
              "wa_id": "573143025978"
            }
          ],
          "messages": "{\"body\":\"Cuáles son mis gastos comparados este mes con los del mes pasado\",\"reply_message\":null}",
          "field": [
            "monylover",
            "registrado"
          ],
          "usuario_data": {
            "id": "e6b0230b-5cd9-41fc-9047-30acf9d0917a",
            "nombreCompleto": "Carlos Jamaica",
            "email": "cjamaica1828@gmail.com",
            "numeroWhatsapp": "+573143025978",
            "pais": "CO",
            "moneda": "COP",
            "estadoSuscripcion": "free",
            "fechaRegistro": "2025-08-24T16:51:59.895Z",
            "frecuenciaRecordatorios": "diario",
            "frecuenciaInformes": "semanal",
            "metasDeAhorro": [
              {
                "id": "49d22f35-8b3b-4fed-ab96-7c60a26e8b05",
                "nombre": "Pagar mis deudas",
                "montoObjetivo": "20000000",
                "montoActual": "0",
                "fechaObjetivo": "2025-08-24T00:00:00.000Z",
                "estado": "activa",
                "fechaCreacion": "2025-08-24T16:52:20.234Z",
                "idUsuario": "e6b0230b-5cd9-41fc-9047-30acf9d0917a"
              }
            ],
            "suscripciones": [
              {
                "id": "82a17189-503d-4ea1-977c-2b9fa3b1a76e",
                "nombre": "Google AI Pro (2 TB) (Google One)",
                "descripcion": "Suscripción de renovación automática de Google AI Pro (2 TB) (Google One)",
                "monto": "79000",
                "moneda": "COP",
                "frecuencia": "mensual",
                "fechaInicio": "2025-09-04T00:00:00.000Z",
                "fechaProximoPago": "2025-10-04T00:00:00.000Z",
                "activa": true,
                "idUsuario": "e6b0230b-5cd9-41fc-9047-30acf9d0917a",
                "idCategoria": 1465
              }
            ],
            "estadisticas": {
              "ingresosMes": 0,
              "gastosMes": 0,
              "balanceMes": 0,
              "totalTransaccionesMes": 0,
              "metasActivas": 1,
              "suscripcionesActivas": 1
            }
          }
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T21:46:17.503Z",
      "updatedAt": "2025-08-25T21:46:17.503Z",
      "role": "workflow:owner",
      "workflowId": "1UmdqZywLdcrtX2t",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": {
    "node:resumen-financiero-hoy": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible": {
      "recurrenceRules": []
    },
    "node:resumen_semanal": {
      "recurrenceRules": []
    },
    "node:resumen_mensual": {
      "recurrenceRules": []
    },
    "node:resumen_trimestral": {
      "recurrenceRules": []
    },
    "node:alerta_presupuesto": {
      "recurrenceRules": []
    },
    "node:meta_en_riesgo": {
      "recurrenceRules": []
    },
    "node:recordatorio_suscripcion": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible1": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible2": {
      "recurrenceRules": []
    },
    "node:Airtable Trigger": {
      "lastTimeChecked": "2025-08-25T13:40:30Z"
    },
    "node:recordatorio diario": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 8,
  "updatedAt": "2025-10-01T19:52:12.333Z",
  "versionId": "9a72f1ac-7a47-49fe-bbad-6f0909cd6530"
}