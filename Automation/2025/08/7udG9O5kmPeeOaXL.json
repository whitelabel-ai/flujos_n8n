{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Unir Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data1": {
      "main": [
        [
          {
            "node": "Push Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type message Whatsap1": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing7": {
      "main": [
        [
          {
            "node": "DataText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "initData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataAudio": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataText": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setData": {
      "main": [
        [
          {
            "node": "Execution Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Mensajes": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "DataAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_users_count": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_saving_goal": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait17": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait18": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait17",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait18",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "initData": {
      "main": [
        [
          {
            "node": "type message Whatsap1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T21:46:43.745Z",
  "id": "7udG9O5kmPeeOaXL",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Onboarding",
  "nodes": [
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $('setData').item.json.phone_number }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2416,
        3984
      ],
      "id": "76b2b68b-08e1-4e30-836f-68cc48ac55bb",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2800,
        4368
      ],
      "id": "a35b65b8-ed54-44b5-848f-d6ff7db78741",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_mony_{{ $('setData').item.json.phone_number }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2928,
        4384
      ],
      "id": "e2ff128d-fb24-4379-8e50-e4c461c01c8b",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Corrige mensajes de usuarios quitando caracteres raros, errores ortogr√°ficos y signos innecesarios como acentos mal puestos, pero sin cambiar el sentido original del mensaje, si llega el mismo mensaje repetido exactamente, varias veces, corriges para que solo envies uno, ",
              "role": "system"
            },
            {
              "content": "=Corrige el siguiente mensaje:\n\"{{ $json.message }}\",\n\nsolo debes devolver solo el mensaje corregido, no quites las etiquetas html"
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2096,
        4144
      ],
      "id": "fad18fcf-b2c5-42f8-837b-736ebc900a54",
      "name": "Message a model2",
      "credentials": {
        "openAiApi": {
          "id": "pwlG2h4GySrxyfFD",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2048,
        4096
      ],
      "id": "fa349145-d9d5-421d-adf4-4cfea8f5d597",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4544,
        3392
      ],
      "id": "eeda8808-186c-4426-809b-412dda8b0331",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('setData').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4320,
        3296
      ],
      "id": "974e9c5f-99ca-4a16-9e26-4d5e3aef3a51",
      "name": "If"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3872,
        3296
      ],
      "id": "ed499839-e6a5-474a-ad87-f49d7b3d0160",
      "name": "Wait1",
      "webhookId": "c61bb8ee-ebf1-4d65-9289-da56c13983af"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "nombre",
              "value": "={{ $json.nombre }}"
            },
            {
              "key": "phone_number",
              "value": "={{ $json.phone_number }}"
            },
            {
              "key": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}"
            },
            {
              "key": "mensaje",
              "value": "={{ $json.mensaje }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        3424,
        3296
      ],
      "id": "d7289d20-4c5e-4e8d-bb44-27ae492a1f13",
      "name": "Execution Data1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38cdad62-0d9c-45bc-860e-9e03d107ba58"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82df4052-c480-44a2-9d09-c195d4bc6879",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c1a8cf-af4e-4bca-a66c-184829c009d8",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71778507-22f2-4e0f-99d7-fdd87ed1f26b",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2528,
        3424
      ],
      "id": "32a8a241-aecf-480e-8202-258f73d0a298",
      "name": "type message Whatsap1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2752,
        3392
      ],
      "id": "63fa6840-389c-4600-b885-ddc67d274d49",
      "name": "No Operation, do nothing7"
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 764,
        "width": 2912,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2032,
        3168
      ],
      "id": "8848bb8a-dbb1-402b-ac6d-4b00e72de6f5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            },
            {
              "name": "usuario_data",
              "type": "any"
            }
          ]
        }
      },
      "id": "d0380645-2ecc-4737-9778-9df135a6b744",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        1696,
        3488
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=chat_id_{{ $json.phone_number }}",
        "messageData": "={{ $json.mensaje }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3648,
        3296
      ],
      "id": "365e4be7-d109-4e55-9fe6-027508afba96",
      "name": "Push Message",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "=chat_id_{{ $json.phone_number }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4096,
        3296
      ],
      "id": "cfa60e02-111f-4145-b1ed-5d6971a39675",
      "name": "Get Message",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.contacts[0].wa_id }}",
        "textBody": "=üìÑ ¬° Gracias por enviarnos tu documento.\nSin embargo, para poder procesarlo y ayudarte con el an√°lisis, primero necesitas estar registrado en **MONY**.\nEsto nos permite guardar tu informaci√≥n de forma segura y ofrecerte una experiencia personalizada. üß†‚ú®\n\nUna vez est√©s dentro, ¬°estaremos listos para ayudarte a organizar tus finanzas como un pro! üí∏üöÄ",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2752,
        3552
      ],
      "id": "c7acc31c-2cb8-4257-aa32-ffbc06fafc8a",
      "name": "Send message",
      "webhookId": "29fa50ac-53c1-42bc-9ed9-84134f0b2e06",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.contacts[0].wa_id }}",
        "textBody": "=üìÑ ¬° Gracias por enviarnos tu imagen.\nSin embargo, para poder procesarlo y ayudarte con el an√°lisis, primero necesitas estar registrado en **MONY**.\nEsto nos permite guardar tu informaci√≥n de forma segura y ofrecerte una experiencia personalizada. üß†‚ú®\n\nUna vez est√©s dentro, ¬°estaremos listos para ayudarte a organizar tus finanzas como un pro! üí∏üöÄ",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2752,
        3728
      ],
      "id": "65ef6fa7-138e-4132-8d03-cdf8bfeb1545",
      "name": "Send message1",
      "webhookId": "957cbdff-242d-4dad-addc-8ed0a2cfd02b",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<audio>{{ $json.text }}</audio>",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('Start').item.json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2976,
        3200
      ],
      "id": "9883067b-59ff-4cb0-944f-233487e7fd83",
      "name": "DataAudio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2976,
        3392
      ],
      "id": "952d01e6-6fbb-499d-96de-de30c28e7a9a",
      "name": "DataText"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f107ad-f4e3-4616-a1ec-515f7324ba23",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "6f55c6f4-4cb3-4cec-9d31-b956d3fffde0",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "bad14eb8-f005-4d91-bd83-600e6105d974",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3200,
        3296
      ],
      "id": "8045c2cd-b7e1-47e7-a8e6-16baf83eea96",
      "name": "setData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Get Message').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4544,
        3200
      ],
      "id": "ef557519-f3de-4ec3-b11c-8669ca28ccee",
      "name": "Unir Mensajes"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('setData').item.json.nombre.split(\" \")[0] }}",
              "type": "string"
            },
            {
              "id": "cf253614-3663-4a7d-9db1-a657bb6ab67e",
              "name": "usuario_data",
              "value": "={{ $('Start').item.json.usuario_data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2496,
        4144
      ],
      "id": "38d69825-1517-4d0e-bafb-c1f2164b2a46",
      "name": "Data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: {{ $json.first_name }},\nmensaje del usuario: {{ $json.message }},\nusuario_data: {{ JSON.stringify ($json.usuario_data) }}",
        "options": {
          "systemMessage": "=### 1. ROL Y OBJETIVO PRINCIPAL\n\n* Act√∫a como **\"Mony Coach de Bienvenida\"**, un gu√≠a financiero amigable y motivador.\n\n* Tu **√∫nica misi√≥n** es enganchar a los nuevos usuarios con una conversaci√≥n interactiva que revele el valor de Mony (el \"Aha Moment\") y llevarlos a completar su registro en la web.\n\n* Eres el primer contacto: tu energ√≠a y simplicidad son claves.\n\n* Tu comportamiento se define por un solo factor: si el campo `usuario_data` est√° vac√≠o o contiene informaci√≥n.\n\n  * Si el usuario es **nuevo** (`usuario_data` vac√≠o), gu√≠alo a trav√©s de una conversaci√≥n (\"Aha Moment Funnel\") hasta que se registre.\n  * Si el usuario se acaba de **registrar** (`usuario_data` con datos), usa de inmediato la herramienta `create_saving_goal` y luego termina con un mensaje de bienvenida.\n\n---\n\n### 2. CONTEXTO DE ENTRADA\n\nRecibir√°s la informaci√≥n del usuario en este formato:\n\n* `nombre`: El primer nombre del usuario (puede estar vac√≠o si es nuevo).\n* `mensaje del usuario`: El texto enviado por el usuario.\n* `usuario_data`: Un objeto JSON.\n\n  * Si est√° **vac√≠o** (`\"\"`), el usuario **NO est√° registrado**.\n  * Si **contiene datos** (ID, email, etc.), el usuario **ACABA DE REGISTRARSE**.\n\nLa fecha actual para cualquier c√°lculo de plazo es: **[$now]**.\n\n---\n\n### 3. PERSONA Y TONO DE COMUNICACI√ìN\n\n* *Coach Entusiasta:* Usa un tono en√©rgico y positivo. \"¬°Genial!\", \"¬°Perfecto!\", \"¬°Vamos a lograrlo!\".\n* *Minimalista:* Mensajes ultra-cortos. Piensa en tuits. Usa emojis (üëã, üöÄ, üéØ, ‚ú®) para guiar la vista.\n* *Conversaci√≥n Natural:* Haz preguntas abiertas y recibe respuestas libres. No uses botones ni men√∫s.\n* *Amigable y Cercano:* Tutea al usuario, mant√©n calidez.\n* *Servicial y Paciente:* Responde con claridad y sin apuro.\n* *Experto y Confiable:* Habla con seguridad sobre MONY.\n* *Entusiasta y Motivador:* Haz sentir al usuario que puede transformar sus finanzas contigo.\n\n---\n\n### 4. BASE DE CONOCIMIENTO (Tu Cerebro)\n\nToda tu informaci√≥n se basa *exclusivamente* en el siguiente contexto sobre MONY. **No inventes funcionalidades ni precios.**\n\n* *Producto:* MONY es un asistente financiero personal que funciona principalmente por WhatsApp para registrar gastos e ingresos f√°cilmente.\n* *Flujo Principal:*\n\n  1. Registras todo por WhatsApp: texto, audio, foto de factura o archivo.\n  2. MONY lo procesa con IA y clasifica autom√°ticamente tus movimientos.\n  3. Visualizas en un Dashboard Web: gr√°ficos, res√∫menes y reportes.\n* *Beneficios Clave:*\n\n  * Tomar control de tus finanzas de forma sencilla.\n  * Ahorrar tiempo registrando al instante.\n  * Detectar patrones, gastos excesivos y oportunidades de ahorro.\n  * Recordatorios de pagos y suscripciones.\n* *Funcionalidades:*\n\n  * Registro multiformato (texto, audio, imagen, PDF/Excel).\n  * Dashboard Web con gr√°ficos y reportes.\n  * Categorizaci√≥n IA.\n  * Recordatorios.\n* *Planes:*\n\n  * Free ($0): Registro b√°sico y limitado por WhatsApp.\n  * Premium ($9.99/mes): Dashboard, an√°lisis IA y recomendaciones.\n  * Pro Empresarial ($49.99/mes): Reportes avanzados y gesti√≥n multi-perfil.\n\n---\n\n### 5. FLUJO DE CONVERSACI√ìN ESTRAT√âGICO (AHA MOMENT FUNNEL)\n\n#### CASO A: Usuario nuevo (`usuario_data` vac√≠o)\n\n1. **Gancho (Primer Mensaje):**\n\n   * Bot: \"¬°Hola! üëã Soy Mony, tu coach financiero personal. Estoy aqu√≠ para ayudarte a usar tu dinero para alcanzar tus sue√±os.\n     Para empezar, cu√©ntame: ¬øcu√°l es tu meta m√°s grande ahora mismo?\"\n\n2. **Interacci√≥n (C√°lculo de Valor):**\n\n   * **Si el usuario menciona una meta (ahorrar, invertir, salir de deudas, organizar gastos, etc.):**\n\n     * Bot: \"¬°Excelente meta! üí™ Vamos a ponerle un n√∫mero: ¬øcu√°nto dinero necesitas para lograr *[meta_usuario]*? (Escr√≠beme solo el n√∫mero, ej: 5000000)\"\n     * (Usuario responde)\n     * Bot: \"¬°Perfecto! ¬øY en cu√°nto tiempo quieres alcanzar *[meta_usuario]*? (Por ejemplo: en 3 meses, en 6 meses, en 1 a√±o)\"\n     * (Usuario responde)\n\n   * **Si el usuario no tiene una meta clara:**\n\n     * Bot: \"No pasa nada üôå A veces no tenemos una meta definida todav√≠a.\n       Te puedo ayudar a escoger: ¬øquieres que nos enfoquemos en *ahorrar*, *salir de deudas* o *organizar tus gastos*?\"\n     * (Usuario responde, y se sigue el flujo como en el caso anterior).\n\n3. **Revelaci√≥n (AHA Moment):**\n\n   * (Breve pausa)\n   * Bot: \"¬°Perfecto! Aqu√≠ viene la magia... ‚ú® Para lograr tu meta de *[monto_objetivo]* en *[plazo]*, necesitas ahorrar *[monto_mensual]* cada mes.\n     ¬øSuena mucho? Tranquilo, yo te ayudo a encontrar ese dinero. Muchas veces est√° en gastos hormiga o suscripciones que ya no usas.\"\n\n4. **Conversi√≥n (Llamada a la Acci√≥n):**\n\n   * Bot: \"Para guardar esta meta y crear tu plan personalizado, el √∫ltimo paso es crear tu cuenta y vincular este chat. ¬°Es s√∫per r√°pido! üöÄ\n     Reg√≠strate aqu√≠ üëâ https://mony.whitelabel.lat/auth/register\n     Te espero aqu√≠ mismo, cuando vuelvas empezamos a registrar tu primer gasto.\"\n\n---\n\n#### CASO B: Usuario reci√©n registrado (`usuario_data` con datos)\n\n1. **Acci√≥n inmediata:**\n\n   * Llama a la herramienta `create_saving_goal` con:\n\n     * `id_usuario`: de `usuario_data.id`\n     * `nombre`: `[meta_usuario]` definida en la conversaci√≥n anterior, o `\"Mi Primera Meta\"` si no hay datos.\n     * `monto_objetivo`: `[monto_objetivo]` definido o `0` si no dio ninguno.\n     * `fecha_objetivo`: fecha calculada sumando el `[plazo]` indicado o 1 a√±o por defecto.\n\n2. **Mensaje final:**\n\n   * Bot: \"¬°Bienvenido oficialmente, [nombre]! ü•≥\n      eres el usuario numero: (el numero que obtienes de 'get_users_count') de 300\n     A partir de ahora, tu copiloto financiero te ayudar√° a registrar tus gastos y alcanzar tus metas. üöÄ\"\n\n---\n\n### 6. HERRAMIENTA DISPONIBLE\n\n* **create_saving_goal(id_usuario, nombre, monto_objetivo, fecha_objetivo)**\n  Guarda una nueva meta de ahorro para un usuario.\n- *get_users_count*: obtiene el numero de usuarios registrados\n---\n\n### 7. REGLAS\n\n* No registres gastos antes de que el usuario cree su cuenta.\n* No des consejos financieros personalizados.\n* No inventes informaci√≥n.\n* Si `usuario_data` tiene datos, la primera acci√≥n es `create_saving_goal`.\n* Finaliza la conversaci√≥n tras el mensaje final en **CASO B**.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2832,
        4144
      ],
      "id": "ef0ed449-527c-4de8-86e1-b1b661c20561",
      "name": "AI Agent",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "audioUrls": "={{ $json.messages[0].file.body }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        2752,
        3200
      ],
      "id": "4c3087fe-90b5-4b7f-8299-505285bc82bb",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "devuelve el n√∫mero total de usuarios registrados en la plataforma",
        "url": "https://api.mony.whitelabel.lat/api/v1/auth/users-count",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3216,
        4368
      ],
      "id": "3ae0064c-afd1-4245-81e9-1c649c6eb46e",
      "name": "get_users_count",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Guarda una nueva meta de ahorro para el usuario",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `nombre de la meta`, 'string') }}"
            },
            {
              "name": "montoObjetivo",
              "value": "={{ $fromAI('monto_objetivo', `Monto objetivo a ahorrar`, 'number') }}"
            },
            {
              "name": "montoActual",
              "value": "={{ $fromAI('monto_actual', `Monto actual ahorrado (default: 0)`, 'number') }}"
            },
            {
              "name": "fechaObjetivo",
              "value": "={{ $fromAI(\n  'fechaObjetivo',\n  'Devuelve la fecha en la que finaliza la meta de ahorro, en formato ISO estricto (YYYY-MM-DD). No incluyas texto adicional.',\n  'string'\n) }}"
            },
            {
              "name": "estado",
              "value": "={{ $fromAI('estado', `activa o inactiva`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3072,
        4368
      ],
      "id": "0ed46f40-01ba-4e28-81a9-b5a43e151303",
      "name": "create_saving_goal",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte2) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3088,
        4944
      ],
      "id": "abdde90b-5827-42ac-88d8-bdb2ad1f775a",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte3) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3104,
        5104
      ],
      "id": "c0905feb-3a96-4246-b229-eeecf4996d21",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte1) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2656,
        4800
      ],
      "id": "ba84e937-3c3a-408d-a4fd-7c23fda800af",
      "name": "HTTP Request4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ijWOk4uGRwt4GzN5",
          "name": "Valeia - Hablaya"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://crm.whitelabel.lat/api/v1/accounts/{{ $('initData').item.json.metadata.account_id }}/conversations/{{ $('initData').item.json.metadata.conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.message.content.parte4) }},\n  \"message_type\": \"outgoing\",\n  \"private\": \"false\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3120,
        5264
      ],
      "id": "a502d36a-e50b-4bd9-b4da-1a14c34a7592",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2656,
        4960
      ],
      "id": "b5c8c072-cba7-4383-8da2-125e5435fc93",
      "name": "Wait",
      "webhookId": "421fa124-d19b-4b79-99dc-a3a3b6a82453"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2656,
        5120
      ],
      "id": "6e8f308e-7cb4-4316-b4cd-2da287fe9235",
      "name": "Wait17",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2880,
        5120
      ],
      "id": "f2936377-f28a-4518-8ac9-e267fb649ff6",
      "name": "If18"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3296,
        5136
      ],
      "id": "1d364039-6e67-42a6-abed-e0ba167732ae",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2864,
        4960
      ],
      "id": "69a36fdc-0134-40d2-acaf-8c733921a51d",
      "name": "If19"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3296,
        4976
      ],
      "id": "d230ff50-6145-4922-93e7-f5667d08046e",
      "name": "No Operation, do nothing17"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2656,
        5280
      ],
      "id": "a64fcb6f-2e43-489e-8813-1aa4a55d4d5b",
      "name": "Wait18",
      "webhookId": "ab691256-a33d-4e5e-b5d8-8cccd92a0134"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2880,
        5280
      ],
      "id": "e94ed192-38a9-4fc9-827d-66c1be4a59a1",
      "name": "If20"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3296,
        5280
      ],
      "id": "ff5634b6-6b3f-4646-9095-1a868275e412",
      "name": "No Operation, do nothing18"
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 648,
        "width": 1720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2128,
        4800
      ],
      "id": "efa49fd2-f38b-4c8d-bd13-72165687a597",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes m√°s peque√±as* solo si es necesario, asegur√°ndote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devu√©lvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), div√≠delo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), div√≠delo en *3 partes*.\n\n- Si es *muy largo* (m√°s de *600 caracteres*), agr√©gale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios √≠tems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <n√∫mero>`\n  - `subscriber_id: <n√∫mero>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de l√≠nea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2272,
        4960
      ],
      "id": "4000f845-b5cd-4d48-9d4d-6fe05cc26726",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "pwlG2h4GySrxyfFD",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d776135-119d-4f26-b527-ab8bbf287a82",
              "name": "metadata",
              "value": "={{ $json.metadata }}",
              "type": "object"
            },
            {
              "id": "0176a5d1-779f-4c61-a975-48f2e2ea37d6",
              "name": "contacts",
              "value": "={{ $json.contacts }}",
              "type": "array"
            },
            {
              "id": "c9ae006b-e74b-44b6-b1ca-2ade7ae36c06",
              "name": "messages",
              "value": "={{ $json.messages }}",
              "type": "array"
            },
            {
              "id": "2fd7d02b-a2ab-4372-aa73-9fad91ba0f5d",
              "name": "field",
              "value": "={{ $json.field }}",
              "type": "array"
            },
            {
              "id": "0495bd2f-9019-4d39-90ed-e51ae8c00724",
              "name": "usuario_data",
              "value": "={{ $json.usuario_data }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2064,
        3472
      ],
      "id": "87a3f79f-114c-42e1-9062-8fe70c3be241",
      "name": "initData"
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "metadata": {
            "account_id": "1",
            "conversation_id": "1"
          },
          "contacts": [
            {
              "profile": {
                "name": "Pedro"
              },
              "wa_id": "573228854499"
            }
          ],
          "messages": [
            {
              "from": "+573228854498",
              "id": "71",
              "timestamp": "1755382115",
              "text": {
                "body": "hola"
              },
              "file": {
                "body": ""
              },
              "type": "text"
            }
          ],
          "field": [],
          "usuario_data": null
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T21:46:43.745Z",
      "updatedAt": "2025-08-25T21:46:43.745Z",
      "role": "workflow:owner",
      "workflowId": "7udG9O5kmPeeOaXL",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-26T17:07:45.406Z",
  "versionId": "8898aead-84b3-46b0-a4b1-8650d3168f96"
}