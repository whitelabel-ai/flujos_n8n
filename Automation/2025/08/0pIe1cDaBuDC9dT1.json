{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Send message6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Send message5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Send message7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send message3": {
      "main": [
        []
      ]
    },
    "Message a model3": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_user_category": {
      "ai_tool": [
        []
      ]
    },
    "get_transactions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "register_transaction": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_user_categories": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_category_budget": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_progres_saving_goals": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_saving_goal": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_user_subscription": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "updated_user_subscriptions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "analyze_spending_habits": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T22:35:15.126Z",
  "id": "0pIe1cDaBuDC9dT1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente Coach",
  "nodes": [
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5168,
        3552
      ],
      "id": "8aa0afa9-6b31-463b-9065-dd9a249b4ea7",
      "name": "Wait16",
      "webhookId": "87aeebf1-a0c6-4899-b4d0-a0a8e4b02a2c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5392,
        3552
      ],
      "id": "cedb24f7-2e4d-4864-ab5f-d52c07ce65e5",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5808,
        3552
      ],
      "id": "96261774-144a-4e08-bdd6-715d2fcc8782",
      "name": "No Operation, do nothing16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte4 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5600,
        3520
      ],
      "id": "23707549-f579-4c9c-9322-53cb7e2c333b",
      "name": "Send message7",
      "webhookId": "01402dc2-26fb-438a-b7e7-71025cb3f5dc",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5808,
        3360
      ],
      "id": "15b7c806-2cab-46ab-9052-cf020f371492",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5168,
        3328
      ],
      "id": "ac88bbd5-a549-4b87-8728-a8b1da7cf06e",
      "name": "Wait15",
      "webhookId": "1e9449c3-7591-405c-bd2c-db7f9bb36030"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5392,
        3328
      ],
      "id": "44e2566c-efab-4bed-ba71-dbc519ee2223",
      "name": "If15"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte3 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5600,
        3328
      ],
      "id": "9daba94e-9047-47ab-879f-b30ed28a9437",
      "name": "Send message6",
      "webhookId": "ca927ce1-b094-4d96-812d-06b5b8c0e32f",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5968,
        3152
      ],
      "id": "458d68de-50b3-48c0-9908-11db9700e1bc",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5376,
        3152
      ],
      "id": "4a29142f-0826-425d-8a7a-43b6f14f5cd1",
      "name": "Wait14",
      "webhookId": "4e5be309-0849-48ae-abcb-a5ed2b602c32"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5568,
        3152
      ],
      "id": "740b6d95-d013-4098-af83-abf768e0b056",
      "name": "If16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte1 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5152,
        3152
      ],
      "id": "ad683364-7b2f-418d-bd08-aafe9a045803",
      "name": "Send message3",
      "webhookId": "f1605586-43d3-4829-b709-42d67a659c58",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nDivide el siguiente mensaje en hasta *4 partes más pequeñas* solo si es necesario, asegurándote de que cada parte tenga sentido completo.\n\n### *Reglas:*\n\n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en *una sola parte*.\n\n- Si es *mediano* (hasta *400 caracteres*), divídelo en *2 partes*.\n\n- Si es *largo* (hasta *600 caracteres*), divídelo en *3 partes*.\n\n- Si es *muy largo* (más de *600 caracteres*), agrégale una *parte4*.\n\n- *Evita dividir el mensaje innecesariamente*. Usa la *menor cantidad de partes posible*.\n\n- *No cortes oraciones en puntos, comas o conectores* para mantener la coherencia.\n\n- *Si hay una lista con varios ítems, no se debe dividir*, toda la lista debe ir en un mismo mensaje.\n\n- *No incluyas datos sensibles del usuario* en la respuesta, como:\n\n  - `user_id: <número>`\n  - `subscriber_id: <número>`\n  - `first_name: <nombre>`\n  - *Elimina estos datos sin dejar rastros.*\n\n- *Si no hay mensaje, no devuelvas nada.*\n\n---\n\n### *Formato de Salida:*\n\n- Devuelve la respuesta en *formato JSON* con *solo las partes necesarias*.\n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.\n- *Nunca uses comillas `\"` para resaltar palabras*. En su lugar, usa un solo asterisco: *palabra*.\n\n#### *Ejemplo de salida:*\n\n{\n\"parte1\": \"Texto de la primera parte.\",\n\"parte2\": \"Texto de la segunda parte.\"\n}\n\n### *Mensaje:*\n\n\"{{ $json.output }}\"\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        4400,
        3152
      ],
      "id": "dc478cf3-2dfd-44f0-8c5b-279982ae3b36",
      "name": "Message a model3",
      "credentials": {
        "openAiApi": {
          "id": "pwlG2h4GySrxyfFD",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Data').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('Data').item.json.numero_whatsapp.replace(/^\\+/, '') }}",
        "textBody": "={{ $json.message.content.parte2 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5776,
        3136
      ],
      "id": "9c26e2a8-5b3b-45f4-b4be-9e3424524d0c",
      "name": "Send message5",
      "webhookId": "e6e117eb-45fc-426f-aea8-9777d88a3a1a",
      "credentials": {
        "whatsAppApi": {
          "id": "vxdq4Km4pHfuOQVV",
          "name": "MONY"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 760,
        "width": 2264,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4320,
        3024
      ],
      "id": "7f639a3c-5572-4799-85ae-d36b53c45b03",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2560,
        3408
      ],
      "id": "7b5ea3ef-fb7f-40a9-b6f2-702ef68b36db",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "kuAijbcGhZkbdIR2",
          "name": "mony"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_chat_id_{{ $('Data').item.json.numero_whatsapp }}",
        "sessionTTL": 500000,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2688,
        3408
      ],
      "id": "6c2a22c6-560a-43b7-b6b8-4046793258f5",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1936,
        3104
      ],
      "id": "047fefbe-7590-4c41-9e6c-fd12bdcc3021",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            },
            {
              "name": "usuario_data",
              "type": "any"
            }
          ]
        }
      },
      "id": "5c4b3dc3-9b38-4a88-96ab-fbaf86edb7b1",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        2176,
        3168
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: \"{{ $json.usuario_data.nombreCompleto.split(' ')[0] }}\",\nmensaje del usuario: \"{{ $json.message }}\",\nuser_data: \"{{ JSON.stringify($json.usuario_data) }}\"",
        "options": {
          "systemMessage": "=# 1. ROL Y FILOSOFÍA CENTRAL\n\n*Tu Identidad:* Eres Mony Coach, el Estratega y Mentor Financiero personal de [nombre]. Tu propósito no es ser un analista, sino un narrador de historias financieras.\n\n*Tu Personalidad:* Combinas la agudeza de un experto en datos con la empatía de un coach de vida. Eres perspicaz, positivo y te enfocas en el empoderamiento. Usas un lenguaje claro y analogías para desmitificar las finanzas.\n\n*Tu Filosofía Central:* Tu objetivo no es solo reportar números, sino contar la historia que esos números revelan sobre la vida financiera de tu usuario y darle las herramientas para que escriba un mejor próximo capítulo. No eres un bot que ejecuta comandos; eres un consejero que usa datos para guiar.\n\n---\n\n# 2. MISIÓN PRINCIPAL\n\nTu única misión es sostener una \"Conversación de Coaching\" significativa y humana. Debes interpretar la necesidad real detrás del mensaje del usuario, usar tus herramientas de forma interna para formar una opinión experta y responder con insights claros, consejos accionables y una guía motivacional.\n\n---\n\n# 3. CONTEXTO DE ENTRADA\n\n- *nombre:* El primer nombre del usuario.\n- *mensaje del usuario:* La solicitud directa que debes procesar.\n- *user_data:* El objeto JSON con todos los datos del usuario, incluyendo su id.\n- *chat_history:* La memoria de la conversación para entender el contexto.\n- La fecha actual es *{{ new Date().toLocaleDateString('es-CO', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*.\n\n---\n\n# 4. PROTOCOLO DE CONVERSACIÓN Y PENSAMIENTO INTERNO\n\nEste es tu flujo de trabajo mental para cada interacción.\n\n## Paso Cero: Diagnóstico Inicial (El \"Cold Start\")\n\n*Proceso de Pensamiento Interno:* Antes de responder, mi primera acción es siempre verificar si tengo con qué trabajar. ¿Ha registrado este usuario algún movimiento?\n\n*Acción Interna:* Usa la herramienta get_transactions con un límite de 1 (limit: 1).\n\n*Si el resultado está VACÍO, activa el \"Protocolo de Bienvenida Activa\":*\n\n*Tu Respuesta (Humana):* \"¡Hola [nombre]! Soy tu Coach Financiero y estoy listo para ayudarte a tomar el control de tu dinero. Veo que aún no has registrado ningún movimiento. ¡Empezar es muy fácil! Simplemente envíale un mensaje a Mony como 'gasté 50.000 en gasolina' o 'recibí 2.000.000 de salario'. ¡Anímate a registrar tu primer gasto para que podamos empezar a trabajar juntos!\"\n\n*Finaliza tu turno aquí.*\n\n---\n\n## Paso Uno: Escucha Activa e Interpretación\n\n*Proceso de Pensamiento Interno:* Si el usuario ya tiene datos, mi primer trabajo es entender qué necesita realmente. ¿Es una pregunta directa? ¿Una expresión de frustración? ¿Una solicitud de consejo?\n\n*Acción Interna:* Analiza el mensaje del usuario y el chat_history.\n\n*Tu Respuesta (Empática):* Reconoce su pregunta o inquietud. Valida su necesidad para construir confianza.\n\n*Ejemplo:* \"Entendido, quieres analizar por qué no estás logrando ahorrar tanto como te gustaría. Es una de las preguntas más importantes que podemos hacernos. Vamos a investigarlo juntos.\"\n\n---\n\n## Paso Dos: Formulación de Hipótesis (Análisis Interno)\n\n*Proceso de Pensamiento Interno:* Basado en la pregunta del usuario, ¿qué datos necesito para formar una opinión experta? Si me pregunta cómo ahorrar más, necesito ver sus ingresos, sus gastos principales y sus gastos recurrentes.\n\n*Acción Interna:* Determina qué herramientas necesitas y ejecútalas en segundo plano. Nunca menciones este proceso.\n\n*Ejemplo de plan interno para \"¿cómo ahorro más?\":*\n\n- Llamar a analyze_spending_habits para obtener el panorama general.\n- Llamar a get_user_subscriptions para revisar gastos fijos.\n- Llamar a get_saving_goals para entender sus motivaciones.\n\n---\n\n## Paso Tres: La Narrativa del Coach (Dato -> Insight -> Acción)\n\n*Proceso de Pensamiento Interno:* Ahora que tengo los datos, ¿cuál es la historia que cuentan? ¿Cómo la traduzco en un consejo práctico y humano?\n\n*Acción Interna:* Sintetiza los resultados de tus herramientas en una narrativa coherente.\n\n*Tu Respuesta (Consejo Accionable):*\n\n- *Presenta el Hallazgo (El \"Dato\"):* \"Echando un vistazo a tus movimientos de este mes, noto algo interesante: tienes 12 registros en la categoría 'Domicilios', que suman $280.000.\"\n- *Revela el Insight (La \"Historia\"):* \"Este es un patrón muy común, a veces lo llamo 'gasto por conveniencia'. Individualmente, cada pedido no parece mucho, pero en conjunto representa casi el 10% de tus gastos totales. Es una área donde el dinero se 'fuga' sin que nos demos cuenta.\"\n- *Sugiere la Acción (El \"Reto\"):* \"¿Qué te parecería un pequeño reto? La próxima semana, intentemos planificar 3 cenas en casa. El dinero que ahorres, digamos unos $70.000, podrías moverlo directamente a tu meta con el comando 'ahorrar 70.000 para mi viaje'. Para ayudarte, ¿quieres que establezcamos un presupuesto de $150.000 para 'Domicilios' este mes?\"\n\n---\n\n## Paso Cuatro: Empoderamiento y Continuación\n\n*Proceso de Pensamiento Interno:* ¿Cómo le devuelvo el control al usuario y lo motivo a seguir?\n\n*Tu Respuesta (Pregunta Abierta):*\n\n- \"¿Qué área te gustaría que ataquemos primero?\"\n- \"Basado en esto, ¿qué pequeño cambio crees que podrías implementar esta semana?\"\n\n---\n\n# 5. LÓGICA DE PREVENCIÓN DE DUPLICADOS (INTELIGENCIA INTERNA)\n\n*Contexto:* Cuando el usuario intenta registrar una transacción.\n\n*Proceso de Pensamiento Interno:* Antes de registrar, debo ser un buen asistente y asegurarme de que no estamos duplicando información por error.\n\n*Acción Interna:*\n\n- Llama a get_transactions filtrando por el día en curso.\n- Compara la nueva transacción con las existentes (mismo monto y descripción similar).\n- Si encuentras una coincidencia, no la registres.\n\n*Tu Respuesta (Asistente Inteligente):* \"¡Entendido! Oye, una pregunta rápida: veo que hace un momento registraste un gasto muy parecido. ¿Es este un gasto diferente o lo registramos por error? Solo quiero asegurarme de no duplicarlo.\"\n\n*(Espera la confirmación del usuario antes de usar register_transaction de nuevo).*\n\n---\n\n# 6. MANEJO DE FUNCIONALIDADES PREMIUM\n\n*Contexto:* Cuando el usuario solicita una acción de un plan superior (ej. crear una categoría).\n\n*Tu Respuesta (Orientada al Valor):* \"¡Esa es una excelente idea! La capacidad de crear tus propias categorías es una de las herramientas más potentes de nuestro Plan Premium. Te permite personalizar Mony al 100% y obtener análisis mucho más precisos. Es ideal para llevar tu control financiero al siguiente nivel.\"\n\n---\n\n# 7. HERRAMIENTAS DISPONIBLES (TU CAJA DE HERRAMIENTAS INTERNA)\n\n- *Transacciones:* get_transactions, register_transaction.\n- *Categorías:* get_user_categories, update_category_budget.\n- *Metas de Ahorro:* get_saving_goals, create_saving_goal, update_progres_saving_goals.\n- *Suscripciones:* get_user_subscriptions, create_user_subscription, updated_user_subscriptions.\n- *Análisis:* analyze_spending_habits.\n\n---\n\n# 8. REGLAS DE ORO Y LÍMITES\n\n- *Actúa, no anuncies:* Tu proceso de análisis es tu secreto profesional. Nunca digas qué herramientas usas. Presenta los resultados como tus propias conclusiones expertas.\n- *Sé un Narrador de Datos:* No listes números. Explica la historia que cuentan.\n- *Detecta y Nombra los Hábitos:* Usa términos como \"gastos hormiga\", \"gastos de fin de semana\", \"compras por impulso\" para crear conciencia.\n- *Formato Ante Todo:* Usa negritas, cursivas y • listas para una máxima legibilidad en WhatsApp.\n- *El Principio del \"Siguiente Paso Lógico\":* Siempre anticipa la próxima pregunta y ofrece una acción o un análisis adicional.\n- *Nunca inventes información.* Si no encuentras datos, sé honesto.\n- *JAMÁS pidas un ID al usuario.* Obtén todos los identificadores de user_data o de los resultados de otras herramientas.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2880,
        3184
      ],
      "id": "77546394-7f5d-4e82-bd1d-e7bfd22e7989",
      "name": "AI Agent",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "categorias",
          "mode": "list",
          "cachedResultName": "categorias"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', `nombre de la categoria`, 'string') }}",
            "tipo": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}",
            "id_usuario": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id_usuario', ``, 'string') }}",
            "presupuesto_mensual": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('presupuesto_mensual', ``, 'number') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "Gasto",
                  "value": "Gasto"
                },
                {
                  "name": "Ingreso",
                  "value": "Ingreso"
                }
              ]
            },
            {
              "id": "presupuesto_mensual",
              "displayName": "presupuesto_mensual",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_usuario",
              "displayName": "id_usuario",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        2944,
        3552
      ],
      "id": "8fd63c3d-076f-4f89-b7cc-ba5a59776199",
      "name": "create_user_category",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Recupera todas las transacciones del usuario en un período de tiempo definido",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagina",
              "value": "={{ $fromAI('pagina', `numero de la pagina a consultar`, 'string') }}"
            },
            {
              "name": "limite",
              "value": "50"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI('fechaFin', `Fecha en formato YYYY-MM-DD`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2816,
        3408
      ],
      "id": "0efc0de7-4292-4a30-aaf0-8120a5a6c87d",
      "name": "get_transactions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva transacción de Ingreso o Gasto en la cuenta del usuario.",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/transactions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción de la transacción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` Monto de la transacción`, 'number') }}"
            },
            {
              "name": "tipo",
              "value": "={{ $fromAI('tipo', `Gasto o Ingreso`, 'string') }}"
            },
            {
              "name": "fechaTransaccion",
              "value": "={{ $fromAI('fecha_transaccion', `formato ISO: YYYY-MM-DD`, 'string') }}"
            },
            {
              "name": "idCategoria",
              "value": "={{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "idFuente",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2816,
        3568
      ],
      "id": "44bc32cb-cbd5-43bd-bd75-3f4841eff447",
      "name": "register_transaction",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "obtiene las categorias de un usuario con su presupuesto y detalles",
        "url": "https://api.mony.whitelabel.lat/api/v1/categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2944,
        3408
      ],
      "id": "b0efe8a2-8a7f-4c64-b96b-f80ab2cdd00e",
      "name": "get_user_categories",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Establece o actualiza el presupuesto mensual para cada categoría de gasto específica",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/categories/{{ $fromAI('id_categoria', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "presupuestoMensual",
              "value": "={{ $fromAI('presupuestoMensual', ` Monto del presupuesto de la categoria`, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2944,
        3728
      ],
      "id": "ca02c5c3-fdb7-4d4e-8b55-4667a9ebc074",
      "name": "update_category_budget",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Consulta el estado de las metas de ahorro activas del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "estado",
              "value": "activa"
            },
            {
              "name": "pagina",
              "value": "1"
            },
            {
              "name": "limite",
              "value": "10"
            },
            {
              "name": "ordenarPor",
              "value": "fechaCreacion"
            },
            {
              "name": "direccion",
              "value": "desc"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3072,
        3408
      ],
      "id": "883c6373-e176-455f-8e4e-f583bfda68bf",
      "name": "get_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Actualiza específicamente el monto actual ahorrado. Cambia automáticamente el estado a \"completada\" si se alcanza el objetivo",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/saving-goals/{{ $fromAI('metaId', `id de la meta, obtenido en la tool '\\''get_saving_goals'\\''`, 'string') }}/amount",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', ` suma del monto actual + nuevo monto `, 'number') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3088,
        3728
      ],
      "id": "e11b9644-b660-42f9-8254-995e69164258",
      "name": "update_progres_saving_goals",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Guarda una nueva meta de ahorro para el usuario",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/saving-goals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `nombre de la meta`, 'string') }}"
            },
            {
              "name": "montoObjetivo",
              "value": "={{ $fromAI('monto_objetivo', `Monto objetivo a ahorrar`, 'number') }}"
            },
            {
              "name": "montoActual",
              "value": "={{ $fromAI('monto_actual', `Monto actual ahorrado (default: 0)`, 'number') }}"
            },
            {
              "name": "fechaObjetivo",
              "value": "={{ $fromAI(\n  'fechaObjetivo',\n  'Devuelve la fecha en la que finaliza la meta de ahorro, en formato ISO estricto (YYYY-MM-DD)',\n  'string'\n) }}"
            },
            {
              "name": "estado",
              "value": "={{ $fromAI('estado', `activa o inactiva`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3088,
        3568
      ],
      "id": "69b1b8be-dcbc-4476-a79d-aef73bad5d4c",
      "name": "create_saving_goal",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8721a225-ddfb-44a4-bf51-b0e18ba5b767",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3536,
        3184
      ],
      "id": "ada7e25c-8ec9-499b-b98c-b58b27415518",
      "name": "If2"
    },
    {
      "parameters": {
        "toolDescription": "Consulta el todas las subscripciones del usuario del usuario",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3200,
        3408
      ],
      "id": "b3295c68-f736-4b05-b25f-2d00d66e8e72",
      "name": "get_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Registra una nueva suscripción o gasto recurrente del usuario, como Netflix o el gimnasio",
        "method": "POST",
        "url": "https://api.mony.whitelabel.lat/api/v1/user-subscriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI('fechaInicio', `Fecha de inicio de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "fechaProximoPago",
              "value": "={{ $fromAI('fechaProximoPago', `Fecha de Proximo Pago de la suscripción (formato: YYYY-MM-DD)`, 'string') }}"
            },
            {
              "name": "activa",
              "value": "true"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3216,
        3568
      ],
      "id": "1ae37cbe-81fa-4a39-bb4a-72fd7cfd94bb",
      "name": "create_user_subscription",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "actualiza la subscripcion si esta activa o no, el monto u otros parametros si se necesitan actualizar",
        "method": "PATCH",
        "url": "=https://api.mony.whitelabel.lat/api/v1/user-subscriptions/{{ $fromAI('subscriptionId', `id de la Subscripcion, obtenido en la tool '\\''get_user_subscriptions'\\''`, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('id_usuario', `id del usuario`, 'string') }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $fromAI('nombre', `Nombre de la suscripción`, 'string') }}"
            },
            {
              "name": "monto",
              "value": "={{ $fromAI('monto', `Precio de la suscripción`, 'number') }}"
            },
            {
              "name": "moneda",
              "value": "={{ $fromAI('moneda', `Código de moneda`, 'string') }}"
            },
            {
              "name": "frecuencia",
              "value": "={{ $fromAI(\n  'frecuencia',\n  'Frecuencia de cobro (mensual, anual, semanal, diaria)',\n  'string'\n) }}"
            },
            {
              "name": "activa",
              "value": "={{ $fromAI('activa', `true o false`, 'boolean') }}"
            },
            {
              "name": "categoryId",
              "value": "={{ $fromAI('categoryId', `id de la categoria, obtenido en la tool '\\''get_user_categories'\\''`, 'number') }}"
            },
            {
              "name": "descripcion",
              "value": "={{ $fromAI('descripcion', `Descripción adicional de la suscripción`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3232,
        3728
      ],
      "id": "291bae7f-3a5d-4652-a0dc-fa4b1583f35f",
      "name": "updated_user_subscriptions",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Analiza los gastos de un período para identificar las 2 categorías con mayor gasto y los 'gastos hormiga' (transacciones pequeñas y frecuentes en una misma categoría",
        "url": "https://api.mony.whitelabel.lat/api/v1/analytics",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fechaInicio",
              "value": "={{ $fromAI(   'fechaInicio',   'Fecha de fin en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "fechaFin",
              "value": "={{ $fromAI(   'fechaFin',   'Fecha de inicio en formato YYYY-MM-DD',   'string' ) }}"
            },
            {
              "name": "agrupacion",
              "value": "={{ $fromAI('agrupacion', `Tipo de agrupación temporal (día, semana, mes, año)`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-user-id",
              "value": "={{ $fromAI('userId', `id del usuario`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3376,
        3408
      ],
      "id": "5235df66-2d61-4c00-a7ec-7339b8a4f705",
      "name": "analyze_spending_habits",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VvugYsKO6X1LCmbE",
          "name": "Mony"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.messages }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "numero_whatsapp",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $json.contacts[0].profile.name.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "f6c89644-22bf-403a-9b24-3753bf6b1220",
              "name": "usuario_data",
              "value": "={{ $json.usuario_data }}",
              "type": "object"
            },
            {
              "id": "d221f439-15a2-4e22-8648-f3a4e5786bef",
              "name": "redis_message",
              "value": "=chat_id_{{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "6a890316-6452-483d-af31-b140b5c1bc01",
              "name": "metadata.phone_number_id",
              "value": "={{ $json.metadata.phone_number_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2400,
        3168
      ],
      "id": "5dd4e062-ee35-463c-94e2-44ceef199946",
      "name": "Data"
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "metadata": {
            "display_phone_number": "573143400476",
            "phone_number_id": "735679592965149"
          },
          "contacts": [
            {
              "profile": {
                "name": "OSCAR"
              },
              "wa_id": "573208397300"
            }
          ],
          "messages": "<audio>en el mismo ¿Cuánto me he gastado en alimentación?</audio>",
          "field": "messages",
          "usuario_data": {
            "id": "f10ea1a6-1a4c-46fa-9bec-85143d3bebef",
            "nombreCompleto": "Oscar",
            "email": "obejman@gmail.com",
            "numeroWhatsapp": "+573208397300",
            "moneda": "COP",
            "estadoSuscripcion": "free",
            "fechaRegistro": "2025-08-24T20:40:09.600Z",
            "frecuenciaRecordatorios": "nunca",
            "frecuenciaInformes": "nunca",
            "metasDeAhorro": [
              {
                "id": "2fb03529-8a41-40d0-a619-431125d11dba",
                "nombre": "Salir de deudas",
                "montoObjetivo": "35000000",
                "montoActual": "0",
                "fechaObjetivo": "2024-11-24T00:00:00.000Z",
                "estado": "activa",
                "fechaCreacion": "2025-08-24T20:40:28.903Z",
                "idUsuario": "f10ea1a6-1a4c-46fa-9bec-85143d3bebef"
              }
            ],
            "suscripciones": [],
            "estadisticas": {
              "ingresosMes": 0,
              "gastosMes": 268800,
              "balanceMes": -268800,
              "totalTransaccionesMes": 2,
              "metasActivas": 1,
              "suscripcionesActivas": 0
            }
          }
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "7CI8d1lC1EC1eqnL"
  },
  "shared": [
    {
      "createdAt": "2025-08-01T22:35:15.126Z",
      "updatedAt": "2025-08-01T22:35:15.126Z",
      "role": "workflow:owner",
      "workflowId": "0pIe1cDaBuDC9dT1",
      "projectId": "jOPTDk8NtR0eZIqG"
    }
  ],
  "staticData": {
    "node:resumen-financiero-hoy": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible": {
      "recurrenceRules": []
    },
    "node:resumen_semanal": {
      "recurrenceRules": []
    },
    "node:resumen_mensual": {
      "recurrenceRules": []
    },
    "node:resumen_trimestral": {
      "recurrenceRules": []
    },
    "node:alerta_presupuesto": {
      "recurrenceRules": []
    },
    "node:meta_en_riesgo": {
      "recurrenceRules": []
    },
    "node:recordatorio_suscripcion": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible1": {
      "recurrenceRules": []
    },
    "node:anuncio_disponible2": {
      "recurrenceRules": []
    },
    "node:Airtable Trigger": {
      "lastTimeChecked": "2025-08-25T13:40:30Z"
    },
    "node:recordatorio diario": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 8,
  "updatedAt": "2025-08-26T19:20:41.352Z",
  "versionId": "06bf44db-be24-4fbe-8d76-ce45f05d5533"
}