{
  "active": false,
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Send message6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Send message5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Send message7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send message3": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model3": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Message a model3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resumen_financiero": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "anuncio_disponible": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "trigger_resumen_semanal": {
      "main": [
        [
          {
            "node": "Execute a SQL query2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gasto_alto_mensual": {
      "main": [
        [
          {
            "node": "Execute a SQL query3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "proximo_pago_suscripcion": {
      "main": [
        [
          {
            "node": "Execute a SQL query4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meta_ahorro_estancada": {
      "main": [
        [
          {
            "node": "Execute a SQL query6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T22:35:15.126Z",
  "id": "0pIe1cDaBuDC9dT1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente Coach",
  "nodes": [
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2912,
        5456
      ],
      "id": "8aa0afa9-6b31-463b-9065-dd9a249b4ea7",
      "name": "Wait16",
      "webhookId": "87aeebf1-a0c6-4899-b4d0-a0a8e4b02a2c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3136,
        5456
      ],
      "id": "cedb24f7-2e4d-4864-ab5f-d52c07ce65e5",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3552,
        5456
      ],
      "id": "96261774-144a-4e08-bdd6-715d2fcc8782",
      "name": "No Operation, do nothing16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte4 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3344,
        5424
      ],
      "id": "23707549-f579-4c9c-9322-53cb7e2c333b",
      "name": "Send message7",
      "webhookId": "01402dc2-26fb-438a-b7e7-71025cb3f5dc",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3552,
        5264
      ],
      "id": "15b7c806-2cab-46ab-9052-cf020f371492",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2912,
        5232
      ],
      "id": "ac88bbd5-a549-4b87-8728-a8b1da7cf06e",
      "name": "Wait15",
      "webhookId": "1e9449c3-7591-405c-bd2c-db7f9bb36030"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3136,
        5232
      ],
      "id": "44e2566c-efab-4bed-ba71-dbc519ee2223",
      "name": "If15"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte3 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3344,
        5232
      ],
      "id": "9daba94e-9047-47ab-879f-b30ed28a9437",
      "name": "Send message6",
      "webhookId": "ca927ce1-b094-4d96-812d-06b5b8c0e32f",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3968,
        5072
      ],
      "id": "458d68de-50b3-48c0-9908-11db9700e1bc",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $('Data').item.json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3136,
        5056
      ],
      "id": "a5e30e48-0d4d-4973-9223-61f39db64930",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3360,
        5056
      ],
      "id": "4a29142f-0826-425d-8a7a-43b6f14f5cd1",
      "name": "Wait14",
      "webhookId": "4e5be309-0849-48ae-abcb-a5ed2b602c32"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3536,
        5056
      ],
      "id": "740b6d95-d013-4098-af83-abf768e0b056",
      "name": "If16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte1 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2960,
        5056
      ],
      "id": "ad683364-7b2f-418d-bd08-aafe9a045803",
      "name": "Send message3",
      "webhookId": "f1605586-43d3-4829-b709-42d67a659c58",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **si hay una lista con varios items, no se debe dividir**, toda la lista debe ir en un mismo mensaje\n\n- **No incluyas datos sensibles del usuario** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2144,
        5056
      ],
      "id": "dc478cf3-2dfd-44f0-8c5b-279982ae3b36",
      "name": "Message a model3",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte2 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3744,
        5040
      ],
      "id": "9c26e2a8-5b3b-45f4-b4be-9e3424524d0c",
      "name": "Send message5",
      "webhookId": "e6e117eb-45fc-426f-aea8-9777d88a3a1a",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 760,
        "width": 2264,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2064,
        4928
      ],
      "id": "7f639a3c-5572-4799-85ae-d36b53c45b03",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2688,
        4400
      ],
      "id": "7b5ea3ef-fb7f-40a9-b6f2-702ef68b36db",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=MONY_{{ $('Data').item.json.redis_message }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2816,
        4400
      ],
      "id": "6c2a22c6-560a-43b7-b6b8-4046793258f5",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2048,
        4096
      ],
      "id": "047fefbe-7590-4c41-9e6c-fd12bdcc3021",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            },
            {
              "name": "usuario_data",
              "type": "any"
            }
          ]
        }
      },
      "id": "5c4b3dc3-9b38-4a88-96ab-fbaf86edb7b1",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        1744,
        3504
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: {{ $json.first_name }},\nmensaje del usuario: {{ $json.message }},",
        "options": {
          "systemMessage": "=### ROL Y OBJETIVO PRINCIPAL ###\n- Eres \"Mony Coach\", el analista financiero personal de tu usuario.\n- Tu misión es analizar datos financieros que se te proporcionan y enviar un ÚNICO mensaje de WhatsApp útil, motivador y personalizado.\n- NO estás en una conversación. Tu trabajo es iniciarla con un insight de alto valor.\n\n### CONTEXTO DE ENTRADA ###\n- Recibirás un objeto JSON con dos claves principales:\n  1. `{{ $json.usuario_data }}`: Contiene `first_name`, `user_id`, etc.\n  2. `trigger_data`: Contiene el motivo de tu activación, si no llega es porque recibes un mensaje directo de un usuario registrado (`trigger_type`) y los datos asociados.\n\n### LÓGICA BASADA EN TRIGGERS ###\nAnaliza el `trigger_type` y usa los datos para construir el mensaje perfecto.\n\n**1. Si `trigger_type` es `resumen_semanal`:**\n   - **Datos recibidos:** `total_gastos_semana`, `categoria_top_gasto`, `comparativo_semana_anterior` (ej: -15%).\n   - **Lógica del Mensaje:**\n     - Saluda y presenta el resumen.\n     - Destaca el gasto principal.\n     - Compara con la semana anterior, celebrando si hubo una reducción o comentando si hubo un aumento.\n     - Termina con una nota motivacional.\n   - **Ejemplo de Salida:**\n     \"¡Hola, {{ $json.first_name }}! ☀️ Aquí tu resumen financiero de la semana: Gastaste un total de $X. Tu mayor gasto fue en 'Comida' 🍔. ¡Excelente! Es un 15% menos que la semana pasada. ¡Sigue así! 💪\"\n\n**2. Si `trigger_type` es `alerta_presupuesto`:**\n   - **Datos recibidos:** `nombre_categoria`, `porcentaje_gastado` (ej: 90%), `monto_restante`.\n   - **Lógica del Mensaje:**\n     - Sé directo pero amable.\n     - Informa sobre el estado del presupuesto en esa categoría específica.\n     - Da una recomendación simple.\n   - **Ejemplo de Salida:**\n     \"¡Ojo, {{ $json.first_name }}! 🧐 Has alcanzado el 90% de tu presupuesto mensual en 'Entretenimiento'. Te quedan $X para el resto del mes. ¡A gestionar con cuidado estos últimos días!\"\n\n**3. Si `trigger_type` es `meta_en_riesgo`:**\n   - **Datos recibidos:** `nombre_meta`, `fecha_objetivo`, `progreso_actual` (ej: 40%), `progreso_esperado` (ej: 60%).\n   - **Lógica del Mensaje:**\n     - Recuerda la meta para reconectar emocionalmente.\n     - Explica el desfase de forma sencilla.\n     - Ofrece ayuda (esto puede iniciar una conversación con el Agente Transaccional).\n   - **Ejemplo de Salida:**\n     \"¡Hola, {{ $json.first_name }}! Revisando tu meta 'Viaje a la playa' 🏖️. Para alcanzarla en (fecha), tu ahorro debería estar en un 60%, y actualmente va en un 40%. ¡No te preocupes, estamos a tiempo de ajustar! ¿Quieres que revisemos juntos los gastos de esta semana para encontrar dónde podemos optimizar?\"\n\n**4. Si `trigger_type` es `recordatorio_suscripcion`:**\n   - **Datos recibidos:** `nombre_suscripcion`, `monto`, `fecha_pago`.\n   - **Lógica del Mensaje:**\n     - Envía un recordatorio claro y simple 24-48h antes.\n   - **Ejemplo de Salida:**\n     \"¡Recordatorio rápido, {{ $json.first_name }}! 🗓️ Mañana se realizará el cobro de tu suscripción de 'Netflix' por un valor de $X. ¡Que no te tome por sorpresa!\"\n\n### REGLAS DE ORO ###\n- **Un solo mensaje:** Tu salida siempre debe ser un único mensaje de WhatsApp.\n- **Personaliza al máximo:** Usa todos los datos (`first_name`, `nombre_meta`, `nombre_categoria`) para que el mensaje se sienta 1-a-1.\n- **El tono varía con el trigger:** `resumen_semanal` es informativo y alegre. `alerta_presupuesto` es servicial y preventivo. `meta_en_riesgo` es motivador y de apoyo."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2672,
        4176
      ],
      "id": "77546394-7f5d-4e82-bd1d-e7bfd22e7989",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4416
      ],
      "id": "a46aa4d6-afe8-4847-98df-17d1cc157aad",
      "name": "trigger_resumen_semanal"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4640
      ],
      "id": "ae172954-ca99-4183-9398-d669929d4403",
      "name": "resumen-financiero-hoy"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": 30,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4192
      ],
      "id": "9cfa6d04-1c6a-4876-be2b-883eb4a0e9f3",
      "name": "resumen_financiero"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id_usuario,\n  COALESCE(SUM(CASE WHEN tipo = 'Ingreso' THEN monto ELSE 0 END), 0) AS total_ingresos,\n  COALESCE(SUM(CASE WHEN tipo = 'Gasto' THEN monto ELSE 0 END), 0) AS total_gastos,\n  COALESCE(SUM(CASE WHEN tipo = 'Ingreso' THEN monto ELSE 0 END), 0) - \n  COALESCE(SUM(CASE WHEN tipo = 'Gasto' THEN monto ELSE 0 END), 0) AS saldo_actual\nFROM transacciones\nWHERE \n  id_usuario = '{{usuario_id}}'\n  AND date_part('month', fecha_transaccion) = date_part('month', CURRENT_DATE)\n  AND date_part('year', fecha_transaccion) = date_part('year', CURRENT_DATE)\nGROUP BY id_usuario;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4192
      ],
      "id": "e526f52c-584e-4a85-8b3d-071da18402ba",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4864
      ],
      "id": "c8a2e983-0d98-403b-926f-ca5e0e6d1836",
      "name": "anuncio_disponible"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  a.id AS id_anuncio,\n  a.titulo,\n  a.texto,\n  a.imagen_url,\n  a.enlace\nFROM usuarios u\nJOIN anuncios a ON\n  (a.pais_destino IS NULL OR a.pais_destino = '') AND\n  (a.moneda_destino IS NULL OR a.moneda_destino = u.moneda_defecto)\n  AND a.fecha_inicio <= CURRENT_TIMESTAMP\n  AND (a.fecha_fin IS NULL OR a.fecha_fin >= CURRENT_TIMESTAMP)\nWHERE NOT EXISTS (\n  SELECT 1 FROM anuncios_usuarios au\n  WHERE au.id_usuario = u.id AND au.id_anuncio = a.id\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4864
      ],
      "id": "7616be24-df8c-4801-9d21-d2c119db44db",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  COUNT(t.id) AS total_transacciones,\n  SUM(CASE WHEN t.tipo = 'Gasto' THEN t.monto ELSE 0 END) AS total_gastos,\n  SUM(CASE WHEN t.tipo = 'Ingreso' THEN t.monto ELSE 0 END) AS total_ingresos\nFROM usuarios u\nJOIN transacciones t ON t.id_usuario = u.id\nWHERE t.fecha_transaccion >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4416
      ],
      "id": "9b9e4cd6-b9ad-4656-92f2-29c60affd9ee",
      "name": "Execute a SQL query2",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  c.nombre AS categoria,\n  c.presupuesto_mensual,\n  COALESCE(SUM(t.monto), 0) AS gasto_actual,\n  (COALESCE(SUM(t.monto), 0) / c.presupuesto_mensual) * 100 AS porcentaje_usado\nFROM usuarios u\nJOIN categorias c ON c.id_usuario = u.id\nLEFT JOIN transacciones t ON t.id_usuario = u.id AND t.id_categoria = c.id\n  AND t.tipo = 'Gasto' AND date_trunc('month', t.fecha_transaccion) = date_trunc('month', CURRENT_DATE)\nWHERE c.presupuesto_mensual IS NOT NULL AND c.presupuesto_mensual > 0\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp, c.nombre, c.presupuesto_mensual\nHAVING (COALESCE(SUM(t.monto), 0) / c.presupuesto_mensual) >= 0.8;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        3968
      ],
      "id": "990283be-0347-499b-95b3-c90324638d31",
      "name": "Execute a SQL query3",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": 28,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        3968
      ],
      "id": "53d964d8-1631-4f56-910c-bba2e3ce59c4",
      "name": "gasto_alto_mensual"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  s.nombre AS nombre_suscripcion,\n  s.fecha_proximo_pago,\n  s.monto,\n  s.moneda\nFROM usuarios u\nJOIN suscripciones_usuario s ON s.id_usuario = u.id\nWHERE s.activa = TRUE\n  AND s.fecha_proximo_pago = CURRENT_DATE + INTERVAL '1 day';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        3744
      ],
      "id": "1cedeb4a-773a-44da-ae74-ac25f1299b74",
      "name": "Execute a SQL query4",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        3744
      ],
      "id": "6c99f197-0ad2-49c9-8f01-53e1f5403ddc",
      "name": "proximo_pago_suscripcion"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  COUNT(t.id) AS total_transacciones,\n  SUM(CASE WHEN t.tipo = 'Gasto' THEN t.monto ELSE 0 END) AS total_gastos,\n  SUM(CASE WHEN t.tipo = 'Ingreso' THEN t.monto ELSE 0 END) AS total_ingresos\nFROM usuarios u\nJOIN transacciones t ON t.id_usuario = u.id\nWHERE t.fecha_transaccion >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1664,
        4912
      ],
      "id": "8c78fb39-ecfc-44ff-bb9a-2037ea4f51ae",
      "name": "Execute a SQL query5",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  m.nombre AS nombre_meta,\n  m.monto_objetivo,\n  m.monto_actual,\n  m.fecha_objetivo,\n  m.fecha_creacion\nFROM usuarios u\nJOIN metas_ahorro m ON m.id_usuario = u.id\nWHERE m.estado = 'activa'\n  AND m.fecha_creacion <= CURRENT_DATE - INTERVAL '30 days'\n  AND m.monto_actual = 0;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1520,
        4096
      ],
      "id": "39210825-0cd8-45b1-8a31-d418617eeb22",
      "name": "Execute a SQL query6",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1296,
        4096
      ],
      "id": "e84f72e2-9ab4-4732-a52f-93fc49d2bf3e",
      "name": "meta_ahorro_estancada"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $json.user_id }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $json.first_name }}",
              "type": "string"
            },
            {
              "id": "f6c89644-22bf-403a-9b24-3753bf6b1220",
              "name": "usuario_data",
              "value": "={{ $json.usuario_data }}",
              "type": "object"
            },
            {
              "id": "d221f439-15a2-4e22-8648-f3a4e5786bef",
              "name": "redis_message",
              "value": "={{ $json.redis_message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2352,
        4176
      ],
      "id": "5dd4e062-ee35-463c-94e2-44ceef199946",
      "name": "Data"
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 764,
        "width": 2912,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2048,
        3264
      ],
      "id": "955b8628-30bc-4896-8bec-616d27401a4d",
      "name": "Sticky Note"
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "message": "ok, como inicio<br>hola",
          "user_id": "5732288544100",
          "first_name": "Pedro",
          "usuario_data": {
            "id": "8a354926-4e95-42b6-8e61-2ab9aa1c8943",
            "email": "pro.pedro2@gmail.com",
            "password_hash": "$2a$06$z5YPCrfAmRcFG3Rl6gnjYOuGNgcighg3bsCBwb3JBrO64zOZUBSMi",
            "fecha_registro": "2025-08-01T23:55:52.387264",
            "moneda_defecto": "COP",
            "nombre_completo": "Pedro test 2",
            "numero_whatsapp": "5732288544100",
            "estado_suscripcion": "gratuito"
          },
          "redis_message": "chat_id_5732288544100",
          "mony_coach": ""
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-06T20:40:35.623Z",
  "versionId": "59a0a05c-148a-463f-afb3-957137bc778a"
}