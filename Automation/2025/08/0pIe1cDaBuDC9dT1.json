{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Unir Mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data1": {
      "main": [
        [
          {
            "node": "Push Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type message Whatsap1": {
      "main": [
        [
          {
            "node": "Download media1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download media1": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Model Selector1": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Model Selector1",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "DataAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing6": {
      "main": [
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing7": {
      "main": [
        [
          {
            "node": "DataText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Send message6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Send message5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Send message7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message3": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model3": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "type message Whatsap1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Message": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataAudio": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DataText": {
      "main": [
        [
          {
            "node": "setData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setData": {
      "main": [
        [
          {
            "node": "Execution Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Mensajes": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Message a model3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resumen_financiero": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "anuncio_disponible": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "trigger_resumen_semanal": {
      "main": [
        [
          {
            "node": "Execute a SQL query2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gasto_alto_mensual": {
      "main": [
        [
          {
            "node": "Execute a SQL query3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "proximo_pago_suscripcion": {
      "main": [
        [
          {
            "node": "Execute a SQL query4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meta_ahorro_estancada": {
      "main": [
        [
          {
            "node": "Execute a SQL query6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T22:35:15.126Z",
  "id": "0pIe1cDaBuDC9dT1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente Coach",
  "nodes": [
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2704,
        5456
      ],
      "id": "8aa0afa9-6b31-463b-9065-dd9a249b4ea7",
      "name": "Wait16",
      "webhookId": "87aeebf1-a0c6-4899-b4d0-a0a8e4b02a2c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte4}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2928,
        5456
      ],
      "id": "cedb24f7-2e4d-4864-ab5f-d52c07ce65e5",
      "name": "If17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3344,
        5456
      ],
      "id": "96261774-144a-4e08-bdd6-715d2fcc8782",
      "name": "No Operation, do nothing16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte4 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3136,
        5424
      ],
      "id": "23707549-f579-4c9c-9322-53cb7e2c333b",
      "name": "Send message7",
      "webhookId": "01402dc2-26fb-438a-b7e7-71025cb3f5dc",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3344,
        5264
      ],
      "id": "15b7c806-2cab-46ab-9052-cf020f371492",
      "name": "No Operation, do nothing14"
    },
    {
      "parameters": {
        "amount": 4
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2704,
        5232
      ],
      "id": "ac88bbd5-a549-4b87-8728-a8b1da7cf06e",
      "name": "Wait15",
      "webhookId": "1e9449c3-7591-405c-bd2c-db7f9bb36030"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5b98c759-b4b7-4353-a5e4-d2ff1c030744",
              "leftValue": "={{ $json.message.content.parte3}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2928,
        5232
      ],
      "id": "44e2566c-efab-4bed-ba71-dbc519ee2223",
      "name": "If15"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte3 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3136,
        5232
      ],
      "id": "9daba94e-9047-47ab-879f-b30ed28a9437",
      "name": "Send message6",
      "webhookId": "ca927ce1-b094-4d96-812d-06b5b8c0e32f",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3760,
        5072
      ],
      "id": "458d68de-50b3-48c0-9908-11db9700e1bc",
      "name": "No Operation, do nothing15"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_id_{{ $('Data').item.json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2928,
        5056
      ],
      "id": "a5e30e48-0d4d-4973-9223-61f39db64930",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3152,
        5056
      ],
      "id": "4a29142f-0826-425d-8a7a-43b6f14f5cd1",
      "name": "Wait14",
      "webhookId": "4e5be309-0849-48ae-abcb-a5ed2b602c32"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709f4717-003f-4f9f-b841-18d2f2f4ddb4",
              "leftValue": "={{ $json.message.content.parte2}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3328,
        5056
      ],
      "id": "740b6d95-d013-4098-af83-abf768e0b056",
      "name": "If16"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte1 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2752,
        5056
      ],
      "id": "ad683364-7b2f-418d-bd08-aafe9a045803",
      "name": "Send message3",
      "webhookId": "f1605586-43d3-4829-b709-42d67a659c58",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Divide el siguiente mensaje en hasta **4 partes más pequeñas** solo si es necesario, asegurándote de que cada parte tenga sentido completo.  \n\n### **Reglas:**  \n- Si el mensaje es *corto* (hasta *160 caracteres*), devuélvelo en **una sola parte**.  \n- Si es *mediano* (hasta *400 caracteres*), divídelo en **2 partes**.  \n- Si es *largo* (hasta *600 caracteres*), divídelo en **3 partes**. \n- Si es *muy largo* (más de *600 caracteres*), agrégale una **parte4**.  \n\n- **Evita dividir el mensaje innecesariamente**. Usa la **menor cantidad de partes posible**.  \n- **No cortes oraciones en puntos, comas o conectores** para mantener la coherencia.  \n- **si hay una lista con varios items, no se debe dividir**, toda la lista debe ir en un mismo mensaje\n\n- **No incluyas datos sensibles del usuario** en la respuesta, como:  \n  - `user_id: <número>`  \n  - `subscriber_id: <número>`  \n  - `first_name: <nombre>`  \n  - **Elimina estos datos sin dejar rastros.**  \n\n---\n\n### **Formato de Salida:**  \n- Devuelve la respuesta en **formato JSON** con **solo las partes necesarias**.  \n- Usa `\\n\\n` para agregar saltos de línea cuando sea necesario o para mejorar la legibilidad en listas.  \n- **Nunca uses comillas `\"` para resaltar palabras**. En su lugar, usa un solo asterisco: *palabra*.  \n\n#### **Ejemplo de salida:**  \n\n{\n  \"parte1\": \"Texto de la primera parte.\",\n  \"parte2\": \"Texto de la segunda parte.\"\n}\n\n\n---\n\n### **Mensaje:**  \n{{ $json.output }}  \n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2144,
        5056
      ],
      "id": "dc478cf3-2dfd-44f0-8c5b-279982ae3b36",
      "name": "Message a model3",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('Start').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $('Data').item.json.user_id }}",
        "textBody": "={{ $json.message.content.parte2 }}",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3536,
        5040
      ],
      "id": "9c26e2a8-5b3b-45f4-b4be-9e3424524d0c",
      "name": "Send message5",
      "webhookId": "e6e117eb-45fc-426f-aea8-9777d88a3a1a",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "content": "## RESPONS AGENT",
        "height": 760,
        "width": 2264,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2064,
        4928
      ],
      "id": "7f639a3c-5572-4799-85ae-d36b53c45b03",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2800,
        4368
      ],
      "id": "7b5ea3ef-fb7f-40a9-b6f2-702ef68b36db",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "jQiccHfpS9BFKE4C",
          "name": "automation.whitelabel.lat"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2416,
        4560
      ],
      "id": "fb62bb28-78b5-4ef3-8db9-2dd4c50c2d47",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=chat_history_mony_{{ $('setData').item.json.phone_number }}",
        "sessionTTL": 500000,
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2912,
        4384
      ],
      "id": "6c2a22c6-560a-43b7-b6b8-4046793258f5",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "rule": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "887218c3-c47e-4f19-9d76-2eaf22ae77bf",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.modelSelector",
      "typeVersion": 1,
      "position": [
        2336,
        4384
      ],
      "id": "01ca9664-7be5-4d83-8466-ec2a99b9b5e1",
      "name": "Model Selector1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Corrige mensajes de usuarios quitando caracteres raros, errores ortográficos y signos innecesarios como acentos mal puestos, pero sin cambiar el sentido original del mensaje, si llega el mismo mensaje repetido exactamente, varias veces, corriges para que solo envies uno, ",
              "role": "system"
            },
            {
              "content": "=Corrige el siguiente mensaje:\\n\\n{{ $json.message }}\\n\\nDevuelve solo el mensaje corregido, no quites las etiquetas html"
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2096,
        4144
      ],
      "id": "fa429009-9f2b-4fb4-a8b1-ab9946d7d2d6",
      "name": "Message a model2",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AGENT MAIN",
        "height": 600,
        "width": 2240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2048,
        4096
      ],
      "id": "047fefbe-7590-4c41-9e6c-fd12bdcc3021",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4544,
        3392
      ],
      "id": "5b243ee3-51e0-464b-a412-6dc6f11c572a",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7fe6665-ef0d-4ec2-9800-88004951e528",
              "leftValue": "={{ $json.message.last() }}",
              "rightValue": "={{ $('setData').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4320,
        3296
      ],
      "id": "7e029f3a-c0ba-46e1-a585-8836f353dbe4",
      "name": "If"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3872,
        3296
      ],
      "id": "ed39581f-3cf9-4302-b379-89f3e69aa876",
      "name": "Wait1",
      "webhookId": "f9b93b7c-39eb-44cf-99e9-9251f627dac3"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "nombre",
              "value": "={{ $json.nombre }}"
            },
            {
              "key": "phone_number",
              "value": "={{ $json.phone_number }}"
            },
            {
              "key": "tipo_mensaje",
              "value": "={{ $json.tipo_mensaje }}"
            },
            {
              "key": "mensaje",
              "value": "={{ $json.mensaje }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        3424,
        3296
      ],
      "id": "07ffcb9f-9521-442e-b3df-fcb4de6a5bfb",
      "name": "Execution Data1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38cdad62-0d9c-45bc-860e-9e03d107ba58"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82df4052-c480-44a2-9d09-c195d4bc6879",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c1a8cf-af4e-4bca-a66c-184829c009d8",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71778507-22f2-4e0f-99d7-fdd87ed1f26b",
                    "leftValue": "={{ $('Start').item.json.messages[0].type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2080,
        3456
      ],
      "id": "c7bfca55-fbc5-4e0f-a641-655725349f10",
      "name": "type message Whatsap1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2304,
        3392
      ],
      "id": "17ee0bac-385f-4eeb-9e0d-42e4c67768bd",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2528,
        3392
      ],
      "id": "80163a1b-1cdb-428a-9858-0af03dbecc91",
      "name": "No Operation, do nothing6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2752,
        3392
      ],
      "id": "fba58292-2258-4a2f-a389-ba62bcf21545",
      "name": "No Operation, do nothing7"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('Start').item.json.messages[0].audio.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2304,
        3200
      ],
      "id": "e974da58-4695-45d1-9685-2544f1401acc",
      "name": "Download media1",
      "webhookId": "b75eceaa-2795-4fd5-b91b-1ecf96a247f2",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2528,
        3200
      ],
      "id": "8b03a8d0-64f3-4e66-80e0-34d3d6a106e1",
      "name": "HTTP Request4",
      "credentials": {
        "whatsAppApi": {
          "id": "IzfsUgwJnA4EF09z",
          "name": "whatsap Valeia"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "languaje",
              "value": "es"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        3200
      ],
      "id": "c177b93f-3480-472d-8c37-1f22a8352c31",
      "name": "HTTP Request5",
      "credentials": {
        "openAiApi": {
          "id": "UYsXoFpwT6Oh1GeF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Incoming Messages\n",
        "height": 764,
        "width": 2912,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2032,
        3168
      ],
      "id": "97e67ff9-bf15-4b42-b349-ddb122dd12be",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "metadata",
              "type": "any"
            },
            {
              "name": "contacts",
              "type": "any"
            },
            {
              "name": "messages",
              "type": "any"
            },
            {
              "name": "field",
              "type": "any"
            }
          ]
        }
      },
      "id": "5c4b3dc3-9b38-4a88-96ab-fbaf86edb7b1",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        1712,
        3488
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=chat_id_mony{{ $json.phone_number }}",
        "messageData": "={{ $json.mensaje }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3648,
        3296
      ],
      "id": "7c7f126c-19ae-4970-af3a-1a214e121e25",
      "name": "Push Message",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "=chat_id_mony{{ $json.phone_number }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4096,
        3296
      ],
      "id": "6e3b46a9-62fe-43a4-b782-61b144fff239",
      "name": "Get Message",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.contacts[0].wa_id }}",
        "textBody": "=📄 ¡ Gracias por enviarnos tu documento.\nSin embargo, para poder procesarlo y ayudarte con el análisis, primero necesitas estar registrado en **MONY**.\nEsto nos permite guardar tu información de forma segura y ofrecerte una experiencia personalizada. 🧠✨\n\n👉 Puedes registrarte en menos de 1 minuto aquí:\n*https://mony-app.com/registro*\n\nUna vez estés dentro, ¡estaremos listos para ayudarte a organizar tus finanzas como un pro! 💸🚀",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2304,
        3584
      ],
      "id": "e79e5d34-e322-40cd-b960-5bc1c07fd610",
      "name": "Send message",
      "webhookId": "f8370b83-ba71-4de6-81a8-40549c024f67",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "=+{{ $json.contacts[0].wa_id }}",
        "textBody": "=📄 ¡ Gracias por enviarnos tu imagen.\nSin embargo, para poder procesarlo y ayudarte con el análisis, primero necesitas estar registrado en **MONY**.\nEsto nos permite guardar tu información de forma segura y ofrecerte una experiencia personalizada. 🧠✨\n\n👉 Puedes registrarte en menos de 1 minuto aquí:\n*https://mony-app.com/registro*\n\nUna vez estés dentro, ¡estaremos listos para ayudarte a organizar tus finanzas como un pro! 💸🚀",
        "additionalFields": {
          "previewUrl": true
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2304,
        3760
      ],
      "id": "0ae6b4a1-f780-4810-a7a9-c72dd7ff805c",
      "name": "Send message1",
      "webhookId": "e7504c2c-9841-430b-98ab-f2526ff62a9c",
      "credentials": {
        "whatsAppApi": {
          "id": "YohohlgP3bBq85IL",
          "name": "Test Pedro"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $('Start').item.json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $('Start').item.json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "=<audio>{{ $json.text }}</audio>",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $('Start').item.json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2976,
        3200
      ],
      "id": "c3200607-e1cd-4e52-b995-6398ec9ef33c",
      "name": "DataAudio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9f69a465-0cc7-43dd-97d7-aaee90bacbe3",
              "name": "nombre",
              "value": "={{ $json.contacts[0].profile.name }}",
              "type": "string"
            },
            {
              "id": "82031891-32ae-4442-b883-fad57ad08c79",
              "name": "phone_number",
              "value": "={{ $json.contacts[0].wa_id }}",
              "type": "string"
            },
            {
              "id": "8c4da55a-b196-497b-a9ef-c0ce734b8847",
              "name": "mensaje",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "8a4d2988-720e-46c1-9927-90f62d5ddd72",
              "name": "tags",
              "value": "={{ $json.field }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2976,
        3392
      ],
      "id": "6270f6c3-f1c0-4b94-a277-c24ec2f71243",
      "name": "DataText"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f107ad-f4e3-4616-a1ec-515f7324ba23",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "6f55c6f4-4cb3-4cec-9d31-b956d3fffde0",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "bad14eb8-f005-4d91-bd83-600e6105d974",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3200,
        3296
      ],
      "id": "20f27b18-a83c-4fd0-aee0-41a759ec56cc",
      "name": "setData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $('Get Message').item.json.message.join('\\n').replace(/test/gi, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4544,
        3200
      ],
      "id": "9e6c51e4-b973-422b-8dd0-fe74830ef845",
      "name": "Unir Mensajes"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b89d5418-df60-419b-84f6-5bc7bc0dd09b",
              "name": "message",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "f312aa42-4354-4954-92ff-9549a49c1d5b",
              "name": "user_id",
              "value": "={{ $('setData').item.json.phone_number }}",
              "type": "string"
            },
            {
              "id": "4e6ed31c-2d8f-4415-bdaf-404a870f1cc2",
              "name": "first_name",
              "value": "={{ $('setData').item.json.nombre.split(\" \")[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2496,
        4144
      ],
      "id": "5e38d904-4ce8-4990-b7c2-bee10b6fa077",
      "name": "Data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: {{ $json.first_name }},\nmensaje del usuario: {{ $json.message }},",
        "options": {
          "systemMessage": "=### *1. ROL Y OBJETIVO PRINCIPAL*\n\n- Actúa como \"Mony Onboarding Expert\",- el asistente virtual oficial de MONY. Tu *misión principal* - es recibir a los usuarios que llegan por primera vez a nuestro WhatsApp, enamorarlos de nuestra plataforma, resolver todas sus dudas y guiarlos con entusiasmo para que completen su registro en nuestra página web. Eres la primera impresión de MONY, por lo que tu amabilidad, claridad y proactividad son clave.\n\n### *2. PERSONA Y TONO DE COMUNICACIÓN*\n\n- *Amigable y Cercano:- Usa un tono conversacional y cálido. Emplea emojis para hacer la conversación más amena (👋, ✨, 🚀, 💰, ✅). Tutea al usuario.\n- *Servicial y Paciente:- Tu disposición a ayudar es total. Si un usuario tiene muchas preguntas, responde a cada una con paciencia y claridad. Nunca te muestres apurado.\n- *Experto y Confiable:- Debes conocer MONY a la perfección. Habla con seguridad sobre las funcionalidades, beneficios y planes. Transmite confianza y profesionalismo.\n- *Entusiasta y Motivador:- Muestra pasión por cómo MONY puede transformar las finanzas personales del usuario. Anímale a tomar el control de su dinero.\n\n### *3. BASE DE CONOCIMIENTO (Tu Cerebro)*\n\nToda tu información se basa *exclusivamente- en el siguiente contexto sobre MONY. No inventes funcionalidades ni precios.\n\n- *Producto:- MONY es un asistente financiero personal que funciona principalmente por WhatsApp para registrar gastos e ingresos de forma fácil y rápida.\n- *Flujo Principal:*\n    1.  *Registras todo por WhatsApp:- Envías un texto (\"gasté 50.000 en gasolina\"), un audio, una foto de una factura o un archivo.\n    2.  *MONY lo procesa con IA:- Clasifica automáticamente tus movimientos.\n    3.  *Visualizas en un Dashboard Web:- Analizas tus finanzas con gráficos, resúmenes y reportes detallados.\n- *Beneficios Clave:*\n    - Tomar el control de tus finanzas de forma sencilla.\n    - Ahorrar tiempo registrando todo al instante.\n    - Detectar patrones, gastos excesivos y oportunidades de ahorro.\n    - Recibir recordatorios de pagos y suscripciones.\n- *Funcionalidades:*\n    - *Registro multiformato:- Texto, audio, imagen/foto de factura (OCR), archivos PDF/Excel.\n    - *Dashboard Web:- Con gráficos de evolución financiera, distribución de gastos por categoría y listado de transacciones.\n    - *Categorización IA:- El sistema aprende y clasifica tus gastos.\n    - *Recordatorios:- Para que no olvides registrar tus movimientos.\n- *Modelo de Monetización (Planes):*\n    - *Plan Free ($0):- Registro básico y limitado vía WhatsApp. Ideal para probar.\n    - *Plan Premium ($9.99/mes):- ¡La experiencia completa! Dashboard web con todos los gráficos, análisis con IA, gestión de suscripciones y recomendaciones personalizadas.\n    - *Plan Pro Empresarial ($49.99/mes):- Para usuarios avanzados o pequeños negocios. Permite exportación avanzada de reportes y gestión de varios perfiles financieros.\n\n### *4. FLUJO DE CONVERSACIÓN ESTRATÉGICO*\n\nSigue estos pasos para guiar al usuario:\n\n*Paso 1: Bienvenida Cálida*\n- Saluda al usuario y preséntate.\n- Ejemplo: \"¡Hola! 👋 Soy Mony, tu futuro asistente financiero personal. ¡Qué bueno tenerte por aquí! Estoy listo para ayudarte a tomar el control de tu dinero. ¿Te gustaría saber cómo funciono?\"\n\n*Paso 2: Explicación Sencilla y Potente (El \"Elevator Pitch\")*\n- Explica el concepto principal de MONY de forma simple.\n- Ejemplo: \"¡Es súper fácil! Imagina poder registrar todos tus gastos e ingresos simplemente enviando un mensaje de WhatsApp, ¡como si chatearas con un amigo! Luego, toda esa información se organiza automáticamente en un panel web para que veas a dónde va tu dinero con gráficos súper claros. ✨\"\n\n*Paso 3: Detallar Funcionalidades Clave (Generar Interés)*\n- Menciona las formas de registro para destacar la facilidad de uso.\n- Ejemplo: \"¿Lo mejor? Puedes registrar un gasto escribiendo 'cine 20.000', mandando un audio mientras caminas, o incluso tomándole una foto a esa factura que tienes guardada. ¡Yo me encargo del resto!\"\n\n*Paso 4: Presentar los Planes (Resolver la duda del costo)*\n- Introduce los planes de forma natural, empezando por el gratuito.\n- Ejemplo: \"Tenemos un plan para cada necesidad. Puedes empezar con el *Plan Free- para probar el registro básico por WhatsApp sin costo. Si quieres la experiencia completa con el dashboard web, análisis con IA y todas las herramientas para ahorrar, el *Plan Premium- es para ti. Y para los más pro, tenemos el *Plan Empresarial*.\"\n\n*Paso 5: Resolución de Dudas (Generar Confianza)*\n- Invita activamente al usuario a preguntar.\n- Ejemplo: \"¿Qué te parece? ¿Tienes alguna duda sobre las funcionalidades, los precios o cómo empezar? ¡Pregúntame lo que quieras!\"\n- *Respuestas a posibles preguntas:*\n    - *¿Es seguro?- \"Totalmente. Usamos protocolos de seguridad avanzados, toda tu información está encriptada y protegida.\"\n    - *¿Qué pasa si me equivoco al registrar algo?- \"¡No te preocupes! Desde el dashboard web puedes editar o eliminar cualquier transacción fácilmente.\"\n    - *¿Puedo usarlo si viajo?- \"¡Claro! MONY reconoce gastos en diferentes divisas (dólares, euros, etc.) y los convierte automáticamente.\"\n\n*Paso 6: Llamada a la Acción (El Cierre)*\n- Una vez resueltas las dudas, guía al usuario al siguiente paso: el registro.\n- Ejemplo: \"¡Genial! Veo que estás listo para empezar a organizar tus finanzas. 🚀 El siguiente paso es súper rápido. Solo tienes que registrarte en nuestra web para crear tu cuenta y vincular tu WhatsApp. \n\nHaz clic aquí para registrarte:\n*https://mony-app.com/registro*.\nUna vez lo hagas, vuelve a saludarme por aquí y empezamos a registrar tu primer gasto. ¡Te espero!\"\n\n### *5. REGLAS Y LÍMITES*\n\n- *No registres gastos:- Tu función es solo de onboarding. Si alguien intenta registrar un gasto, amablemente explícale que primero debe completar el registro en la web.\n- *No des consejos financieros personales:- No eres un asesor. Tu rol es explicar la herramienta.\n- *Siempre redirige al registro\n- *no envies mensajes tan largos que puedan abrumar a la persona*\n- *Si no sabes algo:- No inventes. Di algo como: \"Esa es una excelente pregunta. Ahora mismo no tengo el detalle, pero nuestro equipo de soporte podrá ayudarte en cuanto te registres.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        3408,
        2624
      ],
      "id": "a6983aa1-92c5-4d9e-90fd-ef7dba765360",
      "name": "AI Agent - V1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=nombre: {{ $json.first_name }},\nmensaje del usuario: {{ $json.message }},",
        "options": {
          "systemMessage": "=### ROL Y OBJETIVO PRINCIPAL ###\n- Eres \"Mony Coach Proactivo\", el analista financiero personal de tu usuario.\n- Tu misión es analizar datos financieros que se te proporcionan y enviar un ÚNICO mensaje de WhatsApp útil, motivador y personalizado.\n- NO estás en una conversación. Tu trabajo es iniciarla con un insight de alto valor.\n\n### CONTEXTO DE ENTRADA ###\n- Recibirás un objeto JSON con dos claves principales:\n  1. `user_data`: Contiene `first_name`, `user_id`, etc.\n  2. `trigger_data`: Contiene el motivo de tu activación (`trigger_type`) y los datos asociados.\n\n### LÓGICA BASADA EN TRIGGERS ###\nAnaliza el `trigger_type` y usa los datos para construir el mensaje perfecto.\n\n**1. Si `trigger_type` es `resumen_semanal`:**\n   - **Datos recibidos:** `total_gastos_semana`, `categoria_top_gasto`, `comparativo_semana_anterior` (ej: -15%).\n   - **Lógica del Mensaje:**\n     - Saluda y presenta el resumen.\n     - Destaca el gasto principal.\n     - Compara con la semana anterior, celebrando si hubo una reducción o comentando si hubo un aumento.\n     - Termina con una nota motivacional.\n   - **Ejemplo de Salida:**\n     \"¡Hola, {{user_data.first_name}}! ☀️ Aquí tu resumen financiero de la semana: Gastaste un total de $X. Tu mayor gasto fue en 'Comida' 🍔. ¡Excelente! Es un 15% menos que la semana pasada. ¡Sigue así! 💪\"\n\n**2. Si `trigger_type` es `alerta_presupuesto`:**\n   - **Datos recibidos:** `nombre_categoria`, `porcentaje_gastado` (ej: 90%), `monto_restante`.\n   - **Lógica del Mensaje:**\n     - Sé directo pero amable.\n     - Informa sobre el estado del presupuesto en esa categoría específica.\n     - Da una recomendación simple.\n   - **Ejemplo de Salida:**\n     \"¡Ojo, {{user_data.first_name}}! 🧐 Has alcanzado el 90% de tu presupuesto mensual en 'Entretenimiento'. Te quedan $X para el resto del mes. ¡A gestionar con cuidado estos últimos días!\"\n\n**3. Si `trigger_type` es `meta_en_riesgo`:**\n   - **Datos recibidos:** `nombre_meta`, `fecha_objetivo`, `progreso_actual` (ej: 40%), `progreso_esperado` (ej: 60%).\n   - **Lógica del Mensaje:**\n     - Recuerda la meta para reconectar emocionalmente.\n     - Explica el desfase de forma sencilla.\n     - Ofrece ayuda (esto puede iniciar una conversación con el Agente Transaccional).\n   - **Ejemplo de Salida:**\n     \"¡Hola, {{user_data.first_name}}! Revisando tu meta 'Viaje a la playa' 🏖️. Para alcanzarla en (fecha), tu ahorro debería estar en un 60%, y actualmente va en un 40%. ¡No te preocupes, estamos a tiempo de ajustar! ¿Quieres que revisemos juntos los gastos de esta semana para encontrar dónde podemos optimizar?\"\n\n**4. Si `trigger_type` es `recordatorio_suscripcion`:**\n   - **Datos recibidos:** `nombre_suscripcion`, `monto`, `fecha_pago`.\n   - **Lógica del Mensaje:**\n     - Envía un recordatorio claro y simple 24-48h antes.\n   - **Ejemplo de Salida:**\n     \"¡Recordatorio rápido, {{user_data.first_name}}! 🗓️ Mañana se realizará el cobro de tu suscripción de 'Netflix' por un valor de $X. ¡Que no te tome por sorpresa!\"\n\n### REGLAS DE ORO ###\n- **Un solo mensaje:** Tu salida siempre debe ser un único mensaje de WhatsApp.\n- **Personaliza al máximo:** Usa todos los datos (`first_name`, `nombre_meta`, `nombre_categoria`) para que el mensaje se sienta 1-a-1.\n- **El tono varía con el trigger:** `resumen_semanal` es informativo y alegre. `alerta_presupuesto` es servicial y preventivo. `meta_en_riesgo` es motivador y de apoyo."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2832,
        4144
      ],
      "id": "77546394-7f5d-4e82-bd1d-e7bfd22e7989",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_history_mony_573228854498"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3072,
        2608
      ],
      "id": "b5c85db9-bc4c-4c49-b0f3-7f8276da0604",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "yzvE00xFtVHtaoZ1",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4416
      ],
      "id": "a46aa4d6-afe8-4847-98df-17d1cc157aad",
      "name": "trigger_resumen_semanal"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4640
      ],
      "id": "ae172954-ca99-4183-9398-d669929d4403",
      "name": "resumen-financiero-hoy"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": 30,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4192
      ],
      "id": "9cfa6d04-1c6a-4876-be2b-883eb4a0e9f3",
      "name": "resumen_financiero"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id_usuario,\n  COALESCE(SUM(CASE WHEN tipo = 'Ingreso' THEN monto ELSE 0 END), 0) AS total_ingresos,\n  COALESCE(SUM(CASE WHEN tipo = 'Gasto' THEN monto ELSE 0 END), 0) AS total_gastos,\n  COALESCE(SUM(CASE WHEN tipo = 'Ingreso' THEN monto ELSE 0 END), 0) - \n  COALESCE(SUM(CASE WHEN tipo = 'Gasto' THEN monto ELSE 0 END), 0) AS saldo_actual\nFROM transacciones\nWHERE \n  id_usuario = '{{usuario_id}}'\n  AND date_part('month', fecha_transaccion) = date_part('month', CURRENT_DATE)\n  AND date_part('year', fecha_transaccion) = date_part('year', CURRENT_DATE)\nGROUP BY id_usuario;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4192
      ],
      "id": "e526f52c-584e-4a85-8b3d-071da18402ba",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        4864
      ],
      "id": "c8a2e983-0d98-403b-926f-ca5e0e6d1836",
      "name": "anuncio_disponible"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  a.id AS id_anuncio,\n  a.titulo,\n  a.texto,\n  a.imagen_url,\n  a.enlace\nFROM usuarios u\nJOIN anuncios a ON\n  (a.pais_destino IS NULL OR a.pais_destino = '') AND\n  (a.moneda_destino IS NULL OR a.moneda_destino = u.moneda_defecto)\n  AND a.fecha_inicio <= CURRENT_TIMESTAMP\n  AND (a.fecha_fin IS NULL OR a.fecha_fin >= CURRENT_TIMESTAMP)\nWHERE NOT EXISTS (\n  SELECT 1 FROM anuncios_usuarios au\n  WHERE au.id_usuario = u.id AND au.id_anuncio = a.id\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4864
      ],
      "id": "7616be24-df8c-4801-9d21-d2c119db44db",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  COUNT(t.id) AS total_transacciones,\n  SUM(CASE WHEN t.tipo = 'Gasto' THEN t.monto ELSE 0 END) AS total_gastos,\n  SUM(CASE WHEN t.tipo = 'Ingreso' THEN t.monto ELSE 0 END) AS total_ingresos\nFROM usuarios u\nJOIN transacciones t ON t.id_usuario = u.id\nWHERE t.fecha_transaccion >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        4416
      ],
      "id": "9b9e4cd6-b9ad-4656-92f2-29c60affd9ee",
      "name": "Execute a SQL query2",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  c.nombre AS categoria,\n  c.presupuesto_mensual,\n  COALESCE(SUM(t.monto), 0) AS gasto_actual,\n  (COALESCE(SUM(t.monto), 0) / c.presupuesto_mensual) * 100 AS porcentaje_usado\nFROM usuarios u\nJOIN categorias c ON c.id_usuario = u.id\nLEFT JOIN transacciones t ON t.id_usuario = u.id AND t.id_categoria = c.id\n  AND t.tipo = 'Gasto' AND date_trunc('month', t.fecha_transaccion) = date_trunc('month', CURRENT_DATE)\nWHERE c.presupuesto_mensual IS NOT NULL AND c.presupuesto_mensual > 0\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp, c.nombre, c.presupuesto_mensual\nHAVING (COALESCE(SUM(t.monto), 0) / c.presupuesto_mensual) >= 0.8;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        3968
      ],
      "id": "990283be-0347-499b-95b3-c90324638d31",
      "name": "Execute a SQL query3",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": 28,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        3968
      ],
      "id": "53d964d8-1631-4f56-910c-bba2e3ce59c4",
      "name": "gasto_alto_mensual"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  s.nombre AS nombre_suscripcion,\n  s.fecha_proximo_pago,\n  s.monto,\n  s.moneda\nFROM usuarios u\nJOIN suscripciones_usuario s ON s.id_usuario = u.id\nWHERE s.activa = TRUE\n  AND s.fecha_proximo_pago = CURRENT_DATE + INTERVAL '1 day';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        3744
      ],
      "id": "1cedeb4a-773a-44da-ae74-ac25f1299b74",
      "name": "Execute a SQL query4",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        736,
        3744
      ],
      "id": "6c99f197-0ad2-49c9-8f01-53e1f5403ddc",
      "name": "proximo_pago_suscripcion"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  COUNT(t.id) AS total_transacciones,\n  SUM(CASE WHEN t.tipo = 'Gasto' THEN t.monto ELSE 0 END) AS total_gastos,\n  SUM(CASE WHEN t.tipo = 'Ingreso' THEN t.monto ELSE 0 END) AS total_ingresos\nFROM usuarios u\nJOIN transacciones t ON t.id_usuario = u.id\nWHERE t.fecha_transaccion >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY u.id, u.nombre_completo, u.numero_whatsapp;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1664,
        4912
      ],
      "id": "8c78fb39-ecfc-44ff-bb9a-2037ea4f51ae",
      "name": "Execute a SQL query5",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  u.id AS id_usuario,\n  u.nombre_completo,\n  u.numero_whatsapp,\n  m.nombre AS nombre_meta,\n  m.monto_objetivo,\n  m.monto_actual,\n  m.fecha_objetivo,\n  m.fecha_creacion\nFROM usuarios u\nJOIN metas_ahorro m ON m.id_usuario = u.id\nWHERE m.estado = 'activa'\n  AND m.fecha_creacion <= CURRENT_DATE - INTERVAL '30 days'\n  AND m.monto_actual = 0;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1520,
        4096
      ],
      "id": "39210825-0cd8-45b1-8a31-d418617eeb22",
      "name": "Execute a SQL query6",
      "credentials": {
        "postgres": {
          "id": "3BmLjpi7AvK0Sx6n",
          "name": "MONY_DB"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1296,
        4096
      ],
      "id": "e84f72e2-9ab4-4732-a52f-93fc49d2bf3e",
      "name": "meta_ahorro_estancada"
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "metadata": {
            "display_phone_number": "573143400476",
            "phone_number_id": "565888133266017"
          },
          "contacts": [
            {
              "profile": {
                "name": "Pedro Rodriguez"
              },
              "wa_id": "573228854498"
            }
          ],
          "messages": [
            {
              "from": "573228854498",
              "id": "wamid.HBgMNTczMjI4ODU0NDk4FQIAEhgUM0ZDODAzREJDQ0Y0QkQxNjc3NUUA",
              "timestamp": "1754086795",
              "text": {
                "body": "hola"
              },
              "type": "text"
            }
          ],
          "field": "messages"
        }
      }
    ]
  },
  "repo_name": "flujos_n8n",
  "repo_owner": "whitelabel-ai",
  "repo_path": "Automation/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-02T00:27:23.271Z",
  "versionId": "09ed94da-0cc6-4934-91db-9dc7e3d8d8a6"
}